(function(){
/** @license Copyright (c) 2020, Blockthrough All rights reserved.
 See license text at: https://blockthrough.com/license
*/(()=>{var __webpack_modules__={905:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{yC:()=>DeviceTypeAll,Xh:()=>browser,Jv:()=>platform,Uh:()=>device,tq:()=>isMobile,l7:()=>getDeviceType});const PlatformUnknown="unknown",PlatformAndroid="android",PlatformIOS="ios",PlatformWindows="windows",PlatformLinux="linux",PlatformOSX="osx",PlatformWindowsPhone="windowsphone",BrowserUnknown="unknown",BrowserChrome="chrome",BrowserFirefox="firefox",BrowserIE="ie",BrowserEdge="edge",BrowserOpera="opera",BrowserSafari="safari",BrowserUCBrowser="uc",DeviceUnknown="unknown",DeviceHighEndPhone="highendphone",DeviceTablet="tablet",DevicePersonalComputer="pc",DeviceConnectedTV="tv",DeviceGameConsole="console",DeviceTypeAll="all",DeviceTypeDesktop="desktop",DeviceTypeMobile="mobile";var browser=function(){var ua=navigator.userAgent;return/edge/i.test(ua)?BrowserEdge:/opera/i.test(ua)||/opr|opios/i.test(ua)?BrowserOpera:/chrome|chromium/i.test(ua)?BrowserChrome:/firefox|iceweasel|fxios/i.test(ua)?BrowserFirefox:/msie|trident/i.test(ua)?BrowserIE:/^((?!chrome|android).)*safari/i.test(ua)?BrowserSafari:/ucbrowser/i.test(ua)?BrowserUCBrowser:window.chrome?BrowserChrome:"undefined"!=typeof InstallTrigger?BrowserFirefox:eval("/*@cc_on!@*/false")||document.documentMode?BrowserIE:window.StyleMedia?BrowserEdge:BrowserUnknown},platform=function(){var e=navigator.userAgent;return/windows|win32/i.test(e)?PlatformWindows:/ipod|iphone|ipad/i.test(e)?PlatformIOS:/android/i.test(e)?PlatformAndroid:/macintosh|mac os x/i.test(e)?PlatformOSX:/linux/i.test(e)?PlatformLinux:/windows phone/i.test(e)?PlatformWindowsPhone:PlatformUnknown},device=function(){var e=navigator.userAgent;return/tablet|ipad/i.test(e)?DeviceTablet:/mobile/i.test(e)||/android|webos|iphone|ipod|blackberry|iemobile|windows phone|opera mini/i.test(e)||/ucbrowser/i.test(e)&&window.ucweb?DeviceHighEndPhone:DevicePersonalComputer};function isMobile(){return"function"==typeof window.bt_isMobileCustom?window.bt_isMobileCustom():/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||window.opera).substr(0,4))}function getDeviceType(){return isMobile()?DeviceTypeMobile:DeviceTypeDesktop}},491:(e,t,n)=>{"use strict";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{z:()=>c,Z:()=>d});var r=n(614),o=n(302);const a=Boolean(window.console&&window.console.info);let s=!1;!function(){try{s=window.location.href.indexOf("bt_debug=true")>=0||"true"===window.localStorage.bt_debug}catch(e){s=!1}}();class d{constructor(){let{prefix:e="",level:t=c.DEFAULT}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,"tag","Blockthrough"),i(this,"prefix",""),this.setPrefix(e),this.setLevel(t)}setPrefix(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.prefix=e}setLevel(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:c.DEFAULT;m(e)?this.level=e:this.level=c.DEFAULT}log(e,t,n,i){if(!s||!a)return;if(arguments.length<3||!m(e)||"object"!=typeof t||"string"!=typeof n)throw new TypeError;if(e<this.level)return;const r=(new Date).getTime()-p,o=g(t);let d="";d+="%c["+this.tag+" - "+u[e]+"]%c",d+="%c[%s]%c ",o&&(d+="%c["+o+"]%c "),this.prefix&&(d+=this.prefix),d+=n;let c=[];c.push(d),c.push("color: #000000; background-color: "+h[e]),c.push("background-color: inherit"),c.push("color: #757575;"),c.push(function(e){if(e<1e3)return Math.round(e).toString()+"ms";return(e/1e3).toFixed(2)+"s"}(r)),c.push("background-color: inherit"),o&&(c.push("color: "+function(e){const t=g(e);if(!t)return"#000000";return f[function(e){let t=2166136261;for(let n=0;n<e.length;++n)t^=e.charCodeAt(n),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return t>>>0}(t)%f.length]}(t)),c.push("color: inherit")),c=c.concat(Array.prototype.slice.call(arguments,3)),console.info.apply(console,c)}debugf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.DEBUG,e,t].concat(n)),w(i,l.DEBUG)}infof(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.INFO,e,t].concat(n)),w(i,l.INFO)}noticef(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.NOTICE,e,t].concat(n)),w(i,l.NOTICE)}warningf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.WARNING,e,t].concat(n)),w(i,l.WARNING)}errorf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.ERROR,e,t].concat(n)),i||(i={sendToServer:!0,sendPercentage:1,event:"general_error_event",error:{name:t}}),w(i,l.ERROR)}criticalf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.CRITICAL,e,t].concat(n)),i||(i={sendToServer:!0,sendPercentage:1,event:"general_critical_event",error:{name:t}}),w(i,l.CRITICAL)}alertf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.ALERT,e,t].concat(n)),w(i,l.ALERT)}emergencyf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;this.log.apply(this,[c.EMERGENCY,e,t].concat(n)),w(i,l.EMERGENCY)}}const c={DEFAULT:0,DEBUG:1,INFO:2,NOTICE:3,WARNING:4,ERROR:5,CRITICAL:6,ALERT:7,EMERGENCY:8},l={DEBUG:0,INFO:1,NOTICE:2,WARNING:3,ERROR:4,CRITICAL:5,ALERT:6,EMERGENCY:7},u={[c.DEFAULT]:"DFT",[c.DEBUG]:"DBG",[c.INFO]:"INF",[c.NOTICE]:"NTC",[c.WARNING]:"WRN",[c.ERROR]:"ERR",[c.CRITICAL]:"CRT",[c.ALERT]:"ALR",[c.EMERGENCY]:"EMR"},h={[c.DEFAULT]:"#F5F5F5",[c.DEBUG]:"#BBDEFB",[c.INFO]:"#B3E5FC",[c.NOTICE]:"#DCEDC8",[c.WARNING]:"#FFE0B2",[c.ERROR]:"#FFCCBC",[c.CRITICAL]:"#E57373",[c.ALERT]:"#F06292",[c.EMERGENCY]:"#BA68C8"},f=["#B71C1C","#880E4F","#4A148C","#311B92","#1A237E","#0D47A1","#01579B","#006064","#004D40","#1B5E20","#33691E","#827717","#F57F17","#FF6F00","#E65100","#BF360C","#3E2723","#37474F"],p=(new Date).getTime();function g(e){return e&&e.id||null}function m(e){return"number"==typeof e&&void 0!==u[e]}function w(e,t){if(e&&e.event&&e.sendToServer&&t&&(!e.sendPercentage||r.Z.commonUtils.getTrueByProbability(e.sendPercentage))){const n=Object.assign({},e,{severity:t});o.Y.fireEvent("sendLog",n)}}},302:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var i=new function(){this.events={},this.hasEventListener=function(e){return this.events.hasOwnProperty(e)},this.addEventListener=function(e,t){this.hasEventListener(e)?this.events[e].push(t):this.events[e]=[t]},this.removeEventListener=function(e,t){if(this.hasEventListener(e)){var n=this.events[e].indexOf(t);-1!=n&&this.events[e].splice(n,1)}},this.fireEvent=function(e,t,n,i){if(this.hasEventListener(e))for(var o=new r(e,t),a=this.events[e],s=a.length,d=0;d<s;d++){try{var c=a[d].call(n,o)}catch(e){console.error("CustomEvents - error in `fireEvent`:",e)}if(null!=c)return c;if(o.shouldStop)return}}},r=function(e,t){this.name=e,this.data=t,this.shouldStop=!1}},17:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var i={selectorPosition:{APPEND_CHILD:0,INSERT_BEFORE:1},complianceStatus:{UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},acceptableStandardScreenSize:{width:1366,height:768},headerBiddingType:{prebid:1},refreshType:{UNKNOWN:0,ALL:1,VISIBLE:2,HIDDEN:3},elementVisibility:{VISIBLE:"VISIBLE",HIDDEN:"HIDDEN",NOT_FOUND:"NOT_FOUND"},htmlElements:["HTMLScriptElement","HTMLElement","HTMLVideoElement","HTMLAudioElement","HTMLHtmlElement","HTMLHeadElement","HTMLLinkElement","HTMLStyleElement","HTMLBodyElement","HTMLFormElement","HTMLSelectElement","HTMLOptionElement","HTMLInputElement","HTMLTextAreaElement","HTMLButtonElement","HTMLLabelElement","HTMLFieldSetElement","HTMLLegendElement","HTMLUListElement","HTMLOListElement","HTMLDListElement","HTMLDirectoryElement","HTMLMenuElement","HTMLLIElement","HTMLDivElement","HTMLParagraphElement","HTMLHeadingElement","HTMLQuoteElement","HTMLPreElement","HTMLBRElement","HTMLFontElement","HTMLHRElement","HTMLAnchorElement","HTMLImageElement","HTMLObjectElement","HTMLParamElement","HTMLMapElement","HTMLModElement","HTMLAreaElement","HTMLTableElement","HTMLTableCaptionElement","HTMLTableColElement","HTMLTableSectionElement","HTMLTableRowElement","HTMLTableCellElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement"]}},868:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=new function(){this.data={},this.setItem=function(e,t){this.data[e]=t},this.getItem=function(e){return this.data[e]},this.removeItem=function(e){delete this.data[e]},this.clearSharedObject=function(){this.data={}}},r=n(17),o=n(143),a="KGZ1bmN0aW9uKF8weDIwZTZiZixfMHg1ODg3ZDcpe3ZhciBfMHg4YjdlM2M9XzB4M2U2MixfMHg1MmEwOGY9XzB4MjBlNmJmKCk7d2hpbGUoISFbXSl7dHJ5e3ZhciBfMHgxN2M0YjI9LXBhcnNlSW50KF8weDhiN2UzYygweDFhMCkpLzB4MSoocGFyc2VJbnQoXzB4OGI3ZTNjKDB4MTk0KSkvMHgyKSstcGFyc2VJbnQoXzB4OGI3ZTNjKDB4MTczKSkvMHgzKihwYXJzZUludChfMHg4YjdlM2MoMHgxOTMpKS8weDQpK3BhcnNlSW50KF8weDhiN2UzYygweDE4NSkpLzB4NSooLXBhcnNlSW50KF8weDhiN2UzYygweDE5ZCkpLzB4NikrcGFyc2VJbnQoXzB4OGI3ZTNjKDB4MTg0KSkvMHg3Ky1wYXJzZUludChfMHg4YjdlM2MoMHgxN2UpKS8weDgrLXBhcnNlSW50KF8weDhiN2UzYygweDE2NSkpLzB4OStwYXJzZUludChfMHg4YjdlM2MoMHgxOTIpKS8weGE7aWYoXzB4MTdjNGIyPT09XzB4NTg4N2Q3KWJyZWFrO2Vsc2UgXzB4NTJhMDhmWydwdXNoJ10oXzB4NTJhMDhmWydzaGlmdCddKCkpO31jYXRjaChfMHgzYjgwZTQpe18weDUyYTA4ZlsncHVzaCddKF8weDUyYTA4Zlsnc2hpZnQnXSgpKTt9fX0oXzB4MzYwMSwweDFlZDAyKSwoZnVuY3Rpb24oKXt2YXIgXzB4M2FkMGIxPWZ1bmN0aW9uKF8weGEwYzY4ZCl7dmFyIF8weDMwODdlMD1fMHgzZTYyO2lmKCFfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MTcyKV0pe18weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxNzIpXT0hMHgwO3RyeXt2YXIgXzB4MjVkZmNkPV8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOWUpXVtfMHgzMDg3ZTAoMHgxN2EpXShfMHgzMDg3ZTAoMHgxOGQpKTsoXzB4YTBjNjhkWydkb2N1bWVudCddWydoZWFkJ118fF8weGEwYzY4ZFsnZG9jdW1lbnQnXVtfMHgzMDg3ZTAoMHgxODIpXXx8XzB4YTBjNjhkW18weDMwODdlMCgweDE5ZSldWydkb2N1bWVudEVsZW1lbnQnXSlbJ2FwcGVuZENoaWxkJ10oXzB4MjVkZmNkKSxfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MTllKV1bJ3N0eWxlU2hlZXRzJ11bMHgwXVtfMHgzMDg3ZTAoMHgxOTUpXShfMHgzMDg3ZTAoMHgxOWIpLDB4MCk7fWNhdGNoKF8weDMxZmUxNyl7fV8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOWUpXVtfMHgzMDg3ZTAoMHgxNmYpXT1kb2N1bWVudFtfMHgzMDg3ZTAoMHgxNzkpXSxfMHhhMGM2OGRbJ2RvY3VtZW50J11bJ2dldEVsZW1lbnRCeUlkJ109ZnVuY3Rpb24oXzB4MjNhY2NhKXt2YXIgXzB4MTc4MDY1PV8weDMwODdlMDt0cnl7aWYoJ2llY2N0ZXN0Jz09PV8weDIzYWNjYSlyZXR1cm4gXzB4YTBjNjhkWydkb2N1bWVudCddW18weDE3ODA2NSgweDE3YSldKCdiJyk7fWNhdGNoKF8weDM2ZmU5Yil7fXJldHVybiBfMHhhMGM2OGRbJ2RvY3VtZW50J11bXzB4MTc4MDY1KDB4MTZmKV1bXzB4MTc4MDY1KDB4MTZiKV0odGhpcyxfMHgyM2FjY2EpO30sXzB4YTBjNjhkWydkb2N1bWVudCddW18weDMwODdlMCgweDE5NyldPWRvY3VtZW50W18weDMwODdlMCgweDE3YSldLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOWUpXVtfMHgzMDg3ZTAoMHgxN2EpXT1mdW5jdGlvbihfMHgzMGJkOTQpe3ZhciBfMHg0NzE2YWQ9XzB4MzA4N2UwO3RyeXtpZihfMHg0NzE2YWQoMHgxOWMpPT09XzB4MzBiZDk0W18weDQ3MTZhZCgweDFhNCldKCkpe3ZhciBfMHg0YjU2ZjQ9XzB4YTBjNjhkWydkb2N1bWVudCddW18weDQ3MTZhZCgweDE5NyldW18weDQ3MTZhZCgweDE2YildKHRoaXMsXzB4MzBiZDk0KTtyZXR1cm4gXzB4NGI1NmY0W18weDQ3MTZhZCgweDE3NCldKF8weDQ3MTZhZCgweDFhMiksZnVuY3Rpb24oKXt2YXIgXzB4MjI0MGI5PV8weDQ3MTZhZDt0cnl7dGhpc1tfMHgyMjQwYjkoMHgxN2QpXVtfMHgyMjQwYjkoMHgxNzcpXT1fMHgzYWQwYjEsdGhpc1tfMHgyMjQwYjkoMHgxN2QpXVtfMHgyMjQwYjkoMHgxNzcpXVtfMHgyMjQwYjkoMHgxNmIpXSh0aGlzWydjb250ZW50V2luZG93J10sdGhpc1snY29udGVudFdpbmRvdyddKTt9Y2F0Y2goXzB4MWZiMjEyKXt9fSksXzB4NGI1NmY0O319Y2F0Y2goXzB4NTUxY2EwKXt9cmV0dXJuIF8weGEwYzY4ZFtfMHg0NzE2YWQoMHgxOWUpXVtfMHg0NzE2YWQoMHgxOTcpXVtfMHg0NzE2YWQoMHgxNmIpXSh0aGlzLF8weDMwYmQ5NCk7fSxfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MTZhKV1bXzB4MzA4N2UwKDB4MTg4KV1bXzB4MzA4N2UwKDB4MTcwKV09XzB4YTBjNjhkW18weDMwODdlMCgweDE2YSldW18weDMwODdlMCgweDE4OCldW18weDMwODdlMCgweDFhMyldLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxNmEpXVtfMHgzMDg3ZTAoMHgxODgpXVtfMHgzMDg3ZTAoMHgxYTMpXT1mdW5jdGlvbihfMHgxNjk2ODUpe3ZhciBfMHgzZjRmNDk9XzB4MzA4N2UwLF8weDE1NDRhNT1fMHhhMGM2OGRbXzB4M2Y0ZjQ5KDB4MTZhKV1bJ3Byb3RvdHlwZSddW18weDNmNGY0OSgweDE3MCldWydjYWxsJ10odGhpcyxfMHgxNjk2ODUpO3RyeXtmb3IodmFyIF8weDI1ZTBjOT0weDA7XzB4MjVlMGM5PF8weDE2OTY4NVtfMHgzZjRmNDkoMHgxNmQpXVtfMHgzZjRmNDkoMHgxNzEpXTtfMHgyNWUwYzkrKyknSUZSQU1FJz09PV8weDE2OTY4NVtfMHgzZjRmNDkoMHgxNmQpXVtfMHgyNWUwYzldWyd0YWdOYW1lJ10mJihfMHgxNjk2ODVbXzB4M2Y0ZjQ5KDB4MTZkKV1bXzB4MjVlMGM5XVtfMHgzZjRmNDkoMHgxN2QpXXx8XzB4MTY5Njg1W18weDNmNGY0OSgweDE2ZCldW18weDI1ZTBjOV1bXzB4M2Y0ZjQ5KDB4MTc0KV0oXzB4M2Y0ZjQ5KDB4MWEyKSxmdW5jdGlvbigpe3ZhciBfMHg3OWM5NjA9XzB4M2Y0ZjQ5O3RoaXNbXzB4NzljOTYwKDB4MTdkKV1bJ3dyYXBJZnJhbWUnXT1fMHgzYWQwYjEsdGhpc1tfMHg3OWM5NjAoMHgxN2QpXVtfMHg3OWM5NjAoMHgxNzcpXVtfMHg3OWM5NjAoMHgxNmIpXSh0aGlzW18weDc5Yzk2MCgweDE3ZCldLHRoaXNbJ2NvbnRlbnRXaW5kb3cnXSk7fSksXzB4MTY5Njg1W18weDNmNGY0OSgweDE2ZCldW18weDI1ZTBjOV1bXzB4M2Y0ZjQ5KDB4MTdkKV1bXzB4M2Y0ZjQ5KDB4MTc3KV09XzB4M2FkMGIxLF8weDE2OTY4NVsnY2hpbGRyZW4nXVtfMHgyNWUwYzldW18weDNmNGY0OSgweDE3ZCldW18weDNmNGY0OSgweDE3NyldW18weDNmNGY0OSgweDE2YildKHRoaXMsXzB4MTY5Njg1W18weDNmNGY0OSgweDE2ZCldW18weDI1ZTBjOV1bJ2NvbnRlbnRXaW5kb3cnXSkpO18weDNmNGY0OSgweDE3Yik9PT1fMHgxNjk2ODVbXzB4M2Y0ZjQ5KDB4MTc1KV0mJihfMHgxNjk2ODVbXzB4M2Y0ZjQ5KDB4MTdkKV18fF8weDE2OTY4NVsnYWRkRXZlbnRMaXN0ZW5lciddKCdsb2FkJyxmdW5jdGlvbigpe3ZhciBfMHgyNjY3NDY9XzB4M2Y0ZjQ5O3RoaXNbXzB4MjY2NzQ2KDB4MTdkKV1bJ3dyYXBJZnJhbWUnXT1fMHgzYWQwYjEsdGhpc1tfMHgyNjY3NDYoMHgxN2QpXVsnd3JhcElmcmFtZSddW18weDI2Njc0NigweDE2YildKHRoaXNbXzB4MjY2NzQ2KDB4MTdkKV0sdGhpc1tfMHgyNjY3NDYoMHgxN2QpXSk7fSksXzB4MTY5Njg1W18weDNmNGY0OSgweDE3ZCldW18weDNmNGY0OSgweDE3NyldPV8weDNhZDBiMSxfMHgxNjk2ODVbXzB4M2Y0ZjQ5KDB4MTdkKV1bXzB4M2Y0ZjQ5KDB4MTc3KV1bXzB4M2Y0ZjQ5KDB4MTZiKV0odGhpcyxfMHgxNjk2ODVbXzB4M2Y0ZjQ5KDB4MTdkKV0pKTt9Y2F0Y2goXzB4NDJmMjFiKXt9cmV0dXJuIF8weDE1NDRhNTt9LF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxNmEpXVsncHJvdG90eXBlJ11bXzB4MzA4N2UwKDB4MWExKV09XzB4YTBjNjhkW18weDMwODdlMCgweDE2YSldW18weDMwODdlMCgweDE4OCldWydpbnNlcnRCZWZvcmUnXSxfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MTZhKV1bXzB4MzA4N2UwKDB4MTg4KV1bJ2luc2VydEJlZm9yZSddPWZ1bmN0aW9uKF8weDU3NDEwNSxfMHg1MjhkNzgpe3ZhciBfMHgxZGJlMjY9XzB4MzA4N2UwLF8weDI5MDhiOT1fMHhhMGM2OGRbXzB4MWRiZTI2KDB4MTZhKV1bXzB4MWRiZTI2KDB4MTg4KV1bXzB4MWRiZTI2KDB4MWExKV1bXzB4MWRiZTI2KDB4MTZiKV0odGhpcyxfMHg1NzQxMDUsXzB4NTI4ZDc4KTt0cnl7Zm9yKHZhciBfMHgzOTc3NjA9MHgwO18weDM5Nzc2MDxfMHg1NzQxMDVbXzB4MWRiZTI2KDB4MTZkKV1bXzB4MWRiZTI2KDB4MTcxKV07XzB4Mzk3NzYwKyspXzB4MWRiZTI2KDB4MTdiKT09PV8weDU3NDEwNVsnY2hpbGRyZW4nXVtfMHgzOTc3NjBdW18weDFkYmUyNigweDE3NSldJiYoXzB4NTc0MTA1W18weDFkYmUyNigweDE2ZCldW18weDM5Nzc2MF1bXzB4MWRiZTI2KDB4MTdkKV18fF8weDU3NDEwNVtfMHgxZGJlMjYoMHgxNmQpXVtfMHgzOTc3NjBdW18weDFkYmUyNigweDE3NCldKF8weDFkYmUyNigweDFhMiksZnVuY3Rpb24oKXt2YXIgXzB4NThmOTE4PV8weDFkYmUyNjt0aGlzWydjb250ZW50V2luZG93J11bXzB4NThmOTE4KDB4MTc3KV09XzB4M2FkMGIxLHRoaXNbXzB4NThmOTE4KDB4MTdkKV1bJ3dyYXBJZnJhbWUnXVsnY2FsbCddKHRoaXNbXzB4NThmOTE4KDB4MTdkKV0sdGhpc1tfMHg1OGY5MTgoMHgxN2QpXSk7fSksXzB4NTc0MTA1W18weDFkYmUyNigweDE2ZCldW18weDM5Nzc2MF1bJ2NvbnRlbnRXaW5kb3cnXVtfMHgxZGJlMjYoMHgxNzcpXT1fMHgzYWQwYjEsXzB4NTc0MTA1W18weDFkYmUyNigweDE2ZCldW18weDM5Nzc2MF1bXzB4MWRiZTI2KDB4MTdkKV1bJ3dyYXBJZnJhbWUnXVtfMHgxZGJlMjYoMHgxNmIpXSh0aGlzLF8weDU3NDEwNVsnY2hpbGRyZW4nXVtfMHgzOTc3NjBdW18weDFkYmUyNigweDE3ZCldKSk7XzB4MWRiZTI2KDB4MTdiKT09PV8weDU3NDEwNVtfMHgxZGJlMjYoMHgxNzUpXSYmKF8weDU3NDEwNVtfMHgxZGJlMjYoMHgxN2QpXXx8XzB4NTc0MTA1WydhZGRFdmVudExpc3RlbmVyJ10oJ2xvYWQnLGZ1bmN0aW9uKCl7dmFyIF8weDJjMmJjMD1fMHgxZGJlMjY7dGhpc1snY29udGVudFdpbmRvdyddW18weDJjMmJjMCgweDE3NyldPV8weDNhZDBiMSx0aGlzW18weDJjMmJjMCgweDE3ZCldWyd3cmFwSWZyYW1lJ11bJ2NhbGwnXSh0aGlzWydjb250ZW50V2luZG93J10sdGhpc1tfMHgyYzJiYzAoMHgxN2QpXSk7fSksXzB4NTc0MTA1W18weDFkYmUyNigweDE3ZCldW18weDFkYmUyNigweDE3NyldPV8weDNhZDBiMSxfMHg1NzQxMDVbXzB4MWRiZTI2KDB4MTdkKV1bXzB4MWRiZTI2KDB4MTc3KV1bXzB4MWRiZTI2KDB4MTZiKV0odGhpcyxfMHg1NzQxMDVbXzB4MWRiZTI2KDB4MTdkKV0pKTt9Y2F0Y2goXzB4MjhjOTAzKXt9cmV0dXJuIF8weDI5MDhiOTt9LF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOWUpXVsnd3JpdGVPJ109XzB4YTBjNjhkW18weDMwODdlMCgweDE5ZSldW18weDMwODdlMCgweDE5OCldLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOWUpXVtfMHgzMDg3ZTAoMHgxOTgpXT1mdW5jdGlvbihfMHg0NjUyYjEpe3ZhciBfMHg1Y2JjMmQ9XzB4MzA4N2UwO3RyeXtpZihfMHg0NjUyYjEmJi9kYXRhXC1kY21cLXJlbmRlcmluZ1wtbW9kZVxzPz1ccz9bJyJdaWZyYW1lWyciXS9bXzB4NWNiYzJkKDB4MTkxKV0oXzB4NDY1MmIxKSl7dmFyIF8weDU0ZTVmMj1fMHg0NjUyYjFbXzB4NWNiYzJkKDB4MTY2KV0oL2RhdGFcLWRjbVwtcmVuZGVyaW5nXC1tb2RlXHM/PVxzP1snIl1pZnJhbWVbJyJdLyksXzB4MTBkZjg1PV8weDU0ZTVmMlsweDBdW18weDVjYmMyZCgweDE3NildKF8weDVjYmMyZCgweDE5YyksXzB4NWNiYzJkKDB4MTgxKSk7XzB4NDY1MmIxPV8weDQ2NTJiMVtfMHg1Y2JjMmQoMHgxNzYpXShfMHg1NGU1ZjIsXzB4MTBkZjg1KTt9aWYoXzB4NDY1MmIxJiYve1tee10rcmVuZGVyQXM6ICdCQUNLVVBfSU1BR0UnW159XSt9L1tfMHg1Y2JjMmQoMHgxOTEpXShfMHg0NjUyYjEpKXt2YXIgXzB4MTRhYThjPV8weDQ2NTJiMVtfMHg1Y2JjMmQoMHgxNjYpXSgve1tee10rcmVuZGVyQXM6ICdCQUNLVVBfSU1BR0UnW159XSt9LylbMHgwXSxfMHg0Nzg1NzU9LyhbLlxTXHNdK3ByaW1hcnlGaWxlczogKShcW1teXFtdK3JlbmRlckFzOiAnQkFDS1VQX0lNQUdFJ1teXF1dK1xdKShbLlxTXHNdKykvZztfMHg0NjUyYjE9XzB4NDY1MmIxW18weDVjYmMyZCgweDE3NildKF8weDQ3ODU3NSxfMHg1Y2JjMmQoMHgxOWEpK18weDE0YWE4YytfMHg1Y2JjMmQoMHgxNjgpKTt9XzB4NDY1MmIxJiZfMHg0NjUyYjFbXzB4NWNiYzJkKDB4MTgzKV0oJ3R5cGU6XHgyMFx4MjdIVE1MNVx4MjcnKT4tMHgxJiYoXzB4NDY1MmIxPV8weDQ2NTJiMVtfMHg1Y2JjMmQoMHgxNzYpXSgndHlwZTpceDIwXHgyN0hUTUw1XHgyNycsXzB4NWNiYzJkKDB4MTZjKSkpO3ZhciBfMHgxYzBmMjQ9LyhbLlxTXHNdK2lmXCgiRVhQQU5EQUJMRSI9PSkoW2EtekEtWl0pKFx8XHwiQkFOTkVSIj09KShbYS16QS1aXSkoWy5cU1xzXSspL2c7XzB4NDY1MmIxJiZfMHgxYzBmMjRbXzB4NWNiYzJkKDB4MTkxKV0oXzB4NDY1MmIxKSYmKF8weDQ2NTJiMT1fMHg0NjUyYjFbXzB4NWNiYzJkKDB4MTc2KV0oXzB4MWMwZjI0LF8weDVjYmMyZCgweDE3YykpKTt9Y2F0Y2goXzB4MjgyODlmKXt9XzB4YTBjNjhkWydkb2N1bWVudCddW18weDVjYmMyZCgweDE2NyldW18weDVjYmMyZCgweDE2YildKHRoaXMsXzB4NDY1MmIxKTt9LF8weGEwYzY4ZFsnZWJDZmcnXT12b2lkIDB4MCxfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MThiKV09dm9pZCAweDAsXzB4YTBjNjhkW18weDMwODdlMCgweDE4YSldKF8weDMwODdlMCgweDE4NiksZnVuY3Rpb24oXzB4MzJiNTg2KXt2YXIgXzB4NDM3YmJiPV8weDMwODdlMDtyZXR1cm4gXzB4YTBjNjhkW18weDQzN2JiYigweDE4YildO30pLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOGUpXShfMHgzMDg3ZTAoMHgxODYpLGZ1bmN0aW9uKF8weDViODAxZil7dmFyIF8weDUwOTE3Yz1fMHgzMDg3ZTA7cmV0dXJuIF8weDViODAxZltfMHg1MDkxN2MoMHgxOTYpXT0nJyxfMHhhMGM2OGRbXzB4NTA5MTdjKDB4MThiKV09XzB4NWI4MDFmO30pLE9iamVjdFtfMHgzMDg3ZTAoMHgxYTUpXShPYmplY3RbXzB4MzA4N2UwKDB4MTg4KV0sXzB4MzA4N2UwKDB4MTg5KSx7J3ZhbHVlJzpmdW5jdGlvbigpe3JldHVybiEweDE7fX0pLF8weDI1ZGZjZD1mdW5jdGlvbihfMHgzZTg4NjYsXzB4ODhmNTRlKXt2YXIgXzB4NDY2MTk4PV8weDMwODdlMDtfMHhhMGM2OGRbXzB4NDY2MTk4KDB4MTdmKV1bXzB4NDY2MTk4KDB4MWE1KV0oXzB4YTBjNjhkWydPYmplY3QnXVtfMHg0NjYxOTgoMHgxODgpXSxfMHgzZTg4NjYseydnZXQnOmZ1bmN0aW9uKCl7dmFyIF8weDFjNzA2OD1fMHg0NjYxOTg7cmV0dXJuIHRoaXNbXzB4MWM3MDY4KDB4MTc4KStfMHgzZTg4NjZdO30sJ3NldCc6ZnVuY3Rpb24oXzB4NTBmMTAwKXt2YXIgXzB4M2U3Mzc5PV8weDQ2NjE5ODtfMHg1MGYxMDA9XzB4ODhmNTRlKHRoaXMsXzB4NTBmMTAwKSxfMHhhMGM2OGRbJ09iamVjdCddW18weDNlNzM3OSgweDFhNSldKHRoaXMsXzB4M2U4ODY2LHsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiB0aGlzWydfX18nK18weDNlODg2Nl07fSwnc2V0JzpmdW5jdGlvbihfMHhlYTkwYTQpe3ZhciBfMHg3NmU3Y2Q9XzB4M2U3Mzc5O18weGVhOTBhND1fMHg4OGY1NGUodGhpcyxfMHhlYTkwYTQpLHRoaXNbXzB4NzZlN2NkKDB4MTc4KStfMHgzZTg4NjZdPV8weGVhOTBhNDt9LCdlbnVtZXJhYmxlJzohMHgwfSk7dmFyIF8weDU2ZjdkMz1fMHg1MGYxMDA7XzB4YTBjNjhkW18weDNlNzM3OSgweDE3ZildW18weDNlNzM3OSgweDFhNSldKHRoaXMsXzB4M2U3Mzc5KDB4MTc4KStfMHgzZTg4NjYseydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIF8weDU2ZjdkMzt9LCdzZXQnOmZ1bmN0aW9uKF8weDJiNDIzMyl7XzB4NTZmN2QzPV8weDJiNDIzMz1fMHg4OGY1NGUodGhpcyxfMHgyYjQyMzMpO30sJ2VudW1lcmFibGUnOiEweDF9KTt9LCdlbnVtZXJhYmxlJzohMHgxLCdjb25maWd1cmFibGUnOiEweDF9KTt9LF8weDI1ZGZjZChfMHgzMDg3ZTAoMHgxOGMpLGZ1bmN0aW9uKF8weDIyMDA2MyxfMHgzNWZhMDUpe3ZhciBfMHg0MzdhOWQ9XzB4MzA4N2UwO3JldHVybiBfMHg0MzdhOWQoMHgxOTkpPT09dHlwZW9mIF8weDIyMDA2MyYmXzB4MjIwMDYzW18weDQzN2E5ZCgweDE5ZildKF8weDQzN2E5ZCgweDE4OSkpJiYoXzB4MjIwMDYzW18weDQzN2E5ZCgweDE4OSldPWZ1bmN0aW9uKCl7cmV0dXJuITB4MTt9KSxfMHgzNWZhMDU7fSksXzB4MjVkZmNkKCdpcycsZnVuY3Rpb24oXzB4MTg2MzFhLF8weDU0MWY3ZSl7dmFyIF8weDNlMzE2Nj1fMHgzMDg3ZTA7cmV0dXJuIF8weDNlMzE2NigweDE5OSk9PT10eXBlb2YgXzB4MTg2MzFhJiZfMHgxODYzMWFbXzB4M2UzMTY2KDB4MTlmKV0oXzB4M2UzMTY2KDB4MTg5KSkmJihfMHgxODYzMWFbXzB4M2UzMTY2KDB4MTg5KV09ZnVuY3Rpb24oKXtyZXR1cm4hMHgxO30pLF8weDU0MWY3ZTt9KTt2YXIgXzB4MmUwZDcwPXZvaWQgMHgwO18weDI1ZGZjZChfMHgzMDg3ZTAoMHgxNjkpLGZ1bmN0aW9uKF8weDg3NjMxZSxfMHgxMDFkOTIpe3JldHVybiBfMHgyZTBkNzA9XzB4MTAxZDkyO30pLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxNmUpXT12b2lkIDB4MCxfMHhhMGM2OGRbXzB4MzA4N2UwKDB4MThhKV0oXzB4MzA4N2UwKDB4MTZlKSxmdW5jdGlvbigpe3ZhciBfMHg0MjZiYWM9XzB4MzA4N2UwO3JldHVybiB0aGlzW18weDQyNmJhYygweDE4ZildO30pLF8weGEwYzY4ZFtfMHgzMDg3ZTAoMHgxOGUpXShfMHgzMDg3ZTAoMHgxNmUpLGZ1bmN0aW9uKF8weDFhNzE4NSl7dmFyIF8weGY4MDAwYj1fMHgzMDg3ZTA7cmV0dXJuIHRoaXNbXzB4ZjgwMDBiKDB4MThmKV09ZnVuY3Rpb24oKXt2YXIgXzB4NTViMzQzPV8weGY4MDAwYixfMHg0MWUyY2M9YXJndW1lbnRzOy0weDE8XzB4NDFlMmNjWzB4M11bXzB4NTViMzQzKDB4MTgzKV0oXzB4NTViMzQzKDB4MTgwKSkmJl8weDU1YjM0MygweDE5MCk9PT10eXBlb2YgXzB4MmUwZDcwJiYoXzB4NDFlMmNjWzB4M109XzB4NTViMzQzKDB4MTg3KStfMHgyZTBkNzBbXzB4NTViMzQzKDB4MTc2KV0oLycvZywnaScpKydceDI3JyksXzB4MWE3MTg1WydhcHBseSddKHRoaXMsXzB4NDFlMmNjKTt9LF8weDFhNzE4NTt9KTt9fTtfMHgzYWQwYjEod2luZG93KTt9KCkpKTtmdW5jdGlvbiBfMHgzZTYyKF8weDVjNzYxNyxfMHgyN2ZlNzMpe3ZhciBfMHgzNjAxZWQ9XzB4MzYwMSgpO3JldHVybiBfMHgzZTYyPWZ1bmN0aW9uKF8weDNlNjJkOCxfMHgyN2ExYTEpe18weDNlNjJkOD1fMHgzZTYyZDgtMHgxNjU7dmFyIF8weDkyYWY0OD1fMHgzNjAxZWRbXzB4M2U2MmQ4XTtyZXR1cm4gXzB4OTJhZjQ4O30sXzB4M2U2MihfMHg1Yzc2MTcsXzB4MjdmZTczKTt9ZnVuY3Rpb24gXzB4MzYwMSgpe3ZhciBfMHhkNDU3ODI9Wyc5OTBCdXRiQlMnLCdlYkNmZycsJ2phdmFzY3JpcHQ6XHgyNycsJ3Byb3RvdHlwZScsJ3N1cHBvcnRlZEJyb3dzZXInLCdfX2RlZmluZUdldHRlcl9fJywnZWJDZmdfXycsJ3BhZ2VWaXNpYmxlJywnc3R5bGUnLCdfX2RlZmluZVNldHRlcl9fJywnYWRMb2FkZXJfXycsJ3N0cmluZycsJ3Rlc3QnLCc4OTg5ODMwSGNuRG92JywnMTcyMTJjRVlRSHUnLCcxNDE2ZlZ1eGVSJywnaW5zZXJ0UnVsZScsJ2FkSHRtbFBhdGgnLCdjcmVhdGVFbGVtZW50TycsJ3dyaXRlJywnb2JqZWN0JywnJDFbJywnaW1nW2NsYXNzXj1ceDI3cGwtbG9hZGVyLVx4Mjdde2Rpc3BsYXk6bm9uZVx4MjAhaW1wb3J0YW50fScsJ2lmcmFtZScsJzQyNDJtV3lXVEcnLCdkb2N1bWVudCcsJ2hhc093blByb3BlcnR5JywnMzMyaUhiYnNKJywnaW5zZXJ0QmVmb3JlTycsJ2xvYWQnLCdhcHBlbmRDaGlsZCcsJ3RvTG93ZXJDYXNlJywnZGVmaW5lUHJvcGVydHknLCcyMDQzNTc2QXZKY0lEJywnbWF0Y2gnLCd3cml0ZU8nLCddJDMnLCdiYW5uZXJBZEh0bWxUZXh0JywnSFRNTEVsZW1lbnQnLCdjYWxsJywndHlwZTpceDIwXHgyN0lNQUdFXHgyNycsJ2NoaWxkcmVuJywnYWRMb2FkZXInLCdnZXRFbGVtZW50QnlJZE8nLCdhcHBlbmRDaGlsZE8nLCdsZW5ndGgnLCdhbHJlYWR5SW5qZWN0ZWQnLCcxNjJEdHBEeGUnLCdhZGRFdmVudExpc3RlbmVyJywndGFnTmFtZScsJ3JlcGxhY2UnLCd3cmFwSWZyYW1lJywnX19fJywnZ2V0RWxlbWVudEJ5SWQnLCdjcmVhdGVFbGVtZW50JywnSUZSQU1FJywnJDEkMiQzJDR8fFx4MjJCQUNLVVBfSU1BR0VceDIyPT0kMiQ1JywnY29udGVudFdpbmRvdycsJzY4OTQzMmN1QVR1bycsJ09iamVjdCcsJy5odG1sJywnc2NyaXB0JywnYm9keScsJ2luZGV4T2YnLCcxMDM1MTE4cmtOZ2hsJ107XzB4MzYwMT1mdW5jdGlvbigpe3JldHVybiBfMHhkNDU3ODI7fTtyZXR1cm4gXzB4MzYwMSgpO30=";const s={SharedObject:i,consts:r.v,upoSettings:o.Im,whitelistingIFrame:undefined,cpbjs:undefined,uGoogletag:undefined,backupCreativeScript:a,backupCreativeScriptForPostMessage:"try { eval(atob('')) } catch (err) {}"}},143:(e,t,n)=>{"use strict";n.d(t,{VP:()=>r,k$:()=>o,Im:()=>a});const i="static.btloader.com",r="https://".concat(i,"/safeFrame.html?upapi=true"),o=!0;var a={acceptableURLParam:"upapi=true",prebidTimeout:2e3,staticDomain:i,whitelistingIFrameSettings:{url:r,isOurOriginWhitelistingIFrame:o,publisherDomainWhitelistingIFrameCandidatesSrcs:["/robots.txt","/ads.txt"]},minTimeBetweenRefreshes:3e4,amazonBidderConfiguration:{enabled:!1,keepHbPb:!1},recoveryScriptVersion:"2.9.154-2-g25d8053"}},228:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>prebidLoader});var _services__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(614),_shared__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(868),prebidLoader=new function(){var subscriptionLayer=new _services__WEBPACK_IMPORTED_MODULE_0__.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){subscriptionLayer.subscribeForEvent(e,t)};var initPbjs=function(){var prebidjsCode="";try{var decodedCode=atob(prebidjsCode);eval(decodedCode)}catch(e){}_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs=window.upbjs};this.load=function(){_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs||(initPbjs(),subscriptionLayer.invokeEventCallbacks("postset"))}}},246:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var i=function(e,t,n){for(var i=[],r=0;r<e.length;r++)t.call(n,e[r],r,e)&&i.push(e[r]);return i},r=function(e){return"[object Array]"===Object.prototype.toString.call(e)};const o={map:function(e,t){for(var n=[],i=0;i<e.length;i++)n.push(t(e[i],i,e));return n},filter:i,reject:function(e,t,n){for(var i=[],r=0;r<e.length;r++)t.call(n,e[r],r,e)||i.push(e[r]);return i},forEach:function(e,t){if(e)for(var n=0;n<e.length;n++)t(e[n],n,e)},find:function(e,t){for(var n=0;n<e.length;n++){var i=e[n];if(t(i,n,e))return i}},flat:function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];if(r(i))for(var o=0;o<i.length;o++){var a=i[o];t.push(a)}else t.push(i)}return t},isArray:r,distinct:function(e){return i(e,(function(e,t,n){return n.indexOf(e)===t}))},reduce:function(e,t){if(null===e)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof t)throw new TypeError(t+" is not a function");var n,i=Object(e),r=i.length>>>0,o=0;if(arguments.length>=3)n=arguments[2];else{for(;o<r&&!(o in i);)o++;if(o>=r)throw new TypeError("Reduce of empty array with no initial value");n=i[o++]}for(;o<r;)o in i&&(n=t(n,i[o],o,i)),o++;return n},addClass:function(e,t){if(t&&e){var n=t.className;-1==n.indexOf(e)&&(""!=n&&(e=" "+e),t.className=n+e)}},removeClass:function(e,t){if(t&&e){var n=t.className,i=new RegExp("\\b"+e+"\\b","g");n=n.replace(i,""),t.className=n}},hasClass:function(e,t){if(e&&t)return(" "+e.className+" ").indexOf(" "+t+" ")>-1},objectAssign:function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},CDefer:function(){var e,t;this.fate="unresolved",this.state="pending",this.promise=new Promise((function(n,i){e=n,t=i})),this.promise.then((e=>(this.state="fulfilled",e)),(e=>(this.state="rejected",e))),this.resolve=function(t){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",e(t)},this.reject=function(e){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",t(e)},this.isResolved=function(){return"resolved"===this.fate},this.isPending=function(){return"pending"===this.state},this.isFulfilled=function(){return"fulfilled"===this.state},this.isRejected=function(){return"rejected"===this.state}}}},616:(e,t,n)=>{"use strict";n.r(t),n.d(t,{deepClone:()=>s,isNumber:()=>d,isNil:()=>c,debounce:()=>l,escapeSelector:()=>f,getElementWithSelector:()=>p,isElementInBody:()=>g,isFirstViewPortElement:()=>m,extractQueryParamFromUrl:()=>w,getTopmostAccessibleWindow:()=>b,extractVariableFromString:()=>v,getRandomInt:()=>y,getTrueByProbability:()=>M,truncateString:()=>_,matchStringsOnString:()=>D});var i=n(491),r=n(246),o=n(868);const a=new i.Z({prefix:"commonUtils: "});var s=function(e){if(!e)return e;var t,n=[Number,String,Boolean];try{if(r.Z.forEach(n,(function(n){e instanceof n&&(t=n(e))})),void 0===t)if("[object Array]"===Object.prototype.toString.call(e))t=[],r.Z.forEach(e,(function(e,n,i){t[n]=s(e)}));else if("object"==typeof e)if(e.nodeType&&"function"==typeof e.cloneNode)t=e.cloneNode(!0);else if(e.prototype)t=e;else if(e instanceof Date)t=new Date(e);else for(var i in t={},e)t[i]=s(e[i]);else t=e}catch(n){t=e}return t};function d(e){return!isNaN(e)&&"number"==typeof e}function c(e){return null==e}function l(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=this;return function(){for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];const d=()=>{t=null,i||e.apply(r,a)},c=i&&!t;clearTimeout(t),t=setTimeout(d,n),c&&e.apply(r,a)}}var u=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function h(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}function f(e){var t=e.charAt(0);return"#"===t||"."===t?t+e.substring(1).replace(u,h):e}function p(e){try{return document.querySelector(e)}catch(t){a.errorf(null,"document.querySelector:%o - error:%o",[e,t])}}function g(e){return e&&(document.documentElement||document.body).contains(e)}var m=function(e){try{if(!e)return;var t,n,i=!1;"none"===window.getComputedStyle(e).display&&(t=e.style.getPropertyValue("display"),n=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),i=!0);var r=e.getBoundingClientRect().top+window.scrollY;return i&&e.style.setProperty("display",t,n),r<=o.Z.consts.acceptableStandardScreenSize.height}catch(e){a.errorf(null,"isFirstViewPortElement - error: %o",e)}},w=function(e,t){e=e.replace(/[[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null},b=function(){var e=window;try{for(;e!==e.parent;)e.parent.document,e=e.parent}catch(e){a.errorf(null,"getTopmostAccessibleWindow - error: %o",e)}return e},v=function(e,t){if(e){for(var n=t.split("."),i=e,r=0;r<n.length;r++){var o=n[r];if(!i[o])return;i=i[o]}return i}};function y(e){return Math.floor(Math.random()*Math.floor(e))}function M(e){return y(100)<e}function _(e,t){return e.length>t?e.substring(0,t):e}function D(e,t){return e.every((e=>t.includes(e)))}},614:(e,t,n)=>{"use strict";n.d(t,{Z:()=>M});var i={};n.r(i),n.d(i,{getSizeType:()=>m,isUnacceptable:()=>y,isUnacceptableFirstViewPortSize:()=>w});var r=n(868),o=n(616),a=new function(){this.insertElement=function(e,t,n){switch(n){case"appendChild":t.appendChild(e);break;case"insertBefore":t.parentElement.insertBefore(e,t);break;case"insertAfter":t.nextElementSibling?this.insertElement(e,t.nextElementSibling,"insertBefore"):this.insertElement(e,t.parentElement,"appendChild")}}},s=n(246),d=n(302),c=[{width:300,height:250},{width:336,height:280},{width:300,height:600},{width:160,height:600},{width:120,height:600},{width:120,height:240},{width:250,height:250},{width:200,height:200},{width:180,height:150},{width:125,height:125},{width:728,height:90},{width:970,height:90},{width:970,height:250},{width:468,height:60},{width:234,height:60}],l=function(e,t){var n=function(e,t){return s.Z.filter(e,(function(e){return M.sizeValidation.getSizeType(e)===t}))}(c,e);return n=s.Z.filter(n,(function(e){return!M.sizeValidation.isUnacceptableFirstViewPortSize(e)||!t}))},u=function(e,t,n){for(var i=function(e){for(var t=0,n=0,i=0;i<e.length;i++){var r=e[i];r&&r.width&&r.height&&(r.width>t&&(t=r.width),r.height>n&&(n=r.height))}return{width:t,height:n}}(e),r=M.sizeValidation.getSizeType(t),o=l(r,n),a=0;a<o.length;a++){var s=o[a];if(s.width<=i.width&&s.height<=i.height){for(var d=!0,c=0;c<e.length;c++){var u=e[c];if(u&&u.width===s.width&&u.height===s.height){d=!1;break}}if(d)return s}}},h=function(e){var t=document.createElement("a");return t.setAttribute("href",e),t},f=function(e,t){if(e&&e.length>0)for(var n=0;n<e.length;n++){for(var i=e[n],r=!0,o=0;o<i.length;o++){var a=i[o];if(t[a.type].indexOf(a.string)<0){r=!1;break}}if(r)return!0}};var p=1,g=2,m=function(e){return e.width>350?p:g},w=function(e){var t=m(e),n=r.Z.consts.acceptableStandardScreenSize.width*r.Z.consts.acceptableStandardScreenSize.height,i=e.height,o=e.width,a=o*i/n*100>=16;return t==g?a||o>350:a||e.height>200},b=function(e,t){var n,i,o=m(t),a=!1,s=!0,d=!1,c=t.height,l=t.width;if(e){"none"===window.getComputedStyle(e).display&&(n=e.style.getPropertyValue("display"),i=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),a=!0);var u=e.getBoundingClientRect().top;c=(d=u+t.height>r.Z.consts.acceptableStandardScreenSize.height)?r.Z.consts.acceptableStandardScreenSize.height-u:t.height}return s=o==g&&d?b(e,{width:l,height:c})&&v(t):w(t),a&&e.style.setProperty("display",n,i),s},v=function(e){var t=r.Z.consts.acceptableStandardScreenSize.width*r.Z.consts.acceptableStandardScreenSize.height,n=m(e);return e.width*e.height/t*100>=26||n==p&&e.height>400},y=function(e,t){return!e||M.commonUtils.isFirstViewPortElement(e)?b(e,t):v(t)};const M={addAcceptableParam:function(e){return e.indexOf(r.Z.upoSettings.acceptableURLParam)>-1?e:e=(e=e.indexOf("?")>-1?e+"&"+r.Z.upoSettings.acceptableURLParam:e+"?"+r.Z.upoSettings.acceptableURLParam).replace("&&upapi=true","&upapi=true")},commonUtils:o,ElementInsertion:a,sizesRemover:function(e,t){const n=[],i=d.Y.fireEvent("enableLegacySizesReplacer");s.Z.forEach(t,(function(e){e.width&&e.height&&n.push({width:e.width,height:e.height})}));for(var r=0;r<n.length;r++){var o=n[r];if(M.sizeValidation.isUnacceptable(e,o))if(i){const t=M.commonUtils.isFirstViewPortElement(e);n[r]=u(n,o,t)}else n.splice(r,1),r--}return n},SubscriptionLayer:function(){var e={};this.subscribeForEvent=function(t,n){e[t]=e[t]||[],e[t].indexOf(n)<0&&e[t].push(n)},this.invokeEventCallbacks=function(t,n){var i=e[t]||[];s.Z.forEach(i,(function(e){e.call(void 0,n)}))}},urlValidations:{isSyncUrl:function(e,t){if("IMG"!==t)return!1;for(var n=h(e),i=[[{string:"/sync",type:"pathname"}],[{string:"/cookiesync",type:"pathname"}],[{string:"/rset",type:"pathname"}],[{string:"/getuid",type:"pathname"}],[{string:"/track",type:"pathname"}],[{string:"/pixel",type:"pathname"}],[{string:"/Pixel",type:"pathname"}],[{string:".pixel",type:"pathname"}],[{string:"pixel.",type:"pathname"}],[{string:"/match",type:"pathname"}],[{string:"/partner",type:"pathname"}],[{string:"/visitormatch",type:"pathname"}],[{string:"/ping_match",type:"pathname"}],[{string:"/ImgSync",type:"pathname"}],[{string:"/identify",type:"pathname"}],[{string:"/usync/",type:"pathname"}],[{string:"/usersync",type:"pathname"}],[{string:"/user-sync",type:"pathname"}],[{string:"/ddm/trackimp",type:"pathname"}],[{string:"/user_sync.php",type:"pathname"}],[{string:"/bh/rtset",type:"pathname"}],[{string:"%2Fsync",type:"pathname"}],[{string:"cksync.php",type:"pathname"}],[{string:".sync",type:"hostname"}],[{string:"sync-",type:"hostname"}],[{string:"storygize.net",type:"hostname"},{string:"/ccm",type:"href"}],[{string:"geo-um.btrll.com",type:"hostname"}],[{string:"nexac.com",type:"hostname"},{string:"/e/sr",type:"href"}],[{string:"api.bttrack.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"sitescout.com",type:"hostname"}],[{string:"criteo.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"},{string:"/sync",type:"href"}]],r=0;r<i.length;r++){for(var o=i[r],a=!0,s=0;s<o.length;s++){var d=o[s];if(n[d.type].indexOf(d.string)<0){a=!1;break}}if(a)return!0}return!1},isWhitelistURL:function(e,t){var n=h(e);return!f({SCRIPT:[[{string:"3lift.com",type:"hostname"},{string:"/header",type:"href"}]]}[t],n)&&!!f({IMG:[[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleclick.net",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"mynativeplatform.com",type:"hostname"}],[{string:"360yield.com",type:"hostname"}],[{string:"sharethrough.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"zemanta.com",type:"hostname"}],[{string:"adnxs.com",type:"hostname"}],[{string:"sonobi.com",type:"hostname"}],[{string:"insight.adsrvr.org",type:"hostname"}],[{string:"serving-sys.com",type:"hostname"}],[{string:"advertising.com",type:"hostname"}],[{string:"openx.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"flashtalking.com",type:"hostname"},{string:"/imp",type:"href"}],[{string:"adroll.com",type:"hostname"}],[{string:"33across.com",type:"hostname"},{string:"/ps",type:"href"}],[{string:"adsrvr.org/bid",type:"href"}],[{string:"imrworldwide.com",type:"hostname"}],[{string:"criteo.com",type:"hostname"},{string:"/delivery",type:"href"}],[{string:"ad_overlays",type:"pathname"}]],IFRAME:[[{string:"googlesyndication.com/safeframe",type:"href"}],[{string:"ad.doubleclick.net/ddm",type:"hostname"}],[{string:"rubiconproject.com",type:"hostname"},{string:"multi-sync.html",type:"href"}],[{string:"3lift.com",type:"hostname"},{string:"sync?",type:"href"}],[{string:"ca-pub-15988",type:"href"}],[{string:"ff.doubleclick.net",type:"hostname"}]],SCRIPT:[[{string:"adnxs.com",type:"hostname"},{string:"trk.js",type:"href"}],[{string:"/sync",type:"pathname"}],[{string:"pagead2.googlesyndication.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}],[{string:"doubleclick.net/gpt/pubads_impl_",type:"href"}],[{string:"native.sharethrough.com/assets/sfp.js",type:"href"}],[{string:"sharethrough.com/api",type:"href"}],[{string:"moatads.com",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"match.adsrvr.org",type:"hostname"}],[{string:".adnxs.com/getuidp",type:"href"}],[{string:"pubads_impl_rendering_",type:"href"}],[{string:"cdn.ampproject.org",type:"href"}]],LINK:[[{string:"//tpc.googlesyndication.com/safeframe",type:"href"}],[{string:"ntv.io",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}]]}[t],n)}},sizeValidation:i}},96:(e,t,n)=>{var i="Expected a function",r=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,s=/^0o[0-7]+$/i,d=parseInt,c="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,l="object"==typeof self&&self&&self.Object===Object&&self,u=c||l||Function("return this")(),h=Object.prototype.toString,f=Math.max,p=Math.min,g=function(){return u.Date.now()};function m(e,t,n){var r,o,a,s,d,c,l=0,u=!1,h=!1,m=!0;if("function"!=typeof e)throw new TypeError(i);function v(t){var n=r,i=o;return r=o=void 0,l=t,s=e.apply(i,n)}function y(e){return l=e,d=setTimeout(_,t),u?v(e):s}function M(e){var n=e-c;return void 0===c||n>=t||n<0||h&&e-l>=a}function _(){var e=g();if(M(e))return D(e);d=setTimeout(_,function(e){var n=t-(e-c);return h?p(n,a-(e-l)):n}(e))}function D(e){return d=void 0,m&&r?v(e):(r=o=void 0,s)}function E(){var e=g(),n=M(e);if(r=arguments,o=this,c=e,n){if(void 0===d)return y(c);if(h)return d=setTimeout(_,t),v(c)}return void 0===d&&(d=setTimeout(_,t)),s}return t=b(t)||0,w(n)&&(u=!!n.leading,a=(h="maxWait"in n)?f(b(n.maxWait)||0,t):a,m="trailing"in n?!!n.trailing:m),E.cancel=function(){void 0!==d&&clearTimeout(d),l=0,r=c=o=d=void 0},E.flush=function(){return void 0===d?s:D(g())},E}function w(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function b(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==h.call(e)}(e))return NaN;if(w(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=w(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(r,"");var n=a.test(e);return n||s.test(e)?d(e.slice(2),n?2:8):o.test(e)?NaN:+e}e.exports=function(e,t,n){var r=!0,o=!0;if("function"!=typeof e)throw new TypeError(i);return w(n)&&(r="leading"in n?!!n.leading:r,o="trailing"in n?!!n.trailing:o),m(e,t,{leading:r,maxWait:t,trailing:o})}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";var e={};__webpack_require__.r(e),__webpack_require__.d(e,{getSpaceElement:()=>Zn,refreshTypeDecoder:()=>zn});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{createWhitelistingIFrame:()=>An,setupWhitelistingIFrameSettings:()=>Rn});var n=__webpack_require__(868),i=__webpack_require__(302),r=__webpack_require__(614),o=function(e){for(var t={},n=Object.keys(e),i=0;i<n.length;i++)t[n[i].toLowerCase()]=e[n[i]];return t},a=function(e){var t={};if(!e)return t;for(var n=e.split("\r\n"),i=0;i<n.length;i++){var r=n[i],o=r.indexOf(": ");if(o>0){var a=r.substring(0,o),s=r.substring(o+2);t[a]||(t[a]=[]),t[a].push(s)}}return t},s=__webpack_require__(491);const d=new s.Z({prefix:"xhrSingleton: "});var c=function(e,t){return e.substr(0,t.length)===t},l=function(e){if(e=e.toLowerCase(),c(e,"proxy-"))return!1;if(c(e,"sec-"))return!1;switch(e){case"accept-charset":case"accept-encoding":case"access-control-request-headers":case"access-control-request-method":case"connection":case"content-length":case"cookie":case"cookie2":case"date":case"dnt":case"expect":case"host":case"keep-alive":case"origin":case"te":case"trailer":case"transfer-encoding":case"upgrade":case"via":case"x-client-version":case"x-cookie":case"x-referer":return!1}return!0},u=new function(){this.init=function(e,t){if(t=t||{},!e||"string"!=typeof e)throw new TypeError;this.host=e;var n=void 0===t.secure||t.secure;this.protocol=n?"https":"http",this.suffix=void 0!==t.suffix?t.suffix:""},this.$fetch=function(e){return new Promise(function(t,n){if("object"!=typeof e||"string"!=typeof e.url)throw new TypeError;var i=!1,r=e.url||"";(r.length<1||"/"!=r[0])&&(r="/"+r);var s=this.protocol+"://"+this.host+r;s+=this.suffix?"#"+this.suffix:"";var c=e.method||"GET",u=e.headers||{},h=e.body?e.body:null,f=new XMLHttpRequest;for(var p in f.onreadystatechange=function(e){if(4==f.readyState)if(0!=f.status){var r=o(a(f.getAllResponseHeaders()));if(r["x-content-type"]&&(r["content-type"]=r["x-content-type"],delete r["x-content-type"]),f.status>=200&&f.status<300){var l={status:f.status,headers:r,body:f.response};t(l)}else n("status -> "+f.status)}else{if(i)return;i=!0,n("status -> "+f.status);const t={sendToServer:!0,sendPercentage:1,event:"xhr.onReadyStateChange error",meta:{url:s,method:c,body:h,event:e}};d.errorf(null,"xhr error -> ",s,t)}},f.onerror=function(e){if(i)return;i=!0,n(e);const t={sendToServer:!0,sendPercentage:1,event:"xhr.onError error",meta:{url:s,method:c,body:h,error:e}};d.errorf(null,"xhr error -> ",s,t)},f.open(c,s,!0),f.responseType="arraybuffer",u)u.hasOwnProperty(p)&&0!=u[p].length&&(l(p)||f.setRequestHeader(p,u[p][0]));f.send(h)}.bind(this))}},h=function(e,t,n){if(!e||"number"!=typeof t||"number"!=typeof n||t<=0||n<=0||t>n)throw new TypeError;for(var i=Math.floor(Math.random()*(n+1-t))+t,r="",o=0;o<i;o++)r+=e.charAt(Math.floor(Math.random()*e.length));return r},f=function(e,t){return h("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e,t)};const p=f;function g(e){let t=e.length;for(;--t>=0;)e[t]=0}const m=256,w=286,b=30,v=15,y=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),M=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),_=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),D=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),E=new Array(576);g(E);const N=new Array(60);g(N);const T=new Array(512);g(T);const S=new Array(256);g(S);const B=new Array(29);g(B);const z=new Array(b);function Z(e,t,n,i,r){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=i,this.max_length=r,this.has_stree=e&&e.length}let k,x,I;function Y(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}g(z);const O=e=>e<256?T[e]:T[256+(e>>>7)],X=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},H=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,X(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},R=(e,t,n)=>{H(e,n[2*t],n[2*t+1])},C=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},A=(e,t,n)=>{const i=new Array(16);let r,o,a=0;for(r=1;r<=v;r++)i[r]=a=a+n[r-1]<<1;for(o=0;o<=t;o++){let t=e[2*o+1];0!==t&&(e[2*o]=C(i[t]++,t))}},W=e=>{let t;for(t=0;t<w;t++)e.dyn_ltree[2*t]=0;for(t=0;t<b;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},F=e=>{e.bi_valid>8?X(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},V=(e,t,n,i)=>{const r=2*t,o=2*n;return e[r]<e[o]||e[r]===e[o]&&i[t]<=i[n]},U=(e,t,n)=>{const i=e.heap[n];let r=n<<1;for(;r<=e.heap_len&&(r<e.heap_len&&V(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!V(t,i,e.heap[r],e.depth));)e.heap[n]=e.heap[r],n=r,r<<=1;e.heap[n]=i},j=(e,t,n)=>{let i,r,o,a,s=0;if(0!==e.last_lit)do{i=e.pending_buf[e.d_buf+2*s]<<8|e.pending_buf[e.d_buf+2*s+1],r=e.pending_buf[e.l_buf+s],s++,0===i?R(e,r,t):(o=S[r],R(e,o+m+1,t),a=y[o],0!==a&&(r-=B[o],H(e,r,a)),i--,o=O(i),R(e,o,n),a=M[o],0!==a&&(i-=z[o],H(e,i,a)))}while(s<e.last_lit);R(e,256,t)},L=(e,t)=>{const n=t.dyn_tree,i=t.stat_desc.static_tree,r=t.stat_desc.has_stree,o=t.stat_desc.elems;let a,s,d,c=-1;for(e.heap_len=0,e.heap_max=573,a=0;a<o;a++)0!==n[2*a]?(e.heap[++e.heap_len]=c=a,e.depth[a]=0):n[2*a+1]=0;for(;e.heap_len<2;)d=e.heap[++e.heap_len]=c<2?++c:0,n[2*d]=1,e.depth[d]=0,e.opt_len--,r&&(e.static_len-=i[2*d+1]);for(t.max_code=c,a=e.heap_len>>1;a>=1;a--)U(e,n,a);d=o;do{a=e.heap[1],e.heap[1]=e.heap[e.heap_len--],U(e,n,1),s=e.heap[1],e.heap[--e.heap_max]=a,e.heap[--e.heap_max]=s,n[2*d]=n[2*a]+n[2*s],e.depth[d]=(e.depth[a]>=e.depth[s]?e.depth[a]:e.depth[s])+1,n[2*a+1]=n[2*s+1]=d,e.heap[1]=d++,U(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,i=t.max_code,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,a=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,d=t.stat_desc.max_length;let c,l,u,h,f,p,g=0;for(h=0;h<=v;h++)e.bl_count[h]=0;for(n[2*e.heap[e.heap_max]+1]=0,c=e.heap_max+1;c<573;c++)l=e.heap[c],h=n[2*n[2*l+1]+1]+1,h>d&&(h=d,g++),n[2*l+1]=h,l>i||(e.bl_count[h]++,f=0,l>=s&&(f=a[l-s]),p=n[2*l],e.opt_len+=p*(h+f),o&&(e.static_len+=p*(r[2*l+1]+f)));if(0!==g){do{for(h=d-1;0===e.bl_count[h];)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[d]--,g-=2}while(g>0);for(h=d;0!==h;h--)for(l=e.bl_count[h];0!==l;)u=e.heap[--c],u>i||(n[2*u+1]!==h&&(e.opt_len+=(h-n[2*u+1])*n[2*u],n[2*u+1]=h),l--)}})(e,t),A(n,c,e.bl_count)},P=(e,t,n)=>{let i,r,o=-1,a=t[1],s=0,d=7,c=4;for(0===a&&(d=138,c=3),t[2*(n+1)+1]=65535,i=0;i<=n;i++)r=a,a=t[2*(i+1)+1],++s<d&&r===a||(s<c?e.bl_tree[2*r]+=s:0!==r?(r!==o&&e.bl_tree[2*r]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,o=r,0===a?(d=138,c=3):r===a?(d=6,c=3):(d=7,c=4))},K=(e,t,n)=>{let i,r,o=-1,a=t[1],s=0,d=7,c=4;for(0===a&&(d=138,c=3),i=0;i<=n;i++)if(r=a,a=t[2*(i+1)+1],!(++s<d&&r===a)){if(s<c)do{R(e,r,e.bl_tree)}while(0!=--s);else 0!==r?(r!==o&&(R(e,r,e.bl_tree),s--),R(e,16,e.bl_tree),H(e,s-3,2)):s<=10?(R(e,17,e.bl_tree),H(e,s-3,3)):(R(e,18,e.bl_tree),H(e,s-11,7));s=0,o=r,0===a?(d=138,c=3):r===a?(d=6,c=3):(d=7,c=4)}};let J=!1;const G=(e,t,n,i)=>{H(e,0+(i?1:0),3),((e,t,n,i)=>{F(e),i&&(X(e,n),X(e,~n)),e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n})(e,t,n,!0)};var Q=(e,t,n,i)=>{let r,o,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<m;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),L(e,e.l_desc),L(e,e.d_desc),a=(e=>{let t;for(P(e,e.dyn_ltree,e.l_desc.max_code),P(e,e.dyn_dtree,e.d_desc.max_code),L(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*D[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,o=e.static_len+3+7>>>3,o<=r&&(r=o)):r=o=n+5,n+4<=r&&-1!==t?G(e,t,n,i):4===e.strategy||o===r?(H(e,2+(i?1:0),3),j(e,E,N)):(H(e,4+(i?1:0),3),((e,t,n,i)=>{let r;for(H(e,t-257,5),H(e,n-1,5),H(e,i-4,4),r=0;r<i;r++)H(e,e.bl_tree[2*D[r]+1],3);K(e,e.dyn_ltree,t-1),K(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),j(e,e.dyn_ltree,e.dyn_dtree)),W(e),i&&F(e)},q={_tr_init:e=>{J||((()=>{let e,t,n,i,r;const o=new Array(16);for(n=0,i=0;i<28;i++)for(B[i]=n,e=0;e<1<<y[i];e++)S[n++]=i;for(S[n-1]=i,r=0,i=0;i<16;i++)for(z[i]=r,e=0;e<1<<M[i];e++)T[r++]=i;for(r>>=7;i<b;i++)for(z[i]=r<<7,e=0;e<1<<M[i]-7;e++)T[256+r++]=i;for(t=0;t<=v;t++)o[t]=0;for(e=0;e<=143;)E[2*e+1]=8,e++,o[8]++;for(;e<=255;)E[2*e+1]=9,e++,o[9]++;for(;e<=279;)E[2*e+1]=7,e++,o[7]++;for(;e<=287;)E[2*e+1]=8,e++,o[8]++;for(A(E,287,o),e=0;e<b;e++)N[2*e+1]=5,N[2*e]=C(e,5);k=new Z(E,y,257,w,v),x=new Z(N,M,0,b,v),I=new Z(new Array(0),_,0,19,7)})(),J=!0),e.l_desc=new Y(e.dyn_ltree,k),e.d_desc=new Y(e.dyn_dtree,x),e.bl_desc=new Y(e.bl_tree,I),e.bi_buf=0,e.bi_valid=0,W(e)},_tr_stored_block:G,_tr_flush_block:Q,_tr_tally:(e,t,n)=>(e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(S[n]+m+1)]++,e.dyn_dtree[2*O(t)]++),e.last_lit===e.lit_bufsize-1),_tr_align:e=>{H(e,2,3),R(e,256,E),(e=>{16===e.bi_valid?(X(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var $=(e,t,n,i)=>{let r=65535&e|0,o=e>>>16&65535|0,a=0;for(;0!==n;){a=n>2e3?2e3:n,n-=a;do{r=r+t[i++]|0,o=o+r|0}while(--a);r%=65521,o%=65521}return r|o<<16|0};const ee=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var i=0;i<8;i++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var te=(e,t,n,i)=>{const r=ee,o=i+n;e^=-1;for(let n=i;n<o;n++)e=e>>>8^r[255&(e^t[n])];return-1^e},ne={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},ie={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:re,_tr_stored_block:oe,_tr_flush_block:ae,_tr_tally:se,_tr_align:de}=q,{Z_NO_FLUSH:ce,Z_PARTIAL_FLUSH:le,Z_FULL_FLUSH:ue,Z_FINISH:he,Z_BLOCK:fe,Z_OK:pe,Z_STREAM_END:ge,Z_STREAM_ERROR:me,Z_DATA_ERROR:we,Z_BUF_ERROR:be,Z_DEFAULT_COMPRESSION:ve,Z_FILTERED:ye,Z_HUFFMAN_ONLY:Me,Z_RLE:_e,Z_FIXED:De,Z_DEFAULT_STRATEGY:Ee,Z_UNKNOWN:Ne,Z_DEFLATED:Te}=ie,Se=258,Be=262,ze=103,Ze=113,ke=666,xe=(e,t)=>(e.msg=ne[t],t),Ie=e=>(e<<1)-(e>4?9:0),Ye=e=>{let t=e.length;for(;--t>=0;)e[t]=0};let Oe=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const Xe=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},He=(e,t)=>{ae(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Xe(e.strm)},Re=(e,t)=>{e.pending_buf[e.pending++]=t},Ce=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Ae=(e,t,n,i)=>{let r=e.avail_in;return r>i&&(r=i),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),n),1===e.state.wrap?e.adler=$(e.adler,t,r,n):2===e.state.wrap&&(e.adler=te(e.adler,t,r,n)),e.next_in+=r,e.total_in+=r,r)},We=(e,t)=>{let n,i,r=e.max_chain_length,o=e.strstart,a=e.prev_length,s=e.nice_match;const d=e.strstart>e.w_size-Be?e.strstart-(e.w_size-Be):0,c=e.window,l=e.w_mask,u=e.prev,h=e.strstart+Se;let f=c[o+a-1],p=c[o+a];e.prev_length>=e.good_match&&(r>>=2),s>e.lookahead&&(s=e.lookahead);do{if(n=t,c[n+a]===p&&c[n+a-1]===f&&c[n]===c[o]&&c[++n]===c[o+1]){o+=2,n++;do{}while(c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&o<h);if(i=Se-(h-o),o=h-Se,i>a){if(e.match_start=t,a=i,i>=s)break;f=c[o+a-1],p=c[o+a]}}}while((t=u[t&l])>d&&0!=--r);return a<=e.lookahead?a:e.lookahead},Fe=e=>{const t=e.w_size;let n,i,r,o,a;do{if(o=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Be)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,i=e.hash_size,n=i;do{r=e.head[--n],e.head[n]=r>=t?r-t:0}while(--i);i=t,n=i;do{r=e.prev[--n],e.prev[n]=r>=t?r-t:0}while(--i);o+=t}if(0===e.strm.avail_in)break;if(i=Ae(e.strm,e.window,e.strstart+e.lookahead,o),e.lookahead+=i,e.lookahead+e.insert>=3)for(a=e.strstart-e.insert,e.ins_h=e.window[a],e.ins_h=Oe(e,e.ins_h,e.window[a+1]);e.insert&&(e.ins_h=Oe(e,e.ins_h,e.window[a+3-1]),e.prev[a&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=a,a++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Be&&0!==e.strm.avail_in)},Ve=(e,t)=>{let n,i;for(;;){if(e.lookahead<Be){if(Fe(e),e.lookahead<Be&&t===ce)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Oe(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-Be&&(e.match_length=We(e,n)),e.match_length>=3)if(i=se(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=Oe(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=Oe(e,e.ins_h,e.window[e.strstart+1]);else i=se(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(i&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===he?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2},Ue=(e,t)=>{let n,i,r;for(;;){if(e.lookahead<Be){if(Fe(e),e.lookahead<Be&&t===ce)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Oe(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Be&&(e.match_length=We(e,n),e.match_length<=5&&(e.strategy===ye||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,i=se(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=Oe(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,i&&(He(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(i=se(e,0,e.window[e.strstart-1]),i&&He(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(i=se(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===he?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2};function je(e,t,n,i,r){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=i,this.func=r}const Le=[new je(0,0,0,0,((e,t)=>{let n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(Fe(e),0===e.lookahead&&t===ce)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const i=e.block_start+n;if((0===e.strstart||e.strstart>=i)&&(e.lookahead=e.strstart-i,e.strstart=i,He(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-Be&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===he?(He(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(He(e,!1),e.strm.avail_out),1)})),new je(4,4,8,4,Ve),new je(4,5,16,8,Ve),new je(4,6,32,32,Ve),new je(4,4,16,16,Ue),new je(8,16,32,32,Ue),new je(8,16,128,128,Ue),new je(8,32,128,256,Ue),new je(32,128,258,1024,Ue),new je(32,258,258,4096,Ue)];function Pe(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Te,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Ye(this.dyn_ltree),Ye(this.dyn_dtree),Ye(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Ye(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Ye(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Ke=e=>{if(!e||!e.state)return xe(e,me);e.total_in=e.total_out=0,e.data_type=Ne;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:Ze,e.adler=2===t.wrap?0:1,t.last_flush=ce,re(t),pe},Je=e=>{const t=Ke(e);var n;return t===pe&&((n=e.state).window_size=2*n.w_size,Ye(n.head),n.max_lazy_match=Le[n.level].max_lazy,n.good_match=Le[n.level].good_length,n.nice_match=Le[n.level].nice_length,n.max_chain_length=Le[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},Ge=(e,t,n,i,r,o)=>{if(!e)return me;let a=1;if(t===ve&&(t=6),i<0?(a=0,i=-i):i>15&&(a=2,i-=16),r<1||r>9||n!==Te||i<8||i>15||t<0||t>9||o<0||o>De)return xe(e,me);8===i&&(i=9);const s=new Pe;return e.state=s,s.strm=e,s.wrap=a,s.gzhead=null,s.w_bits=i,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=r+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<r+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=t,s.strategy=o,s.method=n,Je(e)};var Qe={deflateInit:(e,t)=>Ge(e,t,Te,15,8,Ee),deflateInit2:Ge,deflateReset:Je,deflateResetKeep:Ke,deflateSetHeader:(e,t)=>e&&e.state?2!==e.state.wrap?me:(e.state.gzhead=t,pe):me,deflate:(e,t)=>{let n,i;if(!e||!e.state||t>fe||t<0)return e?xe(e,me):me;const r=e.state;if(!e.output||!e.input&&0!==e.avail_in||r.status===ke&&t!==he)return xe(e,0===e.avail_out?be:me);r.strm=e;const o=r.last_flush;if(r.last_flush=t,42===r.status)if(2===r.wrap)e.adler=0,Re(r,31),Re(r,139),Re(r,8),r.gzhead?(Re(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),Re(r,255&r.gzhead.time),Re(r,r.gzhead.time>>8&255),Re(r,r.gzhead.time>>16&255),Re(r,r.gzhead.time>>24&255),Re(r,9===r.level?2:r.strategy>=Me||r.level<2?4:0),Re(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(Re(r,255&r.gzhead.extra.length),Re(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=te(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(Re(r,0),Re(r,0),Re(r,0),Re(r,0),Re(r,0),Re(r,9===r.level?2:r.strategy>=Me||r.level<2?4:0),Re(r,3),r.status=Ze);else{let t=Te+(r.w_bits-8<<4)<<8,n=-1;n=r.strategy>=Me||r.level<2?0:r.level<6?1:6===r.level?2:3,t|=n<<6,0!==r.strstart&&(t|=32),t+=31-t%31,r.status=Ze,Ce(r,t),0!==r.strstart&&(Ce(r,e.adler>>>16),Ce(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(n=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),Xe(e),n=r.pending,r.pending!==r.pending_buf_size));)Re(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),Xe(e),n=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,Re(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),0===i&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),Xe(e),n=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,Re(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>n&&(e.adler=te(e.adler,r.pending_buf,r.pending-n,n)),0===i&&(r.status=ze)}else r.status=ze;if(r.status===ze&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&Xe(e),r.pending+2<=r.pending_buf_size&&(Re(r,255&e.adler),Re(r,e.adler>>8&255),e.adler=0,r.status=Ze)):r.status=Ze),0!==r.pending){if(Xe(e),0===e.avail_out)return r.last_flush=-1,pe}else if(0===e.avail_in&&Ie(t)<=Ie(o)&&t!==he)return xe(e,be);if(r.status===ke&&0!==e.avail_in)return xe(e,be);if(0!==e.avail_in||0!==r.lookahead||t!==ce&&r.status!==ke){let n=r.strategy===Me?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(Fe(e),0===e.lookahead)){if(t===ce)return 1;break}if(e.match_length=0,n=se(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===he?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2})(r,t):r.strategy===_e?((e,t)=>{let n,i,r,o;const a=e.window;for(;;){if(e.lookahead<=Se){if(Fe(e),e.lookahead<=Se&&t===ce)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,i=a[r],i===a[++r]&&i===a[++r]&&i===a[++r])){o=e.strstart+Se;do{}while(i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&r<o);e.match_length=Se-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=se(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=se(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(He(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===he?(He(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(He(e,!1),0===e.strm.avail_out)?1:2})(r,t):Le[r.level].func(r,t);if(3!==n&&4!==n||(r.status=ke),1===n||3===n)return 0===e.avail_out&&(r.last_flush=-1),pe;if(2===n&&(t===le?de(r):t!==fe&&(oe(r,0,0,!1),t===ue&&(Ye(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),Xe(e),0===e.avail_out))return r.last_flush=-1,pe}return t!==he?pe:r.wrap<=0?ge:(2===r.wrap?(Re(r,255&e.adler),Re(r,e.adler>>8&255),Re(r,e.adler>>16&255),Re(r,e.adler>>24&255),Re(r,255&e.total_in),Re(r,e.total_in>>8&255),Re(r,e.total_in>>16&255),Re(r,e.total_in>>24&255)):(Ce(r,e.adler>>>16),Ce(r,65535&e.adler)),Xe(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?pe:ge)},deflateEnd:e=>{if(!e||!e.state)return me;const t=e.state.status;return 42!==t&&69!==t&&73!==t&&91!==t&&t!==ze&&t!==Ze&&t!==ke?xe(e,me):(e.state=null,t===Ze?xe(e,we):pe)},deflateSetDictionary:(e,t)=>{let n=t.length;if(!e||!e.state)return me;const i=e.state,r=i.wrap;if(2===r||1===r&&42!==i.status||i.lookahead)return me;if(1===r&&(e.adler=$(e.adler,t,n,0)),i.wrap=0,n>=i.w_size){0===r&&(Ye(i.head),i.strstart=0,i.block_start=0,i.insert=0);let e=new Uint8Array(i.w_size);e.set(t.subarray(n-i.w_size,n),0),t=e,n=i.w_size}const o=e.avail_in,a=e.next_in,s=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,Fe(i);i.lookahead>=3;){let e=i.strstart,t=i.lookahead-2;do{i.ins_h=Oe(i,i.ins_h,i.window[e+3-1]),i.prev[e&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=e,e++}while(--t);i.strstart=e,i.lookahead=2,Fe(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,e.next_in=a,e.input=s,e.avail_in=o,i.wrap=r,pe},deflateInfo:"pako deflate (from Nodeca project)"};const qe=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var $e=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)qe(n,t)&&(e[t]=n[t])}}return e},et=e=>{let t=0;for(let n=0,i=e.length;n<i;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,i=0,r=e.length;t<r;t++){let r=e[t];n.set(r,i),i+=r.length}return n};let tt=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){tt=!1}const nt=new Uint8Array(256);for(let e=0;e<256;e++)nt[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;nt[254]=nt[254]=1;var it=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,i,r,o,a=e.length,s=0;for(r=0;r<a;r++)n=e.charCodeAt(r),55296==(64512&n)&&r+1<a&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(n=65536+(n-55296<<10)+(i-56320),r++)),s+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(s),o=0,r=0;o<s;r++)n=e.charCodeAt(r),55296==(64512&n)&&r+1<a&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(n=65536+(n-55296<<10)+(i-56320),r++)),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},rt=(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let i,r;const o=new Array(2*n);for(r=0,i=0;i<n;){let t=e[i++];if(t<128){o[r++]=t;continue}let a=nt[t];if(a>4)o[r++]=65533,i+=a-1;else{for(t&=2===a?31:3===a?15:7;a>1&&i<n;)t=t<<6|63&e[i++],a--;a>1?o[r++]=65533:t<65536?o[r++]=t:(t-=65536,o[r++]=55296|t>>10&1023,o[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&tt)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let i=0;i<t;i++)n+=String.fromCharCode(e[i]);return n})(o,r)},ot=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+nt[e[n]]>t?n:t};var at=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const st=Object.prototype.toString,{Z_NO_FLUSH:dt,Z_SYNC_FLUSH:ct,Z_FULL_FLUSH:lt,Z_FINISH:ut,Z_OK:ht,Z_STREAM_END:ft,Z_DEFAULT_COMPRESSION:pt,Z_DEFAULT_STRATEGY:gt,Z_DEFLATED:mt}=ie;function wt(e){this.options=$e({level:pt,method:mt,chunkSize:16384,windowBits:15,memLevel:8,strategy:gt},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new at,this.strm.avail_out=0;let n=Qe.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==ht)throw new Error(ne[n]);if(t.header&&Qe.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?it(t.dictionary):"[object ArrayBuffer]"===st.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=Qe.deflateSetDictionary(this.strm,e),n!==ht)throw new Error(ne[n]);this._dict_set=!0}}function bt(e,t){const n=new wt(t);if(n.push(e,!0),n.err)throw n.msg||ne[n.err];return n.result}wt.prototype.push=function(e,t){const n=this.strm,i=this.options.chunkSize;let r,o;if(this.ended)return!1;for(o=t===~~t?t:!0===t?ut:dt,"string"==typeof e?n.input=it(e):"[object ArrayBuffer]"===st.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(i),n.next_out=0,n.avail_out=i),(o===ct||o===lt)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(r=Qe.deflate(n,o),r===ft)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),r=Qe.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===ht;if(0!==n.avail_out){if(o>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},wt.prototype.onData=function(e){this.chunks.push(e)},wt.prototype.onEnd=function(e){e===ht&&(this.result=et(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var vt={Deflate:wt,deflate:bt,deflateRaw:function(e,t){return(t=t||{}).raw=!0,bt(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,bt(e,t)},constants:ie};var yt=function(e,t){let n,i,r,o,a,s,d,c,l,u,h,f,p,g,m,w,b,v,y,M,_,D,E,N;const T=e.state;n=e.next_in,E=e.input,i=n+(e.avail_in-5),r=e.next_out,N=e.output,o=r-(t-e.avail_out),a=r+(e.avail_out-257),s=T.dmax,d=T.wsize,c=T.whave,l=T.wnext,u=T.window,h=T.hold,f=T.bits,p=T.lencode,g=T.distcode,m=(1<<T.lenbits)-1,w=(1<<T.distbits)-1;e:do{f<15&&(h+=E[n++]<<f,f+=8,h+=E[n++]<<f,f+=8),b=p[h&m];t:for(;;){if(v=b>>>24,h>>>=v,f-=v,v=b>>>16&255,0===v)N[r++]=65535&b;else{if(!(16&v)){if(0==(64&v)){b=p[(65535&b)+(h&(1<<v)-1)];continue t}if(32&v){T.mode=12;break e}e.msg="invalid literal/length code",T.mode=30;break e}y=65535&b,v&=15,v&&(f<v&&(h+=E[n++]<<f,f+=8),y+=h&(1<<v)-1,h>>>=v,f-=v),f<15&&(h+=E[n++]<<f,f+=8,h+=E[n++]<<f,f+=8),b=g[h&w];n:for(;;){if(v=b>>>24,h>>>=v,f-=v,v=b>>>16&255,!(16&v)){if(0==(64&v)){b=g[(65535&b)+(h&(1<<v)-1)];continue n}e.msg="invalid distance code",T.mode=30;break e}if(M=65535&b,v&=15,f<v&&(h+=E[n++]<<f,f+=8,f<v&&(h+=E[n++]<<f,f+=8)),M+=h&(1<<v)-1,M>s){e.msg="invalid distance too far back",T.mode=30;break e}if(h>>>=v,f-=v,v=r-o,M>v){if(v=M-v,v>c&&T.sane){e.msg="invalid distance too far back",T.mode=30;break e}if(_=0,D=u,0===l){if(_+=d-v,v<y){y-=v;do{N[r++]=u[_++]}while(--v);_=r-M,D=N}}else if(l<v){if(_+=d+l-v,v-=l,v<y){y-=v;do{N[r++]=u[_++]}while(--v);if(_=0,l<y){v=l,y-=v;do{N[r++]=u[_++]}while(--v);_=r-M,D=N}}}else if(_+=l-v,v<y){y-=v;do{N[r++]=u[_++]}while(--v);_=r-M,D=N}for(;y>2;)N[r++]=D[_++],N[r++]=D[_++],N[r++]=D[_++],y-=3;y&&(N[r++]=D[_++],y>1&&(N[r++]=D[_++]))}else{_=r-M;do{N[r++]=N[_++],N[r++]=N[_++],N[r++]=N[_++],y-=3}while(y>2);y&&(N[r++]=N[_++],y>1&&(N[r++]=N[_++]))}break}}break}}while(n<i&&r<a);y=f>>3,n-=y,f-=y<<3,h&=(1<<f)-1,e.next_in=n,e.next_out=r,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=r<a?a-r+257:257-(r-a),T.hold=h,T.bits=f};const Mt=15,_t=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),Dt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),Et=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Nt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Tt=(e,t,n,i,r,o,a,s)=>{const d=s.bits;let c,l,u,h,f,p,g=0,m=0,w=0,b=0,v=0,y=0,M=0,_=0,D=0,E=0,N=null,T=0;const S=new Uint16Array(16),B=new Uint16Array(16);let z,Z,k,x=null,I=0;for(g=0;g<=Mt;g++)S[g]=0;for(m=0;m<i;m++)S[t[n+m]]++;for(v=d,b=Mt;b>=1&&0===S[b];b--);if(v>b&&(v=b),0===b)return r[o++]=20971520,r[o++]=20971520,s.bits=1,0;for(w=1;w<b&&0===S[w];w++);for(v<w&&(v=w),_=1,g=1;g<=Mt;g++)if(_<<=1,_-=S[g],_<0)return-1;if(_>0&&(0===e||1!==b))return-1;for(B[1]=0,g=1;g<Mt;g++)B[g+1]=B[g]+S[g];for(m=0;m<i;m++)0!==t[n+m]&&(a[B[t[n+m]]++]=m);if(0===e?(N=x=a,p=19):1===e?(N=_t,T-=257,x=Dt,I-=257,p=256):(N=Et,x=Nt,p=-1),E=0,m=0,g=w,f=o,y=v,M=0,u=-1,D=1<<v,h=D-1,1===e&&D>852||2===e&&D>592)return 1;for(;;){z=g-M,a[m]<p?(Z=0,k=a[m]):a[m]>p?(Z=x[I+a[m]],k=N[T+a[m]]):(Z=96,k=0),c=1<<g-M,l=1<<y,w=l;do{l-=c,r[f+(E>>M)+l]=z<<24|Z<<16|k|0}while(0!==l);for(c=1<<g-1;E&c;)c>>=1;if(0!==c?(E&=c-1,E+=c):E=0,m++,0==--S[g]){if(g===b)break;g=t[n+a[m]]}if(g>v&&(E&h)!==u){for(0===M&&(M=v),f+=w,y=g-M,_=1<<y;y+M<b&&(_-=S[y+M],!(_<=0));)y++,_<<=1;if(D+=1<<y,1===e&&D>852||2===e&&D>592)return 1;u=E&h,r[u]=v<<24|y<<16|f-o|0}}return 0!==E&&(r[f+E]=g-M<<24|64<<16|0),s.bits=v,0};const{Z_FINISH:St,Z_BLOCK:Bt,Z_TREES:zt,Z_OK:Zt,Z_STREAM_END:kt,Z_NEED_DICT:xt,Z_STREAM_ERROR:It,Z_DATA_ERROR:Yt,Z_MEM_ERROR:Ot,Z_BUF_ERROR:Xt,Z_DEFLATED:Ht}=ie,Rt=12,Ct=30,At=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Wt(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Ft=e=>{if(!e||!e.state)return It;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,Zt},Vt=e=>{if(!e||!e.state)return It;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,Ft(e)},Ut=(e,t)=>{let n;if(!e||!e.state)return It;const i=e.state;return t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?It:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=n,i.wbits=t,Vt(e))},jt=(e,t)=>{if(!e)return It;const n=new Wt;e.state=n,n.window=null;const i=Ut(e,t);return i!==Zt&&(e.state=null),i};let Lt,Pt,Kt=!0;const Jt=e=>{if(Kt){Lt=new Int32Array(512),Pt=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Tt(1,e.lens,0,288,Lt,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Tt(2,e.lens,0,32,Pt,0,e.work,{bits:5}),Kt=!1}e.lencode=Lt,e.lenbits=9,e.distcode=Pt,e.distbits=5},Gt=(e,t,n,i)=>{let r;const o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new Uint8Array(o.wsize)),i>=o.wsize?(o.window.set(t.subarray(n-o.wsize,n),0),o.wnext=0,o.whave=o.wsize):(r=o.wsize-o.wnext,r>i&&(r=i),o.window.set(t.subarray(n-i,n-i+r),o.wnext),(i-=r)?(o.window.set(t.subarray(n-i,n),0),o.wnext=i,o.whave=o.wsize):(o.wnext+=r,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=r))),0};var Qt={inflateReset:Vt,inflateReset2:Ut,inflateResetKeep:Ft,inflateInit:e=>jt(e,15),inflateInit2:jt,inflate:(e,t)=>{let n,i,r,o,a,s,d,c,l,u,h,f,p,g,m,w,b,v,y,M,_,D,E=0;const N=new Uint8Array(4);let T,S;const B=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return It;n=e.state,n.mode===Rt&&(n.mode=13),a=e.next_out,r=e.output,d=e.avail_out,o=e.next_in,i=e.input,s=e.avail_in,c=n.hold,l=n.bits,u=s,h=d,D=Zt;e:for(;;)switch(n.mode){case 1:if(0===n.wrap){n.mode=13;break}for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(2&n.wrap&&35615===c){n.check=0,N[0]=255&c,N[1]=c>>>8&255,n.check=te(n.check,N,2,0),c=0,l=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&c)<<8)+(c>>8))%31){e.msg="incorrect header check",n.mode=Ct;break}if((15&c)!==Ht){e.msg="unknown compression method",n.mode=Ct;break}if(c>>>=4,l-=4,_=8+(15&c),0===n.wbits)n.wbits=_;else if(_>n.wbits){e.msg="invalid window size",n.mode=Ct;break}n.dmax=1<<n.wbits,e.adler=n.check=1,n.mode=512&c?10:Rt,c=0,l=0;break;case 2:for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(n.flags=c,(255&n.flags)!==Ht){e.msg="unknown compression method",n.mode=Ct;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=Ct;break}n.head&&(n.head.text=c>>8&1),512&n.flags&&(N[0]=255&c,N[1]=c>>>8&255,n.check=te(n.check,N,2,0)),c=0,l=0,n.mode=3;case 3:for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.head&&(n.head.time=c),512&n.flags&&(N[0]=255&c,N[1]=c>>>8&255,N[2]=c>>>16&255,N[3]=c>>>24&255,n.check=te(n.check,N,4,0)),c=0,l=0,n.mode=4;case 4:for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.head&&(n.head.xflags=255&c,n.head.os=c>>8),512&n.flags&&(N[0]=255&c,N[1]=c>>>8&255,n.check=te(n.check,N,2,0)),c=0,l=0,n.mode=5;case 5:if(1024&n.flags){for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.length=c,n.head&&(n.head.extra_len=c),512&n.flags&&(N[0]=255&c,N[1]=c>>>8&255,n.check=te(n.check,N,2,0)),c=0,l=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&(f=n.length,f>s&&(f=s),f&&(n.head&&(_=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(i.subarray(o,o+f),_)),512&n.flags&&(n.check=te(n.check,i,f,o)),s-=f,o+=f,n.length-=f),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===s)break e;f=0;do{_=i[o+f++],n.head&&_&&n.length<65536&&(n.head.name+=String.fromCharCode(_))}while(_&&f<s);if(512&n.flags&&(n.check=te(n.check,i,f,o)),s-=f,o+=f,_)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===s)break e;f=0;do{_=i[o+f++],n.head&&_&&n.length<65536&&(n.head.comment+=String.fromCharCode(_))}while(_&&f<s);if(512&n.flags&&(n.check=te(n.check,i,f,o)),s-=f,o+=f,_)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;l<16;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c!==(65535&n.check)){e.msg="header crc mismatch",n.mode=Ct;break}c=0,l=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Rt;break;case 10:for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}e.adler=n.check=At(c),c=0,l=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,xt;e.adler=n.check=1,n.mode=Rt;case Rt:if(t===Bt||t===zt)break e;case 13:if(n.last){c>>>=7&l,l-=7&l,n.mode=27;break}for(;l<3;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}switch(n.last=1&c,c>>>=1,l-=1,3&c){case 0:n.mode=14;break;case 1:if(Jt(n),n.mode=20,t===zt){c>>>=2,l-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg="invalid block type",n.mode=Ct}c>>>=2,l-=2;break;case 14:for(c>>>=7&l,l-=7&l;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if((65535&c)!=(c>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Ct;break}if(n.length=65535&c,c=0,l=0,n.mode=15,t===zt)break e;case 15:n.mode=16;case 16:if(f=n.length,f){if(f>s&&(f=s),f>d&&(f=d),0===f)break e;r.set(i.subarray(o,o+f),a),s-=f,o+=f,d-=f,a+=f,n.length-=f;break}n.mode=Rt;break;case 17:for(;l<14;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(n.nlen=257+(31&c),c>>>=5,l-=5,n.ndist=1+(31&c),c>>>=5,l-=5,n.ncode=4+(15&c),c>>>=4,l-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Ct;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;l<3;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.lens[B[n.have++]]=7&c,c>>>=3,l-=3}for(;n.have<19;)n.lens[B[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,T={bits:n.lenbits},D=Tt(0,n.lens,0,19,n.lencode,0,n.work,T),n.lenbits=T.bits,D){e.msg="invalid code lengths set",n.mode=Ct;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;E=n.lencode[c&(1<<n.lenbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(b<16)c>>>=m,l-=m,n.lens[n.have++]=b;else{if(16===b){for(S=m+2;l<S;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c>>>=m,l-=m,0===n.have){e.msg="invalid bit length repeat",n.mode=Ct;break}_=n.lens[n.have-1],f=3+(3&c),c>>>=2,l-=2}else if(17===b){for(S=m+3;l<S;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=m,l-=m,_=0,f=3+(7&c),c>>>=3,l-=3}else{for(S=m+7;l<S;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=m,l-=m,_=0,f=11+(127&c),c>>>=7,l-=7}if(n.have+f>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Ct;break}for(;f--;)n.lens[n.have++]=_}}if(n.mode===Ct)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=Ct;break}if(n.lenbits=9,T={bits:n.lenbits},D=Tt(1,n.lens,0,n.nlen,n.lencode,0,n.work,T),n.lenbits=T.bits,D){e.msg="invalid literal/lengths set",n.mode=Ct;break}if(n.distbits=6,n.distcode=n.distdyn,T={bits:n.distbits},D=Tt(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,T),n.distbits=T.bits,D){e.msg="invalid distances set",n.mode=Ct;break}if(n.mode=20,t===zt)break e;case 20:n.mode=21;case 21:if(s>=6&&d>=258){e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,yt(e,h),a=e.next_out,r=e.output,d=e.avail_out,o=e.next_in,i=e.input,s=e.avail_in,c=n.hold,l=n.bits,n.mode===Rt&&(n.back=-1);break}for(n.back=0;E=n.lencode[c&(1<<n.lenbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(w&&0==(240&w)){for(v=m,y=w,M=b;E=n.lencode[M+((c&(1<<v+y)-1)>>v)],m=E>>>24,w=E>>>16&255,b=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=v,l-=v,n.back+=v}if(c>>>=m,l-=m,n.back+=m,n.length=b,0===w){n.mode=26;break}if(32&w){n.back=-1,n.mode=Rt;break}if(64&w){e.msg="invalid literal/length code",n.mode=Ct;break}n.extra=15&w,n.mode=22;case 22:if(n.extra){for(S=n.extra;l<S;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.length+=c&(1<<n.extra)-1,c>>>=n.extra,l-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;E=n.distcode[c&(1<<n.distbits)-1],m=E>>>24,w=E>>>16&255,b=65535&E,!(m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(0==(240&w)){for(v=m,y=w,M=b;E=n.distcode[M+((c&(1<<v+y)-1)>>v)],m=E>>>24,w=E>>>16&255,b=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}c>>>=v,l-=v,n.back+=v}if(c>>>=m,l-=m,n.back+=m,64&w){e.msg="invalid distance code",n.mode=Ct;break}n.offset=b,n.extra=15&w,n.mode=24;case 24:if(n.extra){for(S=n.extra;l<S;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}n.offset+=c&(1<<n.extra)-1,c>>>=n.extra,l-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Ct;break}n.mode=25;case 25:if(0===d)break e;if(f=h-d,n.offset>f){if(f=n.offset-f,f>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Ct;break}f>n.wnext?(f-=n.wnext,p=n.wsize-f):p=n.wnext-f,f>n.length&&(f=n.length),g=n.window}else g=r,p=a-n.offset,f=n.length;f>d&&(f=d),d-=f,n.length-=f;do{r[a++]=g[p++]}while(--f);0===n.length&&(n.mode=21);break;case 26:if(0===d)break e;r[a++]=n.length,d--,n.mode=21;break;case 27:if(n.wrap){for(;l<32;){if(0===s)break e;s--,c|=i[o++]<<l,l+=8}if(h-=d,e.total_out+=h,n.total+=h,h&&(e.adler=n.check=n.flags?te(n.check,r,h,a-h):$(n.check,r,h,a-h)),h=d,(n.flags?c:At(c))!==n.check){e.msg="incorrect data check",n.mode=Ct;break}c=0,l=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;l<32;){if(0===s)break e;s--,c+=i[o++]<<l,l+=8}if(c!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=Ct;break}c=0,l=0}n.mode=29;case 29:D=kt;break e;case Ct:D=Yt;break e;case 31:return Ot;default:return It}return e.next_out=a,e.avail_out=d,e.next_in=o,e.avail_in=s,n.hold=c,n.bits=l,(n.wsize||h!==e.avail_out&&n.mode<Ct&&(n.mode<27||t!==St))&&Gt(e,e.output,e.next_out,h-e.avail_out),u-=e.avail_in,h-=e.avail_out,e.total_in+=u,e.total_out+=h,n.total+=h,n.wrap&&h&&(e.adler=n.check=n.flags?te(n.check,r,h,e.next_out-h):$(n.check,r,h,e.next_out-h)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Rt?128:0)+(20===n.mode||15===n.mode?256:0),(0===u&&0===h||t===St)&&D===Zt&&(D=Xt),D},inflateEnd:e=>{if(!e||!e.state)return It;let t=e.state;return t.window&&(t.window=null),e.state=null,Zt},inflateGetHeader:(e,t)=>{if(!e||!e.state)return It;const n=e.state;return 0==(2&n.wrap)?It:(n.head=t,t.done=!1,Zt)},inflateSetDictionary:(e,t)=>{const n=t.length;let i,r,o;return e&&e.state?(i=e.state,0!==i.wrap&&11!==i.mode?It:11===i.mode&&(r=1,r=$(r,t,n,0),r!==i.check)?Yt:(o=Gt(e,t,n,n),o?(i.mode=31,Ot):(i.havedict=1,Zt))):It},inflateInfo:"pako inflate (from Nodeca project)"};var qt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const $t=Object.prototype.toString,{Z_NO_FLUSH:en,Z_FINISH:tn,Z_OK:nn,Z_STREAM_END:rn,Z_NEED_DICT:on,Z_STREAM_ERROR:an,Z_DATA_ERROR:sn,Z_MEM_ERROR:dn}=ie;function cn(e){this.options=$e({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new at,this.strm.avail_out=0;let n=Qt.inflateInit2(this.strm,t.windowBits);if(n!==nn)throw new Error(ne[n]);if(this.header=new qt,Qt.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=it(t.dictionary):"[object ArrayBuffer]"===$t.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Qt.inflateSetDictionary(this.strm,t.dictionary),n!==nn)))throw new Error(ne[n])}function ln(e,t){const n=new cn(t);if(n.push(e),n.err)throw n.msg||ne[n.err];return n.result}cn.prototype.push=function(e,t){const n=this.strm,i=this.options.chunkSize,r=this.options.dictionary;let o,a,s;if(this.ended)return!1;for(a=t===~~t?t:!0===t?tn:en,"[object ArrayBuffer]"===$t.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(i),n.next_out=0,n.avail_out=i),o=Qt.inflate(n,a),o===on&&r&&(o=Qt.inflateSetDictionary(n,r),o===nn?o=Qt.inflate(n,a):o===sn&&(o=on));n.avail_in>0&&o===rn&&n.state.wrap>0&&0!==e[n.next_in];)Qt.inflateReset(n),o=Qt.inflate(n,a);switch(o){case an:case sn:case on:case dn:return this.onEnd(o),this.ended=!0,!1}if(s=n.avail_out,n.next_out&&(0===n.avail_out||o===rn))if("string"===this.options.to){let e=ot(n.output,n.next_out),t=n.next_out-e,r=rt(n.output,e);n.next_out=t,n.avail_out=i-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(r)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(o!==nn||0!==s){if(o===rn)return o=Qt.inflateEnd(this.strm),this.onEnd(o),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},cn.prototype.onData=function(e){this.chunks.push(e)},cn.prototype.onEnd=function(e){e===nn&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=et(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var un={Inflate:cn,inflate:ln,inflateRaw:function(e,t){return(t=t||{}).raw=!0,ln(e,t)},ungzip:ln,constants:ie};const{Deflate:hn,deflate:fn,deflateRaw:pn,gzip:gn}=vt,{Inflate:mn,inflate:wn,inflateRaw:bn,ungzip:vn}=un;var yn={Deflate:hn,deflate:fn,deflateRaw:pn,gzip:gn,Inflate:mn,inflate:wn,inflateRaw:bn,ungzip:vn,constants:ie};const Mn=new s.Z({prefix:"utf8: "});const _n=function(e){try{if(window.TextEncoder)return new window.TextEncoder("utf-8").encode(e).buffer}catch(e){Mn.debugf(null,"TextEncoder %o",e)}for(var t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length),i=0;i<t.length;i++)n[i]=t.charCodeAt(i);return n.buffer},Dn=function(e){try{if(window.TextDecoder)return new window.TextDecoder("utf-8").decode(new Uint8Array(e))}catch(e){Mn.debugf(null,"TextDecoder %o",e)}for(var t="",n=new Uint8Array(e),i=n.byteLength,r=0;r<i;r++)t+=String.fromCharCode(n[r]);return decodeURIComponent(escape(t))};var En=new function(){var e="pid",t="nr",o=p(8,10);const a=window.location.href;var s=n.Z.upoSettings.recoveryScriptVersion;let d;try{d=window.__bt_intrnl.traceID}catch(e){d=""}var c=function(e,t){""==e&&(e="/");var n=e,i="?";(t=t||{}).upapi=["true"],t.tid=[d],t.cv=[s];for(var r=Object.keys(t),o=0;o<r.length;o++)for(var a=r[o],c=t[a],l=0;l<c.length;l++){var u=c[l];n+=i+encodeURIComponent(a)+"="+encodeURIComponent(u),i="&"}return n};this.sendLog=function(e){const t=n.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:i,websiteID:r}=t,o={event:e.event,severity:e.severity,error:e.error&&{name:e.error.name,stack:e.error.stack,sourceFilename:e.error.sourceFilename},message:e.message,columnNumber:e.columnNumber,lineNumber:e.lineNumber,filename:e.filename,module:e.module,orgID:i,websiteID:r,meta:{...e.meta||{},pageURL:a}};var s={method:"POST",url:c("/log"),body:_n(JSON.stringify(o))};return u.$fetch(s)},this.testCompliance=function(e){return new Promise((function(t,n){var i={};i.pid=[o],i.nr=["2"];var r=e,a=c("/tc",i),s=JSON.stringify(e);try{s&&s.length>=2048&&window.localStorage&&!window.localStorage.updebug?(r=yn.deflate(s).buffer,i.z=[1],a=c("/tc",i)):r=_n(s)}catch(e){r=_n(s)}var d={method:"POST",url:a,body:r};u.$fetch(d).then((function(e){var n=JSON.parse(Dn(e.body)),i={};for(var r in n)n.hasOwnProperty(r)&&(i[r]={status:n[r].status,id:n[r].id,backup:n[r].backup});t(i)}),(function(e){n(new Error)}))}))},this.reportAuctionStarted=function(n,r,s,d,l,h,f,p){const g={[e]:[o],[t]:["1"]},m={websiteID:h,orgID:f,auctionID:n,spaceExternalID:r,spaceName:s,refreshDepth:p,pageURL:a};m.bids=l.map((e=>({bidderExternalID:e.bidderId,provider:e.provider}))),d&&(m.gamAdUnitPath=d),i.Y.fireEvent("auctionStartChangeRequestData",{query:g,body:m});const w={method:"POST",url:c("/as",g),body:_n(JSON.stringify(m))};return u.$fetch(w)},this.reportAuctionEnd=function(n,r,s,d,l,h,f,p,g,m){const w={[e]:[o],seid:[f],[t]:["1"]},b={...h,websiteID:d,orgID:l,auctionID:n,spaceExternalID:r,spaceName:s,dfpAdUnit:f,adUnitCode:f,gamEnabled:g,refreshDepth:m,pageURL:a};p&&(b.gamAdUnitPath=p),i.Y.fireEvent("auctionEndChangeRequestData",{query:w,body:b});const v={method:"POST",url:c("/ae",w),body:_n(JSON.stringify(b))};return u.$fetch(v)},this.reportRender=function(e,n,i,r,o,s,d,l,h,f,p){const g={[t]:["1"]},m={websiteID:h,orgID:f,auctionID:e,spaceExternalID:s,spaceName:d,bidderExternalID:n,...i,refreshDepth:p,pageURL:a,amount:r,currency:o};l&&(m.gamAdUnitPath=l);const w={method:"POST",url:c("/r",g),body:_n(JSON.stringify(m))};return u.$fetch(w)},this.reportView=function(e,n,i,r,o,s,d,l,h){const f={[t]:["1"]},p={websiteID:d,orgID:l,auctionID:e,spaceExternalID:r,spaceName:o,bidderExternalID:n,...i,refreshDepth:h,pageURL:a};s&&(p.gamAdUnitPath=s);const g={method:"POST",url:c("/v",f),body:_n(JSON.stringify(p))};return u.$fetch(g)},this.consentData=function(e){const t={},i={},d=[10,13,25,28,32,52,69,76,91,755],l={consents:{}},h=e.tcData,f=e.error,p=n.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:g,websiteID:m}=p;g&&(t.organizationID=parseInt(g)),m&&(t.websiteID=parseInt(m)),t.pageID=o,t.clientVersion=s,h?(i.cmpVersion=h.cmpVersion,i.gdprApplies=h.gdprApplies,i.tcfPolicyVersion=h.tcfPolicyVersion,i.tcString=h.tcString,h.gdprApplies&&(i.purpose=h.purpose,d.forEach((e=>l.consents[e]=h.vendor.consents[e])),i.vendor=l)):(i.gdprApplies=null,i.error=r.Z.commonUtils.truncateString(f.message,1024)),t.tcData=i,t.pageURL=a;var w={method:"POST",url:c("/ce"),body:_n(JSON.stringify(t))};return u.$fetch(w)}};const Nn=new s.Z({prefix:"report: "});var Tn=new function(){function e(e){const t={};return"relay"===e.bidderCode?(t.provider="bt_server",t.demandBidder=e.rawBid.btBidderCode,"index"===t.demandBidder&&(t.demandBidder="ix")):"s2s"===e.rawBid.source?(t.provider="bt_exchange",t.demandBidder=e.bidderCode):t.provider=e.bidderCode,t}this.init=function(){const t=n.Z.SharedObject.getItem("websiteConfig");i.Y.addEventListener("FirePublisherEvent",(function(e){const{data:t,eventName:n}=e,i=t.payload||{bubbles:!1,cancelable:!1,detail:void 0};if(window.CustomEvent)try{const e=new window.CustomEvent(n,i);return void window.dispatchEvent(e)}catch(e){const t=document.createEvent("CustomEvent");return t.initCustomEvent(n,i.bubbles,i.cancelable,i.detail),void window.dispatchEvent(t)}const r=document.createEvent("CustomEvent");r.initCustomEvent(n,i.bubbles,i.cancelable,i.detail),window.dispatchEvent(r)})),i.Y.addEventListener("sendLog",(function(e){const t=e.data;En.sendLog(t).then((function(e){Nn.infof(null,"sendLog - %o",e)}),(function(e){Nn.errorf(null,"sendLog - %o",e)}))})),i.Y.addEventListener("onAuctionStarted",(function(e){const n=e.data.auction,i=n.auctionId,r=n.unit.space.id,o=n.unit.space.templateSpaceName||n.unit.space.name,a=n.unit.gamAdUnitPath,s=[],d=n.unit.space.preBiddingSettings&&n.unit.space.preBiddingSettings.biddingSettings,c=n.unit.space.postBiddingSettings;if(d)for(let e in d){if(e=parseInt(e),!d.hasOwnProperty(e))continue;d[e].forEach((e=>{s.push({bidderId:e.id,provider:e.name})}))}c&&(c.adxId&&s.push({bidderId:c.adxId,provider:"gad"}),c.directId&&s.push({bidderId:c.directId,provider:"direct"})),En.reportAuctionStarted(i,r,o,a,s,t.websiteID,t.organizationID,n.unit.countOfDispatches-1).then((function(e){Nn.infof(null,"onAuctionStarted - %o",e)}),(function(e){Nn.errorf(null,"onAuctionStarted - %o",e)}))})),i.Y.addEventListener("onAuctionEnded",(function(r){const o=r.data,a=o.auction,s=o.bid,d=a.bids,c=a.unit.space.templateSpaceName||a.unit.space.name,l=a.unit.gamAdUnitPath;let u=a.unit.space.name;const h="default-creative"===s.bidder&&s.disableAuctionEventLogging;try{if(t.dfpEnabled){const e=window.googletag.pubads().getSlots();for(let t=0;t<e.length;t++){const n=e[t],i=n.getSlotElementId();if(document.getElementById(i)===a.unit.element){u=n.getAdUnitPath().split("/")[n.getAdUnitPath().split("/").length-1];break}}}}catch(e){Nn.errorf(null,"onAuctionEnded: %o",e)}const f={bids:[],aliens:[],win:void 0};for(let t=0;t<d.length;t++){const r=d[t],o={bid:{cpm:r.cpm,bidderCode:r.bidderCode,complianceStatus:r.complianceStatus}},a=i.Y.fireEvent("bidCpmAdjustment",o)||1,c=r.cpm/1e3*a,l=n.Z.upoSettings.prebidTimeout,h={bidderExternalID:r.bidderId,...e(r),amount:c,complianceStatus:r.complianceStatus,timeout:l,latency:r.timeToRespond,requestStatus:"OK",creativeID:r.contentIdHash,adUnit:u,adSize:String(r.width)+"x"+String(r.height),adID:r.adId,currency:r.currency};if(r!==s)switch(h.complianceStatus){case n.Z.consts.complianceStatus.COMPLIANT:case n.Z.consts.complianceStatus.INCOMPLIANT:f.bids.push(h);break;default:f.aliens.push(h)}else f.win=h}if(h){const e={sendToServer:!0,event:"Default Creative",meta:{adUnitCode:u,aliens:f.aliens,auctionID:a.auctionId,bids:f.bids,dfpAdUnit:u,gamEnabled:t.dfpEnabled,orgID:t.organizationID,pageURL:window.location.href,refreshDepth:a.unit.countOfDispatches-1,spaceExternalID:a.unit.space.id,spaceName:c,websiteID:t.websiteID,win:f.win}};Nn.infof(null,"Default Creative, auction ID -> ",a.auctionId||"N/A",e)}else En.reportAuctionEnd(a.auctionId,a.unit.space.id,c,t.websiteID,t.organizationID,f,u,l,t.dfpEnabled,a.unit.countOfDispatches-1).then((function(e){Nn.infof(null,"onAuctionEnded - %o",e)}),(function(e){Nn.errorf(null,"onAuctionEnded - %o",e)}))})),i.Y.addEventListener("onAuctionRendered",(function(n){const r=n.data,o=r.auction,a=r.bid,s=o.unit.space.templateSpaceName||o.unit.space.name;if(!("default-creative"===a.bidder&&a.disableAuctionEventLogging)){const n={bid:{cpm:a.cpm,bidderCode:a.bidderCode,complianceStatus:a.complianceStatus}},r=i.Y.fireEvent("bidCpmAdjustment",n)||1,d=a.cpm/1e3*r;En.reportRender(o.auctionId,a.bidderId,e(a),d,a.currency,o.unit.space.id,s,o.unit.gamAdUnitPath,t.websiteID,t.organizationID,o.unit.countOfDispatches-1).then((function(e){Nn.infof(null,"onAuctionRendered - %o",e)}),(function(e){Nn.errorf(null,"onAuctionRendered - %o",e)}))}})),i.Y.addEventListener("onAdViewed",(function(n){const i=n.data,r=i.auction,o=i.bid,a=r.unit.space.templateSpaceName||r.unit.space.name;"default-creative"===o.bidder&&o.disableAuctionEventLogging||En.reportView(r.auctionId,o.bidderId,e(o),r.unit.space.id,a,r.unit.gamAdUnitPath,t.websiteID,t.organizationID,r.unit.countOfDispatches-1).then((function(e){Nn.infof(null,"onAdViewed - %o",e)}),(function(e){Nn.errorf(null,"onAdViewed - %o",e)}))}))},i.Y.addEventListener("consentData",(function(e){const t=e.data;En.consentData(t).then((function(e){Nn.infof(null,"consentData - %o",e)}),(function(e){Nn.errorf(null,"consentData - %o",e)}))}))};const Sn=new s.Z({prefix:"verifications: "});const Bn={Report:Tn,Verifications:new function(){this.run=function(){r(),e()};var e=function(){i.Y.addEventListener("getRestrictionSettingsEnded",(function(e){var t=i.Y.fireEvent("acceptableAbTest");if(t){var n="//static.criteo.net/images/pixel.gif?ch=1&upapi=true";t&&(n=t.src);var r=new Image;r.addEventListener("load",(function(){t.callback(!0)}),!1),r.addEventListener("error",(function(){t.callback(!1)}),!1),r.src=n}}))},t=!1,r=function(){i.Y.addEventListener("getRestrictionSettingsEnded",(function(e){var r=e.data;r.contentRestriction&&r.acceptableAds&&(window.pbjs=window.pbjs||{},window.pbjs.que=window.pbjs.que||[],window.pbjs.que.push((function(){window.pbjs.onEvent("bidResponse",(function(e){if(!t&&e&&e.length>0)for(var r=0;r<e.length;r++)if(e[r].cpm>0&&"emx_digital"!==e[r].bidder&&"districtmDMX"!==e[r].bidder){t=!0,i.Y.fireEvent("disableStopFlag")||(window.__bt_intrnl.stopFlag=!0);var o=n.Z.SharedObject.getItem("renderedUnits"),a={adBlockDetectionType:n.Z.SharedObject.getItem("adBlockDetectionType"),stopedProcess:!o||0==o.length};const e={sendToServer:!0,event:"pbjsDetected",meta:a,sendPercentage:1};Sn.noticef(null,"pub's pbjs was detected -> ",a,e)}if(e){var s={cpm:e.cpm?e.cpm:0,creativeLength:e.ad?e.ad.length:0,bidderCode:e.bidderCode||"",adUnitCode:e.adUnitCode||""};const t={sendToServer:!0,event:"pbjsBidReceived",meta:s};Sn.noticef(null,"pub's pbjs bid was received -> ",s,t)}}))})))}))}}};var zn=function(e){switch(e){case"ALL":return n.Z.consts.refreshType.ALL;case"VISIBLE":return n.Z.consts.refreshType.VISIBLE;case"HIDDEN":return n.Z.consts.refreshType.HIDDEN;default:return n.Z.consts.refreshType.UNKNOWN}};function Zn(e){return e&&e.selector?r.Z.commonUtils.getElementWithSelector(e.selector.value):null}var kn=__webpack_require__(246);const xn=new s.Z({prefix:"moveElementPosition: "});var In=new function(){var e=[],t=[];this.setMovePositionRules=function(t){e=t||[]},this.dispatch=function(i){try{if(!e||e.length<=0)return;if(!(i=kn.Z.filter(i,(function(e){return t.indexOf(e)<0})))||i.length<=0)return;var r=function(o,a){if(!(o>a)){for(var s=0;s<i.length;s++){for(var d=i[s],c=[],l=0;l<e.length;l++){var u=e[l];n(u,{space:d})&&(t.push(d),u.stayLive||c.push(u))}e=c.length>0?kn.Z.filter(e,(function(e){return c.indexOf(e)<0})):e}e.length>0&&setTimeout((function(){r(o+1,a)}),100)}};r(0,20)}catch(e){xn.errorf(null,"error in `movePositionService` `dispatch` function: %o",e)}};var n=function(e,t){var n=e.elementToMove(t),i=e.relativeElement(t);return!(!n||!i||n.__upo_moved)&&(r.Z.ElementInsertion.insertElement(n,i,e.htmlElementInsertionType),n.__upo_moved=!0,!0)}},Yn=__webpack_require__(17),On=__webpack_require__(143);const Xn=new s.Z({prefix:"whitelistingIFrame: "});const Hn="BT_WHITELISTING_IFRAME_ACCESS";function Rn(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:On.Im.whitelistingIFrameSettings.publisherDomainWhitelistingIFrameCandidatesSrcs;const n=i.Y.fireEvent("customWhitelistingIFrameURL"),r=i.Y.fireEvent("keepBTDomainWhitelistingIFrame");return e=n?Promise.resolve(n):r?Promise.resolve(null):Cn(t,0),e.then((e=>{On.Im.whitelistingIFrameSettings.url=e||On.Im.whitelistingIFrameSettings.url,On.Im.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame=!e})),e}function Cn(e,t){return e[t]?new Promise((n=>{const i=r.Z.addAcceptableParam(e[t]),o=new window.XMLHttpRequest;o.open("GET",i),o.addEventListener("load",(r=>{try{if(!o.status.toString().startsWith("4")&&o.responseURL==="".concat(window.location.origin).concat(i)&&function(e){const t=e.getResponseHeader("x-frame-options");if(t&&"deny"===t.toLowerCase())return!1;const n=e.getResponseHeader("content-security-policy"),i=n&&n.split(","),r=i&&i.find((e=>e.startsWith("frame-ancestors")))&&r.split(" ");return!(r&&!r.some((e=>e===window.location.origin)))}(o))return void function(e){try{let t=localStorage.getItem(Hn);if(t=t&&JSON.parse(t),t&&void 0!==t.canAccess&&t.expiration&&t.url&&t.version&&Date.now()<t.expiration&&t.url===e&&"1"===t.version)return Promise.resolve(t.canAccess)}catch(e){Xn.noticef(null,"whitelisting flawed cached value structure")}return new Promise((t=>{const n=document.createElement("iframe");n.src=e;const i=()=>{n.removeEventListener("load",i);let r=!1;n.contentDocument&&(r=!0),t(r);const o={canAccess:r,url:e,expiration:Date.now()+6048e5,version:"1"};localStorage.setItem(Hn,JSON.stringify(o)),n.parentElement.removeChild(n)};n.addEventListener("load",i),n.style.setProperty("visibility","hidden"),document.body.appendChild(n)}))}(i).then((e=>{n(e?i:null)}));Cn(e,t+1).then((e=>n(e)))}catch(i){Cn(e,t+1).then((e=>n(e)))}})),o.addEventListener("error",(i=>{Cn(e,t+1).then((e=>n(e)))})),o.send()})):Promise.resolve(null)}var An=function(){const e=On.Im.whitelistingIFrameSettings.url;var t=document.createElement("iframe"),n=function(){if(this.removeEventListener("load",n),On.Im.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame||this.contentDocument||(On.Im.whitelistingIFrameSettings.url=On.VP,On.Im.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame=On.k$,localStorage.removeItem(Hn),this.src=On.Im.whitelistingIFrameSettings.url),e.includes("about:blank"))try{!function(e){var t=e.contentWindow,n=function(e){return 0===e.indexOf("//")&&(e=r.Z.commonUtils.getTopmostAccessibleWindow().location.protocol+e),e};const i=function(e,t){if(e&&""===e.src&&e.outerHTML){const i=new RegExp(t+'="([^"]+)"',"g").exec(e.outerHTML);i&&i[1]&&(e[t]=n(i[1]))}};var o=t.XMLHttpRequest.prototype.open;t.XMLHttpRequest.prototype.open=function(){try{var e=Array.prototype.slice.call(arguments);e[1]=n(e[1])}catch(e){Xn.errorf(null,"error in XHRHttpRequest.open hook: %o",e)}return o.apply(this,e)};var a=t.open;t.open=function(){try{var e=Array.prototype.slice.call(arguments);e[0]=n(e[0])}catch(e){Xn.errorf(null,"error in `window.open` hook: %o",e)}return a.apply(this,e)};const s=function(e){return function(){try{var t=Array.prototype.slice.call(arguments);["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&i(t[0],"src"),"LINK"===t[0].tagName&&i(t[0],"href")}catch(e){Xn.errorf(null,"error in `hookOnFunc`: %o",e)}return e.apply(this,t)}},d=t.HTMLElement.prototype.insertBefore;t.HTMLElement.prototype.insertBefore=s(d);const c=t.HTMLElement.prototype.appendChild;t.HTMLElement.prototype.appendChild=s(c);var l=t.HTMLElement.prototype.__lookupGetter__("innerHTML"),u=t.HTMLElement.prototype.__lookupSetter__("innerHTML");t.HTMLElement.prototype.__defineSetter__("innerHTML",(function(){try{var e=Array.prototype.slice.call(arguments),t=u.apply(this,e),n=this.firstChild;i(n,"src")}catch(e){Xn.errorf(null,'error in HTMLElement "innerHTML" property setter hook: %o',e)}return t})),t.HTMLElement.prototype.__defineGetter__("innerHTML",(function(){try{return l.apply(this)}catch(e){Xn.errorf(null,'error in HTMLElement "innerHTML" property getter hook: %o',e)}}));for(var h=Yn.v.htmlElements,f=0;f<h.length;f++)t[h[f]]&&function(e){var t=e.prototype,i="src",r=t.__lookupGetter__(i),o=t.__lookupSetter__(i);r&&(t.__defineSetter__(i,(function(){try{var e=Array.prototype.slice.call(arguments);e[0]=n(e[0])}catch(e){Xn.errorf(null,'error in <html> "src" attribute setter hook: %o',e)}return o.apply(this,e)})),t.__defineGetter__(i,(function(){try{return r.apply(this)}catch(e){Xn.errorf(null,'error in <html> "src" attribute getter hook: %o',e)}})))}(t[h[f]])}(this)}catch(e){Xn.errorf(null,"error calling `addAboutBlankHooks` in `createWhitelistingIFrame`: %o",e)}};return t.addEventListener("load",n),t.src=e,t};const Wn={commonBLUtils:e,movePositionService:In,whitelistingIFrame:t},Fn=new s.Z({prefix:"auction: "});var Vn=function(e){var t=!1,o=new r.Z.SubscriptionLayer;this.auctionId=p(8,9),this.unit=e.unit,this.state=Vn.States.UNOFFERED,this.creationTime=new Date,this.lastUpdate=this.creationTime,this.bids=[],this.subscribeForEvent=function(e,t){o.subscribeForEvent(e,t)},this.cancelAuction=function(){t=!0,a(this)},this.getWinningBid=function(){for(var e=void 0,t=0;t<this.bids.length;t++){var i=this.bids[t];(!e||i.cpm>e.cpm)&&i.complianceStatus===n.Z.consts.complianceStatus.COMPLIANT&&(e=i)}return e},this.addBids=function(e){if(e)for(var t=0;t<e.length;t++){var n=e[t];this.bids.push(n)}};this.getComplianceBids=function(){for(var e=[],t=0;t<this.bids.length;t++){var i=this.bids[t];i.complianceStatus===n.Z.consts.complianceStatus.COMPLIANT&&e.push(i)}return e},this.renderWinningBid=function(){var e=this.getWinningBid();this.renderBid(e)};var a=function(e){e.bids.forEach((e=>{e.cancelBid()}))};function s(e){return new Promise(((t,n)=>{window.setTimeout((function(){try{e&&"none"===window.getComputedStyle(e).display&&e.style.setProperty("display","block","important"),t()}catch(e){n(e)}}),1e3)}))}this.renderBid=function(e){try{if(i.Y.fireEvent("renderBidInElementStarted",{element:this.unit&&this.unit.element}),this.state=Vn.States.DONE,function(){if(!document.getElementById("bt-render-styles")){var e=document.createElement("style");e.id="bt-render-styles",e.type="text/css",e.textContent=".up-hide { display: none !important; }",e.textContent+='.ahover + [id^="google_ads_iframe_"] { width: 1px !important; height:1px !important; display: grid !important; }',(document.head||document.body||document.documentElement).appendChild(e)}}(),function(e,t){for(var n=0;n<e.bids.length;n++){var i=e.bids[n];i!==t&&i.cancelBid()}}(this,e),!e||t||!r.Z.commonUtils.isElementInBody(this.unit.element))return this.unit.currentBid||(c=this.unit,kn.Z.addClass("up-hide",c.element),kn.Z.removeClass("up-show",c.element)),e&&e.cancelBid(),void o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});{this.unit.cleanup(),d(this.unit.element),function(e,t){kn.Z.addClass("up-show",e.element),kn.Z.removeClass("up-hide",e.element)}(this.unit),this.unit.element._adData_=e,e.onRenderedEvent(function(){!function(e,t,n){var i=e.querySelector(".default-creative-container")||e.querySelector(".ahover")||e.querySelector('[id^="google_ads_iframe_"]');i.style.position||i.style.setProperty("position","relative");if(i.style.setProperty("width","max-content","important"),["sharethrough","triplelift"].indexOf(t.bidderCode)>=0){var r=t.width,o=function(e){var t=e.sizes,n=0;return kn.Z.forEach(t,(function(e){var t=e.split("x")[0];(t=parseInt(t))>n&&(n=t)})),n}(n);(r>o||r<120)&&(r=o),i.style.setProperty("max-width",r+"px","important")}i.style.setProperty("z-index",0),i.style.setProperty("margin","0 auto"),i.style.setProperty("display","block")}(this.unit.element,e,this.unit.space),function(e){if(i.Y.fireEvent("omitBTAdLabel",{unit:e}))return;const{element:t}=e,n=t.querySelector(".default-creative-container")||t.querySelector(".ahover")||t.querySelector('[id^="google_ads_iframe_"]'),r="upo-label",o=!(!n||!n.querySelector(".".concat(r)));if(!n||o)return;const a=function(e){const t=document.createElement("div");return t.className=e,t.setAttribute("style","text-align:left;padding:0px;margin:0px;position:absolute;top:0;left:0;z-index:10000;transition:opacity 1s ease-out;opacity:0;"),window.setTimeout((function(){t.style.opacity="1"}),2e3),t.innerHTML='<span style="display:block;background:rgba(255, 255, 255, 0.7);height:fit-content;width:fit-content;top:0;left:0;color:#444;font-size:10px;font-weight:bold;font-family:sans-serif;line-height:normal;text-decoration:none;margin:0px;padding:6px;border-radius:0 0 5px 0;">&#65;&#68;</span>',t}(r);n.appendChild(a),e.adLabelElement=a}(this.unit),function(e){return new Promise(((t,n)=>{try{if(i.Y.fireEvent("skipEnsureElementVisibility",{unit:e}))t();else{const i=e.element;i.classList.contains("up-show")||i.classList.add("up-show"),Promise.all([s(i),s(i.parentElement),s(i.parentElement.parentElement)]).then(t).catch(n)}}catch(e){n(e)}}))}(this.unit).then((()=>{!function(e){if(0===e.offsetWidth&&0===e.offsetHeight){const t={sendToServer:!0,sendPercentage:1,event:"ad-unit-hidden-by-css",meta:{elementId:e.id||"N/A"}};Fn.infof(null,"detectAndLogHiddenAdUnit, element ID -> ",e.id||"N/A",t)}}(this.unit.element)})).catch((e=>{Fn.errorf(null,"bid.onRenderedEvent: ensureElementVisibility/detectAndLogHiddenAdUnit: %o",e)})),o.invokeEventCallbacks("auctionRendered",e),this.unit.rendered(e),n.Z.SharedObject.getItem("renderedUnits")||n.Z.SharedObject.setItem("renderedUnits",[]),n.Z.SharedObject.getItem("renderedUnits").push(this.unit)}.bind(this));var a={placement:this.unit.element};const t=e.additionalBidsToRender&&e.additionalBidsToRender.length>0&&e.additionalBidsToRender[0];t?(t.onRenderedEvent((()=>e.renderBid(a))),t.renderBid()):e.renderBid(a),o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!0})}}catch(e){Fn.errorf(null,"renderBid err:%o",e)}var c};var d=function(e){e.style.removeProperty("background-image"),e.style.removeProperty("background-repeat")}};Vn.States={UNOFFERED:0,DISPATCHED:1,DONE:3};var Un=function(e,t,n,i,r,o,a,s){this.bidId=p(16,24),this.ad=e.ad,this.adId=e.adId,this.adUrl=e.adUrl,this.bidderId=e.bidderId,this.bidder=e.bidder,this.bidderCode=e.bidderCode,this.contentIdHash=e.contentIdHash,this.currency=e.currency,this.creativeId=e.creativeId,this.c=e.c,this.cpm=e.cpm,this.complianceStatus=e.complianceStatus||0,this.disableAuctionEventLogging=e.disableAuctionEventLogging,this.height=e.height,this.isBackupCreative=e.isBackupCreative,this.timeToRespond=e.timeToRespond,this.size=e.size,this.width=e.width,this.rawBid=t,this.type=n,this.status=Un.Status.LIVE,this.additionalBidsToRender=[],this.renderBid=r,this.cancelBid=function(){this.status!==Un.Status.CANCELED&&(this.status=Un.Status.CANCELED,o&&o(),this.additionalBidsToRender.forEach((e=>e.cancelBid())))},this.getGPTTargeting=function(e){return i&&i.call(this,e)},this.onRenderedEvent=a||function(){},this.makeEntryForTestCompliance=s||function(){}};function jn(e){for(var t=e.length,n=5381,i=52711;t--;){var r=e.charCodeAt(t);n=33*n^r,i=33*i^r}return 4096*(n>>>0)+(i>>>0)}Un.Types={EMPTY:0,PREBID:1,RTK:2,ADX:3,ADX_TEXT:4,DFP_PREBID:5,ADSENSE:6,DIRECT:7,SMART_AS:8,DEFAULT_CREATIVE:9},Un.Status={LIVE:0,CANCELED:1};var Ln=function(e){this.unitID=p(16,24),this.element=e.element,this.space=e.space,this.state=e.state||Ln.States.PENDING,this.gamAdUnitPath,this.currentBid,this.countOfDispatches=0,this.countOfRenders=0,this.lastInvokeTime,this.cleanup=function(){var e=this.element.children,n=[];for(let i=0;i<e.length;i++)n.push(t(e[i]));for(let e=0;e<n.length;e++)n[e]()},this.rendered=function(e){this.currentBid=e};var t=function(e){return function(){e&&e.parentNode&&e.parentNode.removeChild(e)}}};Ln.States={PENDING:0,CHECKING:1,DISPATCHED:2};const Pn={Auction:Vn,Bid:Un,Space:function(e){if(this.id=e.id,this.name=e.name,this.templateSpaceName=e.templateSpaceName,this.staging=e.staging,this.deviceType=e.deviceType,this.selector={position:e.selector.position,value:e.selector.value},this.sizes=e.sizes,this.preBiddingSettings={enabled:!1},e.preBiddingSettings&&(this.preBiddingSettings={enabled:e.preBiddingSettings.enabled,biddingSettings:{}},e.preBiddingSettings.enabled&&e.preBiddingSettings.biddingSettings))for(const t in e.preBiddingSettings.biddingSettings){if(!e.preBiddingSettings.biddingSettings.hasOwnProperty(t))continue;const n=e.preBiddingSettings.biddingSettings[t];this.preBiddingSettings.biddingSettings[t]=[];for(let e=0;e<n.length;e++){const i=n[e];if(i.id&&i.name&&i.params){const e={id:i.id,name:i.name,params:i.params};this.preBiddingSettings.biddingSettings[t].push(e)}}const{relayBidderParams:r}=i.Y.fireEvent("enableRelayAdapter",{spaceName:this.name})||{};if(r&&parseInt(t)===Yn.v.headerBiddingType.prebid&&!this.preBiddingSettings.biddingSettings[t].find((e=>"relay"===e.name))){let n="bidder_"+jn(this.id+"_relay_"+JSON.stringify(e).trim());n=n.substr(0,500);const i={id:n,name:"relay",params:r};this.preBiddingSettings.biddingSettings[t].push(i)}const{adUnitStoredRequestId:o}=i.Y.fireEvent("snigelAdapterConfiguration",{spaceName:this.name})||{};if(o){let n="bidder_"+jn(this.id+"_snigel_"+JSON.stringify(e).trim());n=n.substr(0,500);const i={id:n,name:"bt_exchange"};this.preBiddingSettings.biddingSettings[t].push(i)}}if(this.postBiddingSettings={enabled:!1},e.postBiddingSettings&&e.postBiddingSettings.enabled){this.postBiddingSettings={adxId:e.postBiddingSettings.adxId,directId:e.postBiddingSettings.directId,enabled:e.postBiddingSettings.enabled,type:e.postBiddingSettings.type,order:[]};for(let n=0;n<e.postBiddingSettings.order.length;n++){var t=e.postBiddingSettings.order[n];i.Y.fireEvent("removeAdServerRequestIteration",{iterationConfig:t})||this.postBiddingSettings.order.push({params:{keyValues:t.params.keyValues||{},queryParams:t.params.queryParams||{}},adx:{bidderID:t.adx.bidderID,testCompliance:t.adx.testCompliance},direct:{bidderID:t.direct.bidderID}})}}},Unit:Ln},Kn=new s.Z({prefix:"adUnitParser: "});function Jn(e,t,n){var i=window.googletag.defineSlot(e,t,n);return i&&i.addService(window.googletag.pubads()),i}function Gn(e){if(e){var t=i.Y.fireEvent("rewriteGAMSlots")||i.Y.fireEvent("GAMSpecialAdUnit");if(t&&t.parseSlotAdUnitPath&&!e._is_rewritten_slot){var n=e.getSlotElementId(),r=e.getSizes();r=function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];i&&i.getWidth&&i.getHeight?t.push([i.getWidth(),i.getHeight()]):i&&"fluid"===i&&t.push("fluid")}return t}(r);try{var o=t.parseSlotAdUnitPath(e);if(t.shouldSkipDestroySlot&&t.shouldSkipDestroySlot(e,o)||function(e){var t=e.getSlotElementId();window.googletag.destroySlots([e]);const n=document.getElementById(t),i=n&&n.querySelector("div[id^='google_ads_iframe_']");n&&i&&n.removeChild(i)}(e),!o)return;var a=Jn(o,r,n);return a&&(a._is_rewritten_slot=!0,t.shouldCopyTargeting&&function(e,t){var n=e.getTargetingMap();for(var i in n)if(n.hasOwnProperty(i)){var r=n[i][0];t.setTargeting(i,r)}}(e,a),t.postSlotCreation&&t.postSlotCreation(a)),a}catch(e){Kn.errorf(null,"error redefining GAM slot (e.g. for SAU or BT AdX unit)",e)}}}}const Qn={hookName:"amazonBidderConfiguration",handler:e=>{let{amazonConfig:t={},pubID:n,keepHbPb:i=!1}=e;const{amazonCPMCurrency:r="USD",amazonCPMChart:o}=t;return window.upo_amzn={amazonCPMCurrency:r,amazonCPMChart:o},{pubID:n,keepHbPb:i}}};var qn=__webpack_require__(905);function $n(e){const t=qn.tq();switch(e){case"mobile":return t;case"desktop":return!t;default:return!0}}function ei(e){let{string:t,condition:n,candidates:i=[]}=e;if(1===i.length)switch(n){case"equals":case"equalsOneOf":return t===i[0];case"startsWith":case"endsWith":case"includes":return t[n](i[0]);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const e=n.split("OneOf")[0];return t[e](i[0])}}else if(i.length>1)switch(n){case"equalsOneOf":return i.includes(t);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const e=n.split("OneOf")[0];return i.some((n=>t[e](n)))}}}const ti={enableAmazon:Qn,enableLegacySizesReplacer:{hookName:"enableLegacySizesReplacer",handler:e=>e},enableRelay:{hookName:"enableRelayAdapter",handler:e=>{let{relayConfig:t={},sid:n}=e;return{relayBidderParams:{...t},sid:n}}},enableSnigel:{hookName:"snigelAdapterConfiguration",handler:(e,t)=>{var n;let{snigelConfig:i={},websiteStoredRequestId:r}=e;const o=(null==t||null===(n=t.data)||void 0===n?void 0:n.spaceName)||"",a={websiteStoredRequestId:r,adUnitStoredRequestId:null};return a.adUnitStoredRequestId=i[o],a}},hideDOMElementsViaCSS:{parseSettingValue:e=>{const{org:t=[],website:n=[],websiteOverridesOrg:i}=e;return i?n:[...t,...n]},handler:e=>{const t=[];if(e.forEach((e=>{let{whenDevice:n,selectors:i}=e;$n(n)&&t.push(...i)})),t.length>0){const e=document.createElement("style");e.textContent="".concat(t.join(", ")," { display: none !important; }"),(document.head||document.body||document.documentElement).appendChild(e)}}},insertCustomCSS:{parseSettingValue:e=>{const{org:t=[],website:n=[],websiteOverridesOrg:i}=e;return i?n:[...t,...n]},handler:e=>{let t="";if(e.forEach((e=>{let{whenDevice:n,customCSS:i=""}=e;$n(n)&&(t="".concat(t,"\n").concat(i))})),""!==t){const e=document.createElement("style");e.textContent=t,(document.head||document.body||document.documentElement).appendChild(e)}}},prebidConfig:{hookName:"prebidDoneInit",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;return i?n:{...t,...n}},handler:(e,t)=>{const n=e,i=t.data.cpbjs;i.que.push((function(){i.setConfig(n)}))}},prebidTimeout:{hookName:"prebidTimeout",handler:e=>e},removeSizes:{hookName:"sizesToRemoveBySpace",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e,{forAllSpaces:r=[],forSpaces:o=[]}=t,{forAllSpaces:a=[],forSpaces:s=[]}=n;return{forAllSpaces:i?a:[...r,...a],forSpaces:i?s:[...o,...s]}},handler:(e,t)=>{let{forAllSpaces:n,forSpaces:i}=e;const r=t.data.spaceName,o=t.hookFileData||[],a=new Set(o);return n.forEach((e=>{let{whenDevice:t,sizes:n=[]}=e;$n(t)&&n.forEach((e=>{a.add(e)}))})),i.forEach((e=>{let{name:t,nameList:n,whenName:i,whenDevice:o,sizes:s=[]}=e;$n(o)&&ei({string:r,condition:i,candidates:t?[t]:n})&&s.forEach((e=>{a.add(e)}))})),[...a].map((e=>{if("fluid"===e)return"fluid";{let t,n;return"string"==typeof e?[t,n]=e.split("x").map((e=>parseInt(e,10))):"object"==typeof e&&(t=e.width,n=e.height),isNaN(t)||isNaN(n)?null:{width:t,height:n}}})).filter((e=>null!==e))}},rewriteGAMSlots:{hookName:"rewriteGAMSlots",handler:(e,t)=>{let n,{rewritePathMethod:i,rewritePathData:r}=e;switch(i){case"insertBTAdUnit":{const{btUnitName:e,insertionDepth:t,maxDepth:i}=r||{};t&&(n=n=>{let r=n.getAdUnitPath();"/"!==r[0]&&(r="/".concat(r));const o=e||"Blockthrough";let a=r.split("/");a.splice(t,0,o),i&&i>0&&(a=a.slice(0,i+1));return a.join("/")});break}}if(n)return{parseSlotAdUnitPath:n,shouldCopyTargeting:!0}}},scrapeGoogletagSlots:{hookName:"scrapeGoogletagSlots",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;if(i)return n;{const e={},{slots:i}=t.filterOut||{},{slots:r}=n.filterOut||{};return(i||r)&&(e.filterOut={},e.filterOut.slots=i&&r?[...i,...r]:i||r),e}},handler:(e,t)=>{let{dontScrape:n,filterOut:i}=e;const r=t.data&&t.data.slot;let o=!0;if(n||!r)o=!1;else{const e=i&&i.slots;if(e&&e.length>0){o=!e.some((e=>{let{divId:t,divIdList:n,whenDivId:i,whenDevice:o}=e;return $n(o)&&ei({string:r.getSlotElementId(),condition:i,candidates:t?[t]:n})}))}}return o}},scrapePrebid:{hookName:"scrapePrebidAdUnits",parseSettingValue:e=>{const{org:t={},website:n={},websiteOverridesOrg:i}=e;if(i)return n;{const e={};e.adUnitsVar=t.adUnitsVar||n.adUnitsVar;const{removeBidders:i}=t.parse||{},{removeBidders:r}=n.parse||{};(i||r)&&(e.parse={},e.parse.removeBidders=i&&r?{forAllAdUnits:[...i.forAllAdUnits||[],...r.forAllAdUnits||[]],forAdUnits:[...i.forAdUnits||[],...r.forAdUnits||[]]}:i||r);const{adUnits:o}=t.filterOut||{},{adUnits:a}=n.filterOut||{};return(o||a)&&(e.filterOut={},e.filterOut.adUnits=o&&a?[...o,...a]:o||a),e}},handler:(e,t)=>{let n,{dontScrape:i,adUnitsVar:o,parse:a,filterOut:s}=e;if(i)n=!1;else{if(n=t.hookFileData||{},o&&(n.getAdUnits=()=>r.Z.commonUtils.extractVariableFromString(window,o)),a){const e=a.removeBidders?function(){let{forAllAdUnits:e=[],forAdUnits:t=[]}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(e.length>0||t.length>0)return n=>{const i=[];return e.forEach((e=>{let{whenDevice:t,bidders:n=[]}=e;$n(t)&&i.push.apply(i,n)})),t.forEach((e=>{let{code:t,codeList:r,whenCode:o,whenDevice:a,bidders:s=[]}=e;const d=t?[t]:r;$n(a)&&ei({string:n.code,condition:o,candidates:d})&&i.push.apply(i,s)})),n.bids=n.bids.filter((e=>{let{bidder:t}=e;return!i.includes(t)})),n}}(a.removeBidders):null,t=n.parseAdUnit;e&&(n.parseAdUnit=t?n=>e(t(n)):e)}if(s){const e=s.adUnits?(d=s.adUnits,e=>d.some((t=>{let{code:n,codeList:i,whenCode:r,whenDevice:o}=t;return $n(o)&&ei({string:e.code,condition:r,candidates:n?[n]:i})}))):null,t=n.filterOutAdUnit;e&&(n.filterOutAdUnit=t?n=>t(n)||e(n):e)}}var d;return n}}},ni=new s.Z({prefix:"scriptsettings: "}),ii=ti,ri={"prebidConfig__org":{"_enabled":true,"value":{"enableSendAllBids":false,"syncsPerBidder":20}},"removeSizes__org":{"_enabled":true,"value":{"forAllSpaces":[{"sizes":["970x250"],"whenDevice":"any"}],"forSpaces":[]}},"scrapePrebid__org":{"_enabled":true,"value":{"adUnitsVar":"","filterOut":{},"parse":{"removeBidders":{"forAdUnits":[{"bidders":["gumgum"],"codeList":["_adhesion","_sticky"],"whenCode":"endsWithOneOf","whenDevice":"any"}]}}}}},oi=Object.entries(ri).reduce(((e,t)=>{let[n,i]=t;if(i._enabled)if(n.endsWith("__org")){const t=n.split("__org")[0];e[t]=e[t]||{},e[t].org=i.value}else if(n.endsWith("__website")){const t=n.split("__website")[0];e[t]=e[t]||{},e[t].websiteOverridesOrg=!!i._overrides_org,e[t].website=i.value}else e[n]=i.value;return e}),{});const ai={rawSettings:ri,parsed:oi},si=new s.Z({prefix:"domutils.location"});const di=new s.Z({prefix:"domutils.pageVisibility"});function ci(){try{let t;const n=r.Z.commonUtils.debounce((e=>{if("document.hidden"===e&&t)t=!1,window.dispatchEvent(new Event("onUserLeftPage"));else if("focus"===e){if(void 0===t)return void(t=!0);t||(t=!0,dispatchEvent(new Event("onUserReturnedToPage")))}}),420);document.addEventListener("visibilitychange",(()=>{document.hidden&&n("document.hidden")})),e=()=>{n("focus")},window.addEventListener("focus",(function(t){e()}))}catch(e){di.errorf(null,"setupPageVisibilityChangeEvents - error: %o",e)}var e}function li(e){if("complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState)e();else{var t=!1;document.addEventListener("DOMContentLoaded",(function(){t||(t=!0,e())}),!1),window.addEventListener("load",(function(){t||(t=!0,e())}))}}function ui(e){window.addEventListener("scroll",(function(t){e()}))}const hi=new s.Z({prefix:"Hooks: "});var fi=new function(){this.Types={XHR_OPEN_PRE:"xhropenpre",FETCH_PRE:"fetchpre",REMOVE_CHILD_PRE:"removechildpre",INSERT_BEFORE_PRE:"insertbeforepre",APPEND_CHILD_PRE:"appendchildpre",APPEND_CHILD_POST:"appendchildpost",IMG_SET_ATTRIBUTE_PRE:"imgsetattributepre",SET_ATTRIBUTE_PRE:"setattributepre",WIN_OPEN_PRE:"winopenpre",HTML_SRC_PROP_PRE:"htmlsrcproppre",HTML_ELEMENT_INNERHTML_PRE:"htmlelementinnerhtmlpre",HTML_ELEMENT_INNERHTML_POST:"htmlelementinnerhtmlpost",HTML_ELEMENT_HAS_CHILD_NODES_PRE:"htmlelementhaschildnodespre",HTML_ELEMENT_TEXTCONTENT_PRE:"htmlelementtextcontentpre"};var e=["xhrThwartOpen","fetchThwartOpen"];this.hookFunction=function(t,n,r,o,a){var s=t[n];s&&(t[n]=function(){var t=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return s.apply(this,t);if(r)try{const e=i.Y.fireEvent(r,t,this);if(null!=e)return e}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}const n=s.apply(this,t);if(o)try{i.Y.fireEvent(o,n,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return n})},this.hookPropertySetter=function(t,n,r,o,a){var s=t.__lookupGetter__(n),d=t.__lookupSetter__(n);s&&(t.__defineSetter__(n,(function(){var t=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return d.apply(this,t);if(r)try{const e=i.Y.fireEvent(r,t,this);if(null!=e)return e}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}const n=d.apply(this,t);if(o)try{i.Y.fireEvent(o,n,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return n})),t.__defineGetter__(n,(function(){try{return s.apply(this)}catch(e){hi.errorf(null,"error in `hookPropertySetter` object getter hook: %o",e)}})))},this.addEventListener=function(e,t){i.Y.addEventListener(e,t)}};const pi=new s.Z({prefix:"testCompliance: "});var gi=new function(){this.init=function(){i.Y.addEventListener("onAuctionGroupStarted",(function(e){pi.infof(null,"onAuctionGroupStarted: %o",e)})),i.Y.addEventListener("onAuctionGroupEnded",(function(e){pi.infof(null,"onAuctionGroupEnded: %o",e)})),i.Y.addEventListener("onAuctionStarted",(function(e){pi.infof(null,"onAuctionStarted: %o",e)})),i.Y.addEventListener("onAuctionEnded",(function(e){pi.infof(null,"onAuctionEnded: %o",e)})),i.Y.addEventListener("onPrebiddingStarted",(function(e){pi.infof(null,"onPrebiddingStarted: %o",e)})),i.Y.addEventListener("onPrebiddingEnded",(function(e){pi.infof(null,"onPrebiddingEnded: %o",e)})),i.Y.addEventListener("onPostbiddingStarted",(function(e){pi.infof(null,"onPostbiddingStarted: %o",e)})),i.Y.addEventListener("onPostbiddingEnded",(function(e){pi.infof(null,"onPostbiddingEnded: %o",e)})),i.Y.addEventListener("onAuctionBidResponse",(function(e){pi.infof(null,"onAuctionBidResponse: %o",e)})),i.Y.addEventListener("onNewUnitFound",(function(e){pi.infof(null,"onNewUnitFound: %o",e)}))}},mi=__webpack_require__(96),wi=__webpack_require__.n(mi),bi=new function(){var e=[],t={},n={};this.set=function(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=i;Array.isArray(r)||(r=[r]);for(let i=0;i<r.length;i++){const o=r[i],a=!o.deviceType||o.deviceType===qn.yC||o.deviceType===qn.l7();o&&a&&(e.push(o),t[o.name]=t[o.name]||[],t[o.name].push(o),n[o.id]=n[o.id]||[],n[o.id].push(o))}return e},this.getSpacesByName=function(e){return t[e]||[]},this.getSpacesByID=function(e){return n[e]||[]},this.getAll=()=>e,this.remove=function(i){e=kn.Z.filter(e,(function(e){return e!=i}));var r=n[i.id].indexOf(i);r>=0&&n[i.id].splice(r,1);var o=t[i.name].indexOf(i);o>=0&&t[i.name].splice(o,1)}};const vi=new s.Z({prefix:"visibility: "});var yi=new Map,Mi=new Map;function _i(e){const t=e.getBoundingClientRect(),n=function(){let e,t,n=window,i=[];for(;n!==window.top;){e=n.parent;for(let r of e.document.getElementsByTagName("iframe"))r.contentWindow===n&&(t=r.getBoundingClientRect(),i.push({x:t.x,y:t.y}));n=e}return i.reduce(((e,t)=>({x:e.x+t.x,y:e.y+t.y})),{x:0,y:0})}();try{return window.top.document.hasFocus()&&t.top+t.height/2+n.y>0&&t.left+t.width/2+n.x>0&&t.top+t.height/2+n.y<(window.top.innerHeight||window.top.document.documentElement.clientHeight)&&t.left+t.width/2+n.x<(window.top.innerWidth||window.top.document.documentElement.clientWidth)}catch(e){Si(e)}}async function Di(e,t,n){const i=await Ei((()=>_i(e)?{stopIterations:!1}:{stopIterations:!0}),10,100);r.Z.commonUtils.isElementInBody(e)||n(),i&&t()}async function Ei(e,t,n){if(!t)return!0;const{stopIterations:i}=e();return!i&&new Promise((i=>{setTimeout((()=>{i(Ei(e,t-1,n))}),n)}))}function Ni(){yi.forEach(((e,t)=>{let[n,i]=e;Di(t,n,i)}))}try{window.top.addEventListener("scroll",(()=>{Ni()})),window.top.addEventListener("focus",(()=>{Ni()}))}catch(xe){Si(xe)}function Ti(e){let t,{selector:i,id:r,element:o,useIABDefinition:a}=e;if(!o)try{if(i)o=document.querySelector(i);else{if(!r)throw new Error("No selector, id, or element provided.");o=document.getElementById(r)}if(!o)throw new Error("Could not find element on page with id/selector provided.")}catch(e){return vi.warningf(null,"getElementVisibility - selector: `%o`, id: `%o` - error: %o",[i,r,e]),n.Z.consts.elementVisibility.NOT_FOUND}if(a)t=_i(o)?n.Z.consts.elementVisibility.VISIBLE:n.Z.consts.elementVisibility.HIDDEN;else{let e,i,r;"none"===window.getComputedStyle(o).display&&(i=o.style.getPropertyValue("display"),r=o.style.getPropertyPriority("display"),o.style.setProperty("display","block","important"),e=!0);const a=function(e){var t,n;if(e)return(n=e.getBoundingClientRect()).width||n.height?(t=document.documentElement,{top:n.top+window.pageYOffset-t.clientTop,left:n.left+window.pageXOffset-t.clientLeft}):n}(o),s=document.documentElement.scrollLeft||window.scrollX,d=document.documentElement.scrollTop||window.scrollY,c=window.innerHeight,l=window.innerWidth,u=o.offsetHeight,h=o.offsetWidth;t=a.left>=s&&a.top>=d&&h+a.left<=s+l&&u+a.top<=d+c||(a.left<=s&&a.left+h>s||a.left>=s&&a.left<=s+l)&&(a.top<=d&&a.top+u>d||a.top>=d&&a.top<=d+c)?n.Z.consts.elementVisibility.VISIBLE:n.Z.consts.elementVisibility.HIDDEN,e&&o.style.setProperty("display",i,r)}return t}function Si(e){const t={sendToServer:!0,event:"noViewabilityFromCrossDomainIframe",sendPercentage:1,meta:{error:e}};vi.warningf(null,"noViewabilityFromCrossDomainIframe","N/A",t)}const Bi=new s.Z({prefix:"prebidAdapter: "});var zi=new function(){var e=!1,t={},o={},a=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){a.subscribeForEvent(e,t)},this.dispatch=function(r){try{e||(e=!0,t=n.Z.cpbjs,m(),i.Y.fireEvent("wrapPrebidRequestBids")&&b());var o={};kn.Z.forEach(r,(function(e){o[e.spaceName]={hbAdUnit:e,deferred:new kn.Z.CDefer}}));var d=function(e){return e.map((e=>{const{websiteStoredRequestId:t,adUnitStoredRequestId:n}=i.Y.fireEvent("snigelAdapterConfiguration",{spaceName:e.spaceName})||{},r=c(e),o=[];e.biddersSettings.forEach((e=>{const t={bidder:e.name,params:e.params};o.push(t)}));const a={code:e.spaceName,bids:o,sizes:r,mediaTypes:{banner:{sizes:r}}};return t&&n&&(a.ortb2Imp={ext:{prebid:{storedrequest:{id:n}}}}),a}))}(r);s(),function(e,t){for(let n=0;n<e.length;n++){let i=t.find((t=>t.code===e[n].spaceName)),r=[];i.bids.forEach((e=>{r.push(e.bidder)}));const o={sendToServer:!0,sendPercentage:1,event:"prebid-size-filtering",meta:{spaceName:e[n].spaceName,auctionId:e[n].auctionId,sizesBeforeFiltering:e[n].sizes,sizesAfterFiltering:i.sizes,biddersNames:r}};Bi.infof(null,"logAdUnitSizesPrebid, spaceName -> ",e[n].spaceName,o)}}(r,d),t.requestBids({adUnits:d,bidsBackHandler:function(e){try{for(var t in o)if(o.hasOwnProperty(t)){var n=o[t],i=n.hbAdUnit;if(e){var r=e[t],s=[];if(r){var c=kn.Z.find(d,(function(e){return e.code===t})).sizes;r.bids=h(r.bids,c),s=f(r.bids,n.hbAdUnit)}var l={auctionId:i.auctionId,bids:s};n.deferred.resolve(l),kn.Z.forEach(s,(function(e){var t={auctionId:i.auctionId,bid:e};a.invokeEventCallbacks("bidReceived",t)}))}else{var u={auctionId:i.auctionId,bids:[]};n.deferred.resolve(u)}}}catch(e){Bi.errorf(null,"dispatch: bidsBackHandler: - %o",e)}}});var l=[];for(var u in o)if(o.hasOwnProperty(u)){var p=o[u];l.push(p.deferred.promise)}return l}catch(e){Bi.errorf(null,"dispatch: - %o",e)}};var s=function(){if(t.bidderSettings&&t.bidderSettings.standard&&t.bidderSettings.standard.adserverTargeting){var e=!!kn.Z.find(t.bidderSettings.standard.adserverTargeting,(function(e){return"hb_pb_org"===e.key})),n=!!kn.Z.find(t.bidderSettings.standard.adserverTargeting,(function(e){return"hb_pb"===e.key}));!e&&n&&t.bidderSettings.standard.adserverTargeting.push({key:"hb_pb_org",val:function(e){var n=t.getConfig().priceGranularity;return"auto"===n?e.pbAg:"dense"===n?e.pbDg:"low"===n?e.pbLg:"medium"===n?e.pbMg:"high"===n?e.pbHg:"custom"===n?e.pbCg:e.pbHg}})}},d=function(e){var t=e.split("x");if(2!==t.length)throw new Error;var n=parseInt(t[0]),i=parseInt(t[1]);if(isNaN(n)||isNaN(i))throw new Error;return{width:n,height:i}},c=function(e){for(var t=[],n=0;n<e.sizes.length;n++){var o=d(e.sizes[n]),a=o.width,s=o.height;t.push({width:a,height:s})}var c=i.Y.fireEvent("sizesToReplaceBySpace",{spaceName:e.spaceName});c&&(t=kn.Z.map(t,(function(e){var t=kn.Z.find(c,(function(t){return t.size.width===e.width&&t.size.height===e.height}));return t?{width:t.replacement.width,height:t.replacement.height}:e})));const l=googletag&&googletag.pubads&&googletag.pubads().getSlots()||[],u=e.element&&e.element.getAttribute("id")||e.spaceName,h=l.find((e=>e.getSlotElementId()===u));var f=i.Y.fireEvent("sizesToRemoveBySpace",{spaceName:e.spaceName,slot:h});f&&(t=kn.Z.filter(t,(function(e){return!kn.Z.find(f,(function(t){return t.width===e.width&&t.height===e.height}))})));var p=r.Z.sizesRemover(e.element,t);return p=kn.Z.filter(p,(function(e){return!!e})),p=kn.Z.map(p,(function(e){return[e.width,e.height]}))};var l=function(e,t){if(e.ad&&e.ad.indexOf(atob("c2VydmluZy1zeXMuY29t"))>-1&&e.ad.indexOf(atob("QnVyc3RpbmdQaXBlL2FkU2VydmVyLmJz"))>-1){var i=atob("PHNjcmlwdD53aW5kb3cuZWJDZmcgPSB7fTt3aW5kb3cuZWJDZmdfXyA9IHt9O3dpbmRvdy5fX2RlZmluZUdldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5lYkNmZ19fO30pO3dpbmRvdy5fX2RlZmluZVNldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7YS5hZEh0bWxQYXRoPScnO3JldHVybiB3aW5kb3cuZWJDZmdfXz1hO30pOzwvc2NyaXB0Pg==");e.ad.indexOf("<body>")>-1?e.ad=e.ad.replace("<body>",i):e.ad=i+e.ad}"amazon"===e.bidder&&(e=function(e){try{var t=JSON.parse(e.adTargeting);for(var i in t.amzniid=e.adId,t)e.adserverTargeting[i]=t[i];e.ad=e.adHtml;try{!n.Z.upoSettings.amazonBidderConfiguration.keepHbPb&&delete e.adserverTargeting.hb_pb}catch(e){Bi.errorf(null,"changeAmazonBid - deleting hb_pb - %o",e)}delete e.adUrl}catch(e){Bi.errorf(null,"changeAmazonBid - %o",e)}return e}(e)),e.bidder&&"smartadserver"===e.bidder&&(e.bidder="smart"),e.bidder&&("triplelift"===e.bidder&&e.ad.indexOf("render_options_bm")>-1||"sharethrough"===e.bidder)&&(e.width=u(t)),e.ad&&e.cpm&&e.ad.replace(/\$\{AUCTION_PRICE\}/g,e.cpm),e.ad&&e.currency&&e.ad.replace(/\$\{AUCTION_CURRENCY\}/g,e.currency)},u=function(e){for(var t=c(e),n=0,i=0;i<t.length;i++){var r=t[i][0];r>n&&(n=r)}return n};function h(e,t){return kn.Z.filter(e,(function(e){return kn.Z.find(t,(function(t){return e.width===t[0]&&e.height===t[1]}))}))}var f=function(e,n){var a=kn.Z.map(e,(function(e){if(e.bidderId=function(e,t){const n=t.biddersSettings.find((t=>{const n="s2s"===e.source?"bt_exchange":e.bidderCode;return t.name===n}));if(n)return n.id}(e,n),e.bidderId){l(e,n),o[e.adId]=new kn.Z.CDefer;var r={ad:e.ad,adId:e.adId,adUrl:e.adUrl,bidderId:e.bidderId,bidder:e.bidder,bidderCode:e.bidderCode,currency:e.currency,creativeId:g(e),cpm:e.cpm,complianceStatus:0,height:e.height,timeToRespond:e.timeToRespond,size:e.size,width:e.width},a=new Pn.Bid(r,e,Pn.Bid.Types.PREBID,(function(n){var r=n.complianceBidsInAuction.length>0?kn.Z.map(n.complianceBidsInAuction,(function(e){return e.rawBid&&e.rawBid})):void 0,o=e.adUnitCode,a=t.getAdserverTargeting(o,r)[o];return""===a.hb_pb&&a.hb_pb_org&&(a.hb_pb=a.hb_pb_org),a=i.Y.fireEvent("customAdserverTargeting",{adServerTargeting:a})||a}),(function(e){try{w(this);var t=e.placement;v(t,this)}catch(e){Bi.errorf(null,"renderBid - %o",e)}}),void 0,function(e){this.renderedDeferred.promise.then((function(){e()}))}.bind({renderedDeferred:o[e.adId]}),(function(){return p(this)}));return a}Bi.errorf(null,"dispatch: bidsBackHandler: - No corresponding bidderSettings found in ad unit: %o for Prebid auction response bid: %o",[n,e])}));return kn.Z.reject(a,r.Z.commonUtils.isNil)};var p=function(e){var t={bidderExternalID:e.bidderId,markup:e.ad,url:e.adUrl,hint:{provider:e.bidderCode,uid:e.creativeId},width:parseInt(e.width),height:parseInt(e.height)};if("underdogmedia"===e.bidderCode&&(t.hintID=t.hintID+"_"+e.width+"_"+e.height),"gumgum"===e.bidderCode&&e.creative&&(t.markup=e.creative),"komoona"===e.bidderCode)try{var n=0,i=JSON.parse(unescape(e.ad.split('"creative_data":"')[1].split('","')[0]));for(var r in i.hdbd_data.hbbids){var o=i.hdbd_data.hbbids[r];o.cpm>n&&(n=o.cpm,t.markup=o.creative_data.creative)}}catch(e){Bi.errorf(null,'innerMakeEntryForTestCompliance - handling "komoona" bid - %o',e)}return e.ad&&e.ad.indexOf("https://googleads.g.doubleclick.net/pagead/adfetch?client=ca-pub-")>-1&&(t.url="https://googleads.g.doubleclick.net/pagead/adfetch"+e.ad.split("https://googleads.g.doubleclick.net/pagead/adfetch")[1].split("&rfl=")[0],t.markup=""),t},g=function(e){return"komoona"===e.bidder||"criteo"===e.bidder||"consumable"===e.bidder?null:e.c?String(e.c):e.adid&&"0"!==e.adid?String(e.adid):e.crid&&"0"!==e.crid?String(e.crid):e.creativeId&&"0"!==e.creativeId?String(e.creativeId):e.creative_id&&"0"!==e.creative_id?String(e.creative_id):null},m=function(){t.onEvent("bidWon",(function(e){o[e.adId].resolve()}))},w=function(e){var t=e.rawBid;t&&t.bidder&&(i.Y.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsRender",payload:{detail:t}}),i.Y.fireEvent("FirePublisherEvent",{eventName:"uponitRender",payload:{detail:t}}))},b=function(){var e=window.pbjs||window.jitaJS;if(e&&e.requestBids){var t=e.requestBids;e.requestBids=function(e){for(var n=[],r=e&&e.adUnits,o=0;o<r.length;o++)n.push(r[o].code);if(a.invokeEventCallbacks("refresh",n),!i.Y.fireEvent("skipOriginalRequestBidsFunction"))return t.apply(this,arguments)}}},v=function(e,i){var r=M(),o=r.container,a=r.iframe,s=function(){try{a.removeEventListener("load",s);var e=n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame;a.style.setProperty("visibility",""),e||(a.contentWindow.document.documentElement.innerHTML="<html><body></body></html>");var r=!e&&a.contentWindow.document,o=qn.Xh();"sharethrough"===i.bidder&&window.setTimeout((function(){for(var e=document.querySelectorAll(".str-thumbnail"),t=0;t<e.length;t++){var n=e[t].style.backgroundImage;!n||-1!==n.indexOf("upapi")||-1!==n.indexOf("criteo.net")||-1!==n.indexOf("imgix.net")&&-1!==n.indexOf(".gif")?n.indexOf("imgix.net")>-1&&n.indexOf(".gif")>-1&&(n.indexOf("?")>-1?e[t].style.backgroundImage=n.replace('")','&adunit=true")'):e[t].style.backgroundImage=n.replace('")','?adunit=true")')):n.indexOf("?")>-1?e[t].style.backgroundImage=n.replace('")','&upapi=true")'):e[t].style.backgroundImage=n.replace('")','?upapi=true")')}}),3e3),"edge"===o&&(i.rawBid.ad=i.rawBid.ad.replace(/\.html[?#]/,".html?upapi=true&"),i.rawBid.ad=i.rawBid.ad.replace(/\.html%23/,".html%23upapi=true%26"),window.setTimeout((function(){if(e){a.contentWindow.postMessage({type:"eval",code:"try { var styleSheets = document.styleSheets; for (var i = 0; i < styleSheets.length; i++) { if (styleSheets[i].cssText && styleSheets[i].cssText.indexOf(\"a[href^='http://ads2.williamhill.com/redirect.aspx?']\") > -1) { styleSheets[i].cssText = ''; } } } catch (e) { }"},"*")}else try{for(var t=r.styleSheets,n=0;n<t.length;n++)t[n].cssText&&t[n].cssText.indexOf("a[href^='http://ads2.williamhill.com/redirect.aspx?']")>-1&&(t[n].cssText="")}catch(e){Bi.errorf(null,"innerRenderBid - `onLoad` Edge browser patch - %o",e)}}),3e3)),window.setTimeout((function(){var n="edge"===o||"ie"===o;if(n||y(i,a,e),e){var s='window.parent.postMessage(JSON.stringify({ adId: "'+i.adId+'", message: "Prebid Request" }), "*");';a.contentWindow.postMessage({type:"eval",code:s},"*")}else t.renderAd(r,i.adId);n&&y(i,a,e)}),0),a.style.width=i.width+"px",a.style.height=i.height+"px"}catch(e){Bi.errorf(null,"renderBid - %o",e)}};a.addEventListener("load",s),e.insertBefore(o,e.children[0])};function y(e,t,i){if(!1!==e.isBackupCreative)if(i)t.contentWindow.postMessage({type:"eval",code:n.Z.backupCreativeScriptForPostMessage},"*");else try{t.contentWindow.eval(atob(n.Z.backupCreativeScript))}catch(e){Bi.errorf(null,"evalBackupCreativeScript: - %o",e)}}var M=function(){var e=document.createElement("div");e.className="ahover";var t=Wn.whitelistingIFrame.createWhitelistingIFrame();return t.style.width="1px",t.style.height="1px",t.style.border="0px",t.setAttribute("marginwidth","0"),t.setAttribute("marginheight","0"),t.scrolling="no",e.appendChild(t),{container:e,iframe:t}}},Zi=new function(){var e=!1,t=new r.Z.SubscriptionLayer;function n(e,t){if(e===Zi.Types.PREBID)return zi.dispatch(t)}this.subscribeForEvent=function(e,n){t.subscribeForEvent(e,n)},this.dispatch=function(i){e&&(e=!1),e=!0,zi.subscribeForEvent("refresh",(function(e){t.invokeEventCallbacks("refresh",e)})),zi.subscribeForEvent("bidReceived",(function(e){t.invokeEventCallbacks("bidReceived",e)}));var r=[],o={};for(var a in kn.Z.forEach(i,(function(e){var t={hbAdUnit:e,promises:[]};r.push(t);var n=e.biddingSettings;for(var i in n)if(i=parseInt(i),n.hasOwnProperty(i)){var a=n[i];if(a&&a.length>0){o[i]=o[i]||[];var s={biddersSettings:a,auctionId:e.auctionId,spaceName:e.spaceName,sizes:e.sizes,selector:e.selector,element:e.element};o[i].push(s)}}})),o)if(a=parseInt(a),o.hasOwnProperty(a)){var s=o[a],d=n(a,s);kn.Z.forEach(d,(function(e,t){kn.Z.find(r,(function(e){return e.hbAdUnit.auctionId===s[t].auctionId})).promises.push(e)}))}return kn.Z.map(r,(function(e){return Promise.all(e.promises).then((function(t){var n=kn.Z.map(t,(function(e){return e.bids}));return{auctionId:e.hbAdUnit.auctionId,bids:kn.Z.flat(n)}}))}))}};Zi.Types={UNKNOWN:0,PREBID:1,RTK:2};const ki=new s.Z({prefix:"dfpAdapter: "});var xi=new function(){var e=!1,t={},o={},a={},s=[],d=[],c=new r.Z.SubscriptionLayer,l={_height_:5,_width_:6,_empty_:7,_is_afc_:8,_fluid_:9,_creative_ids_:14,_adgroup2_ids_:15};this.init=function(){e||(e=!0,C())},this.dispatch=function(e){try{this.init();var n=[];return i.Y.fireEvent("onBeforeDfpRefreshDispatch"),i.Y.fireEvent("tryDisableGoogletagLazyLoad")&&u(),kn.Z.forEach(e,(function(e){var i=new kn.Z.CDefer;n.push(i.promise),t[e.slotElementId]={asAdUnit:e,deferred:i};var r=new kn.Z.CDefer;o[e.slotElementId]=r})),window.googletag.cmd.push((function(){try{ki.debugf(null,"onAdsRequestPrepareStarted");var t=window.googletag.pubads().getSlots(),n=[];kn.Z.forEach(t,(function(t){kn.Z.forEach(e,(function(e,r){var o=t.getSlotElementId();if(o===e.slotElementId){n.push(t);var s=p(16,24);if(a[s]=o,t.setTargeting("uponitSlotIterationId",s),i.Y.fireEvent("preTargetingSetting",{dfpSlot:t,ASAdUnit:e}),m(t,e.params.keyValuesParams.toRemove),t.__up_display||(t.__up_display=!0,window.googletag.display(e.slotElementId)),w(t,e.params.keyValuesParams.toAdd),window.uponit&&window.uponit.modifiers&&window.uponit.modifiers.dfpTargeting&&window.uponit.modifiers.dfpTargeting.length>0)try{for(var d=window.uponit.modifiers.dfpTargeting,c=0;c<d.length;c++){var l=t.getTargetingMap(),u={};for(const e in l)u[e]=l[e];var h=null;!e||null==e.floorPrice&&null==e.floorPrice||(h=e.floorPrice);var f=d[c](u,t,h);if(f)for(const e in f)l[e]&&l[e]===f[e]||t.setTargeting(e,f[e])}}catch(e){ki.errorf(null,"dispatch: uponit-modifiers: %o",e)}t.setForceSafeFrame(!0),t.setCollapseEmptyDiv(!1)}}))})),ki.debugf(null,"onAdsRequestSlotsPrepare - slots: %o",g(n)),h(n);const s=googletag.pubads().isSRA()&&(o=0,n.forEach((e=>{const t=e.getTargetingMap();Object.entries(t).forEach((e=>{const t=e[0]?e[0].length:0,n=e[1]&&e[1][0]?e[1][0].length:0;o+=t+n}))})),o>=6e3);if(i.Y.fireEvent("forceNotSingleRequestRefresh")||s)for(var r=0;r<n.length;r++){const e=n[r];setTimeout((()=>{window.googletag.pubads().refresh([e],void 0,!0)}),0)}else setTimeout((()=>{window.googletag.pubads().refresh(n,void 0,!0)}),0)}catch(e){ki.errorf(null,"dispatch: %o",e)}var o})),n}catch(e){ki.criticalf(null,"google cmd function failed: %o",e)}};var u=function(){window.googletag.cmd.push((function(){window.googletag.pubads().enableLazyLoad({fetchMarginPercent:-1,renderMarginPercent:-1})}))},h=function(e){kn.Z.forEach(e,(function(e){e.setTargeting("upstdfp",!0)}))},f=function(e){var t=[];try{for(var n=0;n<e.length;n++){var i=e[n];"fluid"===i?t.push(i):t.push([i.getWidth(),i.getHeight()])}}catch(e){ki.errorf(null,"getNormalizedDfpSizes errored - %o",e)}return t},g=function(e){var t=[];try{for(var n=0;n<e.length;n++){var i=e[n];t.push({elementId:i.getSlotElementId(),dfpAdUnitPath:i.getAdUnitPath(),sizes:f(i.getSizes()),targetingMap:i.getTargetingMap()})}}catch(e){ki.errorf(null,"getNormalizedDFPAdSlots errored - %o",e)}return t},m=function(e,t){for(let n=0;n<t.length;n++){const i=t[n],r=e.getTargetingKeys();for(let t=0;t<r.length;t++){const n=r[t];i.test(n)&&e.clearTargeting(n)}}},w=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];e.setTargeting(n,i)}};function b(e){if(!e)return!1;const t=i.Y.fireEvent("isPrebidResponse",{str:e});if(void 0!==t)return t;if(/\.(renderAd|renderAdNew)\(document,(\s+)?['"][a-zA-Z0-9\-_]+['"]/gm.test(e))return!0;if(/apstag\.renderImp\(document,/gm.test(e))return!0;if(/"hb_adid":[\s\r\n\t]{0,9}?\["[a-z-A-Z0-9\-_]+"\]/gm.test(e))return!0;return!!/ucTagData\.ad[Ii]d(:?\s+)?=(:?\s+)?['"]([a-zA-Z0-9\-_]+)['"]/gm.test(e)||e.indexOf("districtm_adslot = ")>-1}var v=function(e,t,n,r){e&&e._html_&&e._html_.indexOf("googletag.pubads().definePassback(")>-1&&(e._html_=e._html_.replace(").setTargeting('",").setTargeting('up_recovery','true').setTargeting('"),e._html_=e._html_.replace(').setTargeting("',').setTargeting("up_recovery","true").setTargeting("')),e&&e._html_&&-1===e._html_.indexOf("ca-pub-15988")&&(e._html_=e._html_.replace("data-ad-slot=",'data-ad-type="text" data-ad-slot=').replace("data-ad-client\\x3d","data-ad-type\\x3d\\x22text\\x22 data-ad-client\\x3d").replace('google_ad_client = "ca-pub','google_ad_type = "text";google_ad_client = "ca-pub'));var o=i.Y.fireEvent("dfpResponseCustomReplace",{googleReponse:e,googleFrame:r,googleSlot:t});if(o&&(e=o),!(e._fluid_||e._height_&&e._width_)&&n.length>0)for(var a=0;a<n.length;a++){var s=n[a];if("fluid"!=s&&s.getWidth()>=120){e._width_=parseInt(s.getWidth()),e._height_=parseInt(s.getHeight());break}}};function y(e){switch(e){case Pn.Bid.Types.ADX:return"gad";case Pn.Bid.Types.ADX_TEXT:return"gad_text";case Pn.Bid.Types.DIRECT:return"gad_dfp_direct"}}var M=function(e,t){switch(e){case Pn.Bid.Types.ADSENSE:case Pn.Bid.Types.ADX:case Pn.Bid.Types.ADX_TEXT:return t.adxBidderId;case Pn.Bid.Types.DIRECT:return t.directBidderId}},_=function(e,t){try{if(e==Pn.Bid.Types.DIRECT&&t._adgroup2_ids_&&t._adgroup2_ids_[0]&&t._creative_ids_&&t._creative_ids_[0])return t._adgroup2_ids_[0].toString()+"_"+t._creative_ids_[0].toString()}catch(e){ki.errorf(null,"getCreativeId: %o",e)}};function D(e){const n=t[e],i={auctionId:n.asAdUnit.auctionId,bids:[]};n.deferred.resolve(i)}var E=function(e,t){s.push(t),e._html_=i.Y.fireEvent("CustomPrebidHTMLModification",e._html_)||e._html_.replace(/w=w.parent/gm,"w=window").replace(/w = w.parent/gm,"w = window").replace(/pbjs/gm,"upbjs").replace(/renderAd/gm,"renderAdNew")},N=function(e){var t=e.getSlotElementId(),n=r.Z.commonUtils.escapeSelector("#"+t),o=document.querySelector(n+' [id^="google_ads_iframe_"]');return o=i.Y.fireEvent("customInnerContainer",{googleSlot:e})||o},T=function(e,t,n){var i=new RegExp("([?&]"+t+"=)([^&#]*)([&#$].*)","g");return e.replace(i,"$1".concat(encodeURIComponent(n),"$3"))},S=function(e,t){var n=new RegExp("(^|[&])"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[3]?decodeURIComponent(n[3].replace(/\+/g," ")):"":null},B=function(e){try{for(var n={},i=0;i<e.length;i++){var r=e[i],o=t[r.getSlotElementId()].asAdUnit;if(o&&o.params&&o.params.queryParams)for(var a in o.params.queryParams)if(o.params.queryParams.hasOwnProperty(a)){var s=o.params.queryParams[a];n[a]=s}}return n}catch(e){ki.errorf(null,"getSlotsQueryParams: %o",e)}};var z=function(e,n,i,r){try{var a=kn.Z.map(n,(function(e,t){if(i.indexOf(t)>-1)return n[t]}));return function(e,n){try{if(e){for(var i={},r=[],a=0;a<e.length;a++){var s=e[a].response.parsedData,l=e[a].response.rawResponse,u=e[a].slot;if(u){var h=n[a],f=u.getSlotElementId(),p=new kn.Z.CDefer;i[f]=p,r.push(p.promise);var g=t[f],m=N(u);if(!s||s&&!s._html_||s&&s._empty_)i[f].resolve({injectToDom:!1}),D(f);else{v(s,u,h,m),b(s._html_)&&E(s,f);var w=(x=u,I=void 0,I=(k=s)._html_,k._empty_?Pn.Bid.Types.EMPTY:b(I)?Pn.Bid.Types.DFP_PREBID:k._is_afc_?"text"===B([x]).ad_type?Pn.Bid.Types.ADX_TEXT:Pn.Bid.Types.ADX:I.indexOf("js/adsbygoogle.js")>-1||I.indexOf("pagead/show_ads.js")>-1?Pn.Bid.Types.ADSENSE:Pn.Bid.Types.DIRECT),T={ad:s._html_,adId:null,bidder:y(w),bidderId:M(w,g.asAdUnit.params),bidderCode:y(w),creativeId:_(w,s),width:s._width_,height:s._height_,cpm:g.asAdUnit.floorPrice+.01},S=new Pn.Bid(T,l,w,void 0,function(e){return function(){var t=i[e];"unresolved"==t.fate&&t.resolve({injectToDom:!0,injectBackupCreative:this.isBackupCreative})}}(f),function(e){return function(){var t=i[e];"unresolved"==t.fate&&t.resolve({injectToDom:!1})}}(f),function(e){return function(t){o[e].promise.then((function(){t()}))}}(f),function(e){return function(){return{bidderExternalID:this.bidderId,url:this.adUrl,hint:{provider:this.bidderCode,uid:this.creativeId},width:parseInt(this.width),height:parseInt(this.height),lineItemID:e._adgroup2_ids_&&e._adgroup2_ids_[0],creativeID:e._creative_ids_&&e._creative_ids_[0],markup:this.ad.replace(/\\(n|r|\\)/g,(function(e,t){return"n"==t?"\n":"r"==t?"\r":"\\"}))}}}(s)),z={auctionId:g.asAdUnit.auctionId,bids:[S]};g.deferred.resolve(z);var Z={auctionId:g.asAdUnit.auctionId,bid:S};c.invokeEventCallbacks("bidReceived",Z)}}else r.push(Promise.resolve({injectToDom:!1}))}return Promise.all(r).then(function(e){try{for(var t=[],n=0;n<this.responsesWithSlots.length;n++){const i=e[n],r=this.responsesWithSlots[n].response,o=r.parsedData,a=this.responsesWithSlots[n].slot,s=a&&a.getSlotElementId();i&&!i.injectToDom&&(s&&d.push(s),o._html_="",o._empty_=!0,o._width_=1,o._height_=1),r.injectBackupCreative=i.injectBackupCreative,t.push(r)}return t}catch(e){ki.errorf(null,"handleDfpBidResponses: Promise.all: %o",e)}}.bind({responsesWithSlots:e,deferredsPromises:r}))}}catch(e){ki.errorf(null,"handleDfpBidResponses: %o",e)}var k,x,I}(kn.Z.map(e,(function(e,t){return{slot:a[t],response:e}})),r)}catch(e){ki.errorf(null,"invokeMiddleware: %o",e)}},Z=function(e,t,i,r){return ki.debugf(null,"onAdsServerResponse - slots: %o, relevantIndexes: %o",[g(t),i]),new Promise((function(o,a){try{if(""===e.responseText)return t.forEach((e=>D(e.getSlotElementId()))),void o();var s=function(e){for(var t=e.split("\n"),n=[],i=0;i<t.length;i++){var r=t[i];if(i%2==0&&""!=r){try{var o=window.JSON.parse(r)}catch(e){ki.errorf(null,"parseGoogleExpandableResponse: 1 %o",e)}var a=Object.keys(o)[0],s=o[a],d={adUnitPath:a,rawResponse:s,parsedData:{}};try{for(var c in l)if(l.hasOwnProperty(c)){var u=l[c];void 0!==s[u]&&null!==s[u]&&(d.parsedData[c]=s[u])}}catch(e){ki.errorf(null,"parseGoogleExpandableResponse: 2 %o",e)}n.push(d)}else i%2!=0&&(n[n.length-1].parsedData._html_=r)}return n}(e.responseText);z(s,t,i,r).then((function(t){!function(e){for(let t=0;t<e.length;t++){const i=e[t];if(!i.injectBackupCreative)continue;const r=i.parsedData,o=r._html_,a="<\/script>";r._html_=o.substr(0,o.indexOf(a)+a.length)+"<script>"+atob(n.Z.backupCreativeScript)+"<\/script>"+o.substr(o.indexOf(a)+a.length)}}(t);var i=function(e){for(var t="",n=0;n<e.length;n++){var i=e[n],r=i.parsedData,o=r._html_;delete r._html_;var a=i.rawResponse,s={};try{for(var d in l)if(l.hasOwnProperty(d)){var c=l[d];1==r[d]?a[c]=1:0==r[d]?a[c]=0:a[c]=r[d]}s[i.adUnitPath]=a}catch(e){ki.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 1 %o",e)}try{t=t+JSON.stringify(s)+"\n"+o+"\n"}catch(e){ki.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 2 %o",e)}}return t}(t);!function(e,t){t.__defineGetter__("responseText",(function(){return e})),t.__defineGetter__("response",(function(){return e})),t.__defineGetter__("status",(function(){return 200})),t.__defineGetter__("readyState",(function(){return 4}))}(i,e),o()}))}catch(e){ki.criticalf(null,"handleResponsesFromXHR errored: %o",e)}}))},k=function(e){var t="sz",n=r.Z.commonUtils.extractQueryParamFromUrl(t,e);if(n||(t="prev_iu_szs",n=r.Z.commonUtils.extractQueryParamFromUrl(t,e)),n){var i=n.split(",");return i=kn.Z.map(i,(function(e){return e.split("|")})),i=kn.Z.map(i,(function(e,t){return kn.Z.map(e,(function(e){var t=e.split("x");return{width:parseInt(t[0]),height:parseInt(t[1])}}))}))}},x={width:320,height:50};function I(e,t,n){return!("fluid"!==e||!n)||t.some((t=>t.width===e.width&&t.height===e.height))}function Y(e){const t=r.Z.commonUtils.extractQueryParamFromUrl("fluid",e);if(t){let e=t.split(",");return e=e.map((e=>isNaN(e)?e:parseInt(e))),e}}var O=function(e,n,o){var a;if(e)try{var s;if(e.indexOf("&sz=")>-1)s="sz";else{if(!(e.indexOf("&prev_iu_szs=")>-1))return;s="prev_iu_szs"}var d=k(e);if(!d)return;const p=d.length;a=kn.Z.filter(d,(function(e,t){return o.indexOf(t)>-1}));const g=(Y(e)||Array(p).fill(0)).filter(((e,t)=>o.includes(t)));var c=[],l=[];!function(){var t=i.Y.fireEvent("removeSizesDfpConfig");if(t){var r=t.forAll||[];a=kn.Z.map(a,(function(i,o){var a=n[o].getSlotElementId(),s=(t[a]||[]).concat(r);return s=kn.Z.map(s,(function(t){if("fluid"==t){var n=new RegExp("fluid=(.*?)&","g");return e=e.replace(n,""),{width:x.width,height:x.height}}return t})),kn.Z.filter(i,(function(e){return!kn.Z.find(s,(function(t){return t.width==e.width&&t.height==e.height}))}))}))}}(),a=kn.Z.map(a,(function(e,r){var o=n[r],a=o.getSlotElementId(),s=t[a].asAdUnit.spaceName;const d=g[r];var c=i.Y.fireEvent("sizesToRemoveBySpace",{spaceName:s,slot:o});return c?(c.includes("fluid")&&d&&(g[r]=0),kn.Z.filter(e,(function(e){return!kn.Z.find(c,(function(t){return"fluid"===t?x.width==e.width&&x.height==e.height:t.width===e.width&&t.height===e.height}))}))):e}));try{kn.Z.forEach(a,(function(e,r){var o=n[r].getSlotElementId(),a=t[o].asAdUnit;const s=g[r];var d=i.Y.fireEvent("sizesToAddBySpace",{ASAdUnit:a});if(!d)return e;kn.Z.forEach(d,(function(t){I(t,e,s)||("fluid"===t?(I(x,e,s)||e.push({width:x.width,height:x.height}),g[r]="height"):e.push({width:t.width,height:t.height}))}))}))}catch(e){ki.errorf(null,"sizesToAddBySpace error - %o",e)}kn.Z.forEach(a,(function(e,t){var i=n[t].getSlotElementId(),o=document.getElementById(i),a=r.Z.sizesRemover(o,e);0==(a=kn.Z.filter(a,(function(e){return!!e}))).length&&(a=[{width:2,height:3}]),c.push(a);var s,d=(s=a,kn.Z.map(s,(function(e){var t={getWidth:function(){return e.width},getHeight:function(){return e.height}};return e.width==x.width&&e.height==x.height&&(t="fluid"),t})));l.push(d)}));var u,h=0,f=kn.Z.map(d,(function(e,t){if(o.indexOf(t)<0)return e;var n=c[h];return h++,n}));return u=kn.Z.map(f,(function(e){return kn.Z.map(e,(function(e){return e.width+"x"+e.height}))})),u=(u=kn.Z.map(u,(function(e){return e.join("|")}))).join(","),{url:e=function(e,t){const n=!!Y(e),i=t.join(",");return n?T(e,"fluid",i):"".concat(e,"&fluid=").concat(encodeURIComponent(i))}(e=T(e,s,u),g),modifiedSizes:l}}catch(t){return ki.errorf(null,"modifySizesInUrl errored - %o",t),{url:e,modifiedSizes:kn.Z.map(n,(function(e){return e.getSizes()}))}}},X=function(){fi.addEventListener(fi.Types.XHR_OPEN_PRE,(function(e){try{var n=e.data;if(H(n[1])){var o=n[1],s=function(e){var t=[],n=r.Z.commonUtils.extractQueryParamFromUrl("scp",e);if(n||(n=r.Z.commonUtils.extractQueryParamFromUrl("prev_scp",e)),n){for(var i=n.split("|"),o=0;o<i.length;o++){var s=i[o],d=S("uponitSlotIterationId",s);a[d]&&t.push(a[d])}return t}}(n[1]),d=function(e){for(var t=[],n=window.googletag.pubads().getSlots(),i=0;i<n.length;i++)for(var r=n[i],o=0;o<e.length;o++){var a=e[o];r.getSlotElementId()==a&&t.push(r)}return t}(s),c=function(e){var t=[],n=r.Z.commonUtils.extractQueryParamFromUrl("scp",e);if(n||(n=r.Z.commonUtils.extractQueryParamFromUrl("prev_scp",e)),n){var i,o=r.Z.commonUtils.extractQueryParamFromUrl("csp",e);o&&(i=S("upstdfp",o),ki.debugf(null,"onCommonSlotTargetDetected - upstdfp: %o",i));for(var a=n.split("|"),s=0;s<a.length;s++){var d=a[s];(i||S("upstdfp",d))&&t.push(s)}return t}}(n[1]);w=d,kn.Z.forEach(w,(function(e){e.clearTargeting("upstdfp")})),n[1]=r.Z.addAcceptableParam(n[1]),n[1]=function(e,t){var n=B(t);if(n)for(var i in n)if(n.hasOwnProperty(i)){var r=n[i];e.indexOf("?")<0?e=e+"?"+i+"="+r:e.indexOf("&"+i+"=")<0&&e.indexOf("?"+i+"=")<0&&(e=e+"&"+i+"="+r)}return e}(n[1],d);var l=O(n[1],d,c);n[1]=l.url;var u=l.modifiedSizes;!function(e,n,i,r){for(let o=0;o<e.length;o++){const a=e[o],s=t[n[a]];let d=[];for(let e=0;e<i[a].length;e++)i[a][e]&&(i[a][e].width&&i[a][e].height?d.push([i[a][e].width,i[a][e].height]):"fluid"===i[a][e]&&d.push("fluid"));let c=[];for(let e=0;e<r[a].length;e++)r[a][e]&&(r[a][e].getWidth&&r[a][e].getHeight?c.push([r[a][e].getWidth(),r[a][e].getHeight()]):"fluid"===r[a][e]&&c.push("fluid"));const l={sendToServer:!0,sendPercentage:1,event:"dfp-size-filtering",meta:{spaceName:s.asAdUnit.spaceName,auctionId:s.asAdUnit.auctionId,sizesBeforeFiltering:d,sizesAfterFiltering:c}};ki.infof(null,"logAdUnitSizesDfp, spaceName -> ",s.asAdUnit.spaceName,l)}}(c,s,k(o),u),n[1]=function(e){var t=[],n=["21063911","21063048","21063670","21063817","21063671"],i=r.Z.commonUtils.extractQueryParamFromUrl("eid",e);if(!i)return e;for(var o=i.split(","),a=0;a<o.length;a++){var s=o[a];n.indexOf(s)<0&&t.push(s)}return T(e,"eid",t.join(","))}(n[1]),i.Y.fireEvent("onBeforeDfpAdsRequest",{url:n[1]}),ki.debugf(null,"onDfpAdsRequest - url: %s, slots: %o, relevantIndexes: %o",[n[1],g(d),c]);var h=null,f=null,p=this,m=!1;this.onload=function(){try{if(!h||m)return;m=!0,Z(p,d,c,u).then((function(){h.call(p)}))}catch(e){ki.errorf(null,"addListenersOnHooks: onload: %o",e)}},this.onreadystatechange=function(e){try{if(!f||m)return;4===this.readyState&&(200===this.status?(m=!0,Z(p,d,c,u).then((function(){f.call(p,e)}))):ki.criticalf(null,"onDfpAdsRequestError, status: %s, responseText: %s",[this.status,this.responseText]))}catch(e){ki.criticalf(null,"onReadyStateChangeError, err %o",e)}},this.__defineGetter__("onload",(function(){return h})),this.__defineSetter__("onload",(function(e){return h=e,e})),this.__defineGetter__("onreadystatechange",(function(){return f})),this.__defineSetter__("onreadystatechange",(function(e){return f=e,e}))}}catch(e){ki.errorf(null,"addListenersOnHooks: %o",e)}var w}))},H=function(e){try{return e&&e.indexOf("doubleclick.net/gampad/ads")>-1&&e.indexOf("upstdfp")>-1}catch(e){}};this.subscribeForEvent=function(e,t){c.subscribeForEvent(e,t)};var R=function(){window.googletag.pubads().addEventListener("slotRenderEnded",(function(e){var t=e.slot,n=t.getSlotElementId(),i=N(t),a=i&&i.querySelector("iframe");if(d.indexOf(n)>=0)d.splice(d.indexOf(n),1);else{var c=o[n];if(c&&"unresolved"==c.fate&&c.resolve(),function(e){setTimeout((()=>{const t=e.getSlotElementId(),n=document.getElementById(t),i=N(e);if(!(i&&i.querySelector("iframe")&&i&&r.Z.commonUtils.isElementInBody(n)&&n)){const e={sendToServer:!0,sendPercentage:1,event:"creative-removed",meta:{creativeId:t}};ki.infof(null,"removed creative id -> ",e,e)}}),1e3)}(t),a)if(s.indexOf(n)>-1){s.splice(s.indexOf(n),1);try{i.style.width="1px",i.style.height="1px",a.width="1",a.height="1"}catch(e){ki.errorf(null,"setGoogletagEvents: %o",e)}}else if("0"===a.width)a.style.setProperty("width","max-content","important");else{const e=a.width;a.style.setProperty("width",e+"px","important")}}}))};var C=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){var e;i.Y.fireEvent("shouldNotWrapGoogleTagRefresh")||(e=window.googletag.pubads().refresh,window.googletag.pubads().refresh=function(t,n,i){if(i)return t?e(t,n):e();ki.debugf(null,"pub invoked `googletag` refresh - %o",{slots:t&&g(t),settings:n}),t||(t=window.googletag.pubads().getSlots());for(var r=[],o=0;o<t.length;o++)try{var a=t[o].getSlotElementId();a&&r.push(a)}catch(e){ki.errorf(null,"wrapGoogleTagRefresh: refresh-invoked-by-the-publisher: %o",e)}c.invokeEventCallbacks("refresh",r)}),R(),X(window)}))}},Ii=new function(){var e=!1,t=new r.Z.SubscriptionLayer;function n(e,t){switch(e){case Ii.Types.DFP:return xi.dispatch(t);case Ii.Types.SMART_AS:}}this.subscribeForEvent=function(e,n){t.subscribeForEvent(e,n)},this.dispatch=function(i){e||(e=!0,xi.subscribeForEvent("refresh",(function(e){t.invokeEventCallbacks("refresh",e)})),xi.subscribeForEvent("bidReceived",(function(e){t.invokeEventCallbacks("bidReceived",e)})));var r=[];kn.Z.forEach(i,(function(e){r.push({asAdUnit:e,promise:void 0})}));for(var o={},a=0;a<i.length;a++){var s=i[a];o[s.type]=o[s.type]||[],o[s.type].push(s)}for(var d in o)if(d=parseInt(d),o.hasOwnProperty(d)){var c=o[d],l=n(d,c);kn.Z.forEach(l,(function(e,t){var n=c[t];kn.Z.find(r,(function(e){return e.asAdUnit==n})).promise=e}))}return kn.Z.map(r,(function(e){return e.promise}))}};Ii.Types={UNKNOWN:0,DFP:1,SMART_AS:2};const Yi=new s.Z({prefix:"testCompliance: "});var Oi=!1;try{Oi=window.location.href&&window.location.href.indexOf("bt_tc=false")>=0||"false"===localStorage.getItem("bt_tc")}catch(xe){Yi.errorf(null,"testComplianceDisabled: %o",xe)}function Xi(e,t){return r.Z.sizeValidation.isUnacceptable(e.unit.element,{width:t.width,height:t.height})}function Hi(e,t,n,i){const r={sendToServer:!0,sendPercentage:1,event:"client_tc_applied",meta:{client_tc_type:i,auctionID:t,bidderID:n.bidderId}};Yi.noticef(null,e,n,r)}function Ri(e,t){let o=n.Z.consts.complianceStatus.UNKNOWN;const a=i.Y.fireEvent("customComplianceCheck",{bid:e});return Oi?(o=n.Z.consts.complianceStatus.COMPLIANT,Yi.debugf(null,"compliance is disabled for the current bid: ",e)):a?(o=a,Hi("custom hook file tc check: ",t.auctionId,e,"custom_hook_file_tc_check")):Xi(t,e)?(o=n.Z.consts.complianceStatus.INCOMPLIANT,Hi("bid with unacceptance size: ",t.auctionId,e,"bid_with_unacceptance_size")):!function(e){const t=e.ad,n=e.type;return!![[".rhurl",".rhbodyurl"],[".rhurl","rh-image"],[".rhurl","rh-title"],[".rhurl",".rhbutton"],[".image-link","call-to-action-link"],[".image-link",".attribution"],[".image-link",".attribution"],[".rhprice",".rhsaleprice","gstatic.com/shopping"],[".grid-link-container",".grid-link"],[".rhsimpleprice",".rh-box-image","gstatic.com/shopping"],[".product-image",".product-container","gstatic.com/shopping"],["logoMCImageWidth","-webkit-animation"],["productBannerSlot","logoBackColorDerived"],["js/adsbygoogle.js",'data-ad-format="link"'],["js/adsbygoogle.js",'data-ad-type="text"']].some((e=>r.Z.commonUtils.matchStringsOnString(e,t)))||!(!t.includes("googletag.pubads().definePassback(")||n!=Pn.Bid.Types.ADX)}(e)?function(e){switch(e.bidderCode){case"adyoulike":case"lockerdome":case"sharethrough":return!0}return!1}(e)&&(o=n.Z.consts.complianceStatus.COMPLIANT,Hi("compliant bidder: ",t.auctionId,e,"compliant_bidder")):(o=n.Z.consts.complianceStatus.COMPLIANT,Hi("compliant based on HTML: ",t.auctionId,e,"compliant_based_on_HTML")),o}function Ci(e){var t={},i={};const r=n.Z.SharedObject.getItem("websiteConfig"),o=r.websiteID,a=r.organizationID;var s={};if(kn.Z.forEach(e,(function(e){var r=e.auction,o=e.bids;s[r.auctionId]=s[r.auctionId]||{};for(var a=0;a<o.length;a++){var d=o[a];const e=Ri(d,r);if(e==n.Z.consts.complianceStatus.UNKNOWN){s[r.auctionId][d.bidId]={bid:d,result:{}};var c=d.makeEntryForTestCompliance();c.auctionID=r.auctionId,c.spaceExternalID=r.unit.space.id,c.spaceName=r.unit.space.name,c.refreshDepth=r.unit.countOfDispatches-1;var l=parseFloat(d.cpm);c.cpm=isNaN(l)?0:l,Ai(c);var u=p(5,8);t[u]=c,i[u]=d}else s[r.auctionId][d.bidId]={bid:d,result:{status:e,backup:!1}}}})),Object.keys(t).length<=0){for(var d in s)if(s.hasOwnProperty(d)){var c=s[d];for(var l in c)if(c.hasOwnProperty(l)){var u=c[l];s[d][l]=u.result}}return Promise.resolve(s)}let h;try{h=(new Intl.DateTimeFormat).resolvedOptions()}catch(e){h={locale:void 0,timeZone:void 0}}const f={domain:window.location.host,websiteID:o,orgID:a,bids:t,locale:h.locale,timezone:h.timeZone,pageURL:window.location.href};return En.testCompliance(f).then((function(e){for(var n in e){if(!e.hasOwnProperty(n))continue;const a=t[n].auctionID;var r=s[a],o=r[i[n].bidId];o.result.status=e[n].status,o.result.bidContentIdHash=e[n].id,o.result.backup=e[n].backup||"true"===localStorage.getItem("bt_force_backup_creative")}for(const e in s)if(s.hasOwnProperty(e)){var a=s[e];for(var d in a)if(a.hasOwnProperty(d)){var c=a[d];s[e][d]=c.result}}return s}))}function Ai(e){if(e.markup&&e.markup.indexOf("://secure.ace.advertising.com/")>-1)try{var t="https://secure.ace.advertising.com/site="+e.markup.split("Site: '")[1].split("'")[0]+"/size="+e.markup.split("Size: '")[1].split("'")[0]+"/rip="+e.markup.split("/rip=")[1].split("/")[0];t&&(e.markup='\x3c!-- "'+t+'"--\x3e'+e.markup)}catch(e){Yi.errorf(null,"generalEntryFix: %o",e)}e.markup&&!e.url&&-1===e.markup.indexOf("<body")&&(e.markup="<body>"+e.markup+"</body>")}Yi.debugf(null,"test Compliance disabled? ",Oi);const Wi=new s.Z({prefix:"dispatch: ",level:s.z.INFO});var Fi=new function(){var e=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(t,n){e.subscribeForEvent(t,n)};var t=function(e){return kn.Z.filter(e,(function(e){return e.cpm>=.01}))};this.dispatchHB=function(e){try{var n={},r=[],o=[];kn.Z.forEach(e,(function(e){var t=new kn.Z.CDefer;n[e.auctionId]=t,r.push(t.promise);var i=e.unit.space.preBiddingSettings;if(i&&i.enabled)o.push(e);else{var a={auctionId:e.auctionId,bids:[]};t.resolve(a)}}));var a=kn.Z.map(o,(function(e){var t=e.unit.space.preBiddingSettings.biddingSettings;return{auctionId:e.auctionId,biddingSettings:t,spaceName:e.unit.space.name,sizes:e.unit.space.sizes,element:e.unit.element}})),s=Zi.dispatch(a);return Promise.all(s).then((function(e){try{for(var r=[],a=0;a<e.length;a++){var s=e[a],d=s.auctionId,c=kn.Z.find(o,(function(e){return e.auctionId==d})),l=s.bids;l=i.Y.fireEvent("passZeroCpmBidsFilter")?l:t(l);var u=i.Y.fireEvent("filterPrebidBids");if(u)l=u(kn.Z.map(l,(function(e){return{bid:e,rawBid:e.rawBid}})));c.addBids(l),s.bids=l,r.push({auction:c,bids:l})}Ci(r).then((function(t){for(var i in t)if(t.hasOwnProperty(i)){var r=t[i],o=kn.Z.find(e,(function(e){return e.auctionId==i})),a=o.bids;for(var s in r)if(r.hasOwnProperty(s)){var d=r[s],c=kn.Z.find(a,(function(e){return e.bidId==s}));c.contentIdHash=d.bidContentIdHash,c.complianceStatus=d.status,c.isBackupCreative=d.backup}n[i].resolve(o)}}))}catch(e){Wi.errorf(null,"error testing Prebid bid compliance: %o",e)}})),r}catch(e){Wi.errorf(null,"error in `dispatchHB`: %o",e)}},this.dispatchAS=function(e){try{var t={},n=[],i=[];kn.Z.forEach(e,(function(e){var r=new kn.Z.CDefer;t[e.auctionId]=r,n.push(r.promise);var o=e.unit.space.postBiddingSettings;if(o&&o.enabled)i.push(e);else{var a={auctionId:e.auctionId,bids:[]};r.resolve(a)}}));const r=o(i,0);return kn.Z.forEach(r,(function(n){n.then((function(n){const i=n.auctionId;e.find((e=>e.auctionId==i)).addBids(n.bids),t[i].resolve(n)}))})),n}catch(e){Wi.errorf(null,"error in `dispatchAS`: %o",e)}};var o=function(e,t){try{var i={},s=[];kn.Z.forEach(e,(function(e){var t=new kn.Z.CDefer;s.push(t.promise),i[e.auctionId]={auction:e,deferred:t}}));var d=[];if(kn.Z.forEach(e,(function(e){e.unit.space.postBiddingSettings.order[t]?d.push(e):i[e.auctionId].deferred.resolve({auctionId:e.auctionId,bids:[]})})),!d)return;var c=kn.Z.map(d,(function(e){var n=e.unit.space.postBiddingSettings,i=e.getWinningBid(),r=i?i.cpm:0;return{auctionId:e.auctionId,spaceName:e.unit.space.name,params:a(e,n.order[t]),slotElementId:e.unit.element.getAttribute("id"),floorPrice:r,type:n.type}})),l=Ii.dispatch(c);return kn.Z.forEach(l,(function(e){e.then((function(e){try{var a=e.auctionId,s=e.bids[0],l=kn.Z.find(d,(function(e){return e.auctionId==a})),u=kn.Z.find(c,(function(e){return e.auctionId==a}));const h=l.getWinningBid();if(!s){o([l],t+1)[0].then((function(e){i[a].deferred.resolve(e)}));try{if(h){const{ad:e,adId:t,bidderId:n,bidder:i,bidderCode:r,currency:o,creativeId:a,cpm:s,height:d,size:c,width:f,...p}=h,g={sendToServer:!0,event:"winButNoAACreative",sendPercentage:1,meta:{auctionID:u.auctionId,winningBidData:p,spaceID:l.unit.space.id}};Wi.infof(null,"logWinButNoAACreative, auction ID -> ",u.auctionId||"N/A",g)}}catch(e){Wi.errorf(null,'error checking for "winButNoAACreative": %o',e)}return}if(s.type==Pn.Bid.Types.DFP_PREBID)return h.additionalBidsToRender.push(s),s.complianceStatus=n.Z.consts.complianceStatus.COMPLIANT,void i[a].deferred.resolve({auctionId:a,bids:[]});if(!(s.type!=Pn.Bid.Types.ADX_TEXT||u.params.adxShouldTestCompliance||Xi(l,s)||function(e){return e.type==Un.Types.ADX_TEXT&&[["video-box"],["google-native-video"],["imasdk.googleapis.com/formats/outstream"],["video-in-display"],["vix.eu.criteo.net/concat"],[".video-container","googlevideo.com"],["product-video","googlevideo.com"],["twoOfTwoVertical","animation-container"],["animation:text2Frames","-webkit-animation"]].some((t=>r.Z.commonUtils.matchStringsOnString(t,e.ad)))}(s))){s.complianceStatus=n.Z.consts.complianceStatus.COMPLIANT,i[a].deferred.resolve(e);const t={sendToServer:!0,sendPercentage:1,event:"client_tc_applied",meta:{client_tc_type:"gad_text_ad",auctionID:a,bidderID:s.bidderId}};return void Wi.noticef(null,"gam text ad: ",s,t)}Ci([{auction:l,bids:[s]}]).then((function(r){if(s.contentIdHash=r[a][s.bidId].bidContentIdHash,s.complianceStatus=r[a][s.bidId].status,s.isBackupCreative=r[a][s.bidId].backup,s.complianceStatus!=n.Z.consts.complianceStatus.COMPLIANT)return s.cancelBid(),void o([l],t+1)[0].then((function(e){e.bids.push(s),i[a].deferred.resolve(e)}));i[a].deferred.resolve(e)})).catch((function(e){s.cancelBid(),o([l],t+1)[0].then((function(e){e.bids.push(s),i[a].deferred.resolve(e)}))}))}catch(e){Wi.errorf(null,"error handling auction responses from AS: %o",e)}}))})),s}catch(e){Wi.errorf(null,"error in `innerInvokePostbid`: %o",e)}},a=function(e,t){if(e.unit.space.postBiddingSettings.type===Ii.Types.DFP)return d(e,t)},s={},d=function(e,t){var n={},i=function(e,t){var n=e.getWinningBid(),i=e.getComplianceBids(),r=c(n,e.unit),o=n?n.getGPTTargeting({complianceBidsInAuction:i}):{},a=kn.Z.objectAssign({},r||{},o,t.keyValues||{});const d=s[e.unit.unitID]?Object.keys(s[e.unit.unitID]).map((e=>new RegExp(e))):[];return d.push(...["hb_adid","hb_bidder","hb_pb","hb_format","hb_size","hb_source","amznbid","amzniid","amznp","amznsz"].map((e=>new RegExp("".concat(e,".*"))))),s[e.unit.unitID]=a,{toAdd:a,toRemove:d}}(e,t);return n.keyValuesParams=i,n.queryParams=t.params.queryParams||{},n.adxBidderId=t.adx.bidderID,n.adxShouldTestCompliance=t.adx.testCompliance,n.directBidderId=t.direct.bidderID,n},c=function(e,t){var i={up_bidder:!0};if(e&&e.bidder)if("s2s"===e.rawBid.source)i.up_bidder="bt_exchange";else if("relay"===e.bidder)i.up_bidder="bt_server";else if(["true","false","undefined","152media","33across","a4g","aardvark","adblade","adbund","adbutler","adform","adkernel","adkerneladn","admedia","admixer","adocean","adsparc","adspirit","adsupply","adtelligent","adxcg","adyoulike","aerserv","amazon","andbeyond","aol","appnexus","appnexusAst","arteebee","atomx","audienceNetwork","automatad","beachfront","betweendigital","bidfluence","brainy","brealtime","bridgewell","brightcom","buysellads","c1x","carambola","clickforce","clickonometrics","colossus","connectad","consumable","contentIgnite","conversant","cox","cpx","criteo","defymedia","dgads","districtm","districtmDMX","e-planning","emx_digital","emxdigital","engagebdr","essens","fairtrade","featureForward","fidelityMedia","freewheel-ssp","fyber","gamma","gamoshi","getintent","gourmetAds","gumgum","gxone","imonomy","improvedigital","indexExchange","IndexExchange","inneractive","innity","inskin","insticator","invibes","iqm","ix","justpremium","kargo","komoona","kumma","lifestreet","lkqd","lockerdome","madvertise","marsmedia","matomy","media.net","medianet","mobfox","my6sense","mytarget","nginad","nobid","oftmedia","onemobile","oneplanetonly","onetag","openx","optimatic","optimera","orbitsoft","peak226","piximedia","platform.io","playgroundXyz","polluxNetwork","polymorph","prebidServer","pubgears","pubmatic","pulsepoint","pulsepointLite","quantcast","quantum","readpeak","realvu","rhythmone","rockyou","roxot","rtbdemandadk","rtbdemandBidder","rtbhouse","rubicon","rxrtb","sara","sekindoum","serverbid","sharethrough","smart","smartyads","soloway","somoAudience","sonobi","sortable","sovrn","spotx","springserve","stickyadstv","tapsense","teads","thoughtleadr","tremor","trionInteractive","triplelift","trustx","twenga","ucfunnel","underdogmedia","undertone","unruly","upo","upo1","upo10","upo2","upo3","upo4","upo5","upo6","upo7","upo8","upo9","vertamedia","vertoz","vi","vidazoo","vis.x","vuble","weborama","wideorbit","widespace","xaxis","xendiz","yahoossp","yieldbot","yieldlab","yieldmo","yieldone"].indexOf(e.bidder)>-1)i.up_bidder=e.bidder;else{const t={sendToServer:!0,event:"upBidder_unknownBidder",meta:{bidder:e.bidder,bidderCode:e.bidderCode},sendPercentage:1};Wi.noticef(null,"unknown bidder for up_bidder targeting -> ",e.bidder,t)}var r=window.location.hostname;0===r.indexOf("www.")&&(r=r.replace("www.",""));var o=r;o=o.match(/(co\.il|co\.uk|org\.il)/)?o.replace("www.","").split(".").splice(-3).join("."):o.replace("www.","").split(".").splice(-2).join("."),i.up_recovery="true";var a=qn.Xh(),s=qn.Uh(),d=qn.Jv();i.up_browser=a,i.up_device=s,i.up_platform=d,i.up_domain=r,i.up_website=o,i.up_website_id=n.Z.SharedObject.getItem("websiteConfig").websiteID;const c=t.countOfDispatches-1;return i.up_refresh=c>30?"30":"".concat(c),i};Ii.subscribeForEvent("bidReceived",(function(t){e.invokeEventCallbacks("bidReceived",t)})),Ii.subscribeForEvent("refresh",(function(t){e.invokeEventCallbacks("refresh",t)})),Zi.subscribeForEvent("bidReceived",(function(t){e.invokeEventCallbacks("bidReceived",t)})),Zi.subscribeForEvent("refresh",(function(t){e.invokeEventCallbacks("refresh",t)}))},Vi=new function(){var e=[];this.set=function(t){e.push(t)},this.getBySpace=function(t){for(var n=0;n<e.length;n++){var i=e[n];if(i.space==t)return i}},this.getByElement=function(t){return e.find((e=>e.element===t))},this.getAll=function(){return e},this.purgeUnitsWithNoElementOnPage=function(){e=e.filter((e=>r.Z.commonUtils.isElementInBody(e.element)))}};const Ui=new s.Z({prefix:"refresh: "});var ji=new function(){this.initialize=function(h){let{invokeSpaces:f}=h;const p=function(i){let{invokeSpaces:c}=i;function l(){if(!document.hasFocus())return void Ui.debugf(null,"triggerRefresh: User not on page (tab/window out of focus), no refreshes attempted.");if(0===e.size)return;const i=new Map;if(e.forEach(((t,r)=>{if(t.expiresAt&&t.expiresAt<Date.now())return void e.delete(r);let d,c;const l=Ti({selector:r.selector.value});l===n.Z.consts.elementVisibility.VISIBLE?(d=t.skipComplianceCheck||function(){const e=Date.now();return e-o<(o===a?2500:500)+s}(),c="IS_VISIBLE"===t.whenVisibility||"ANY"===t.whenVisibility):l===n.Z.consts.elementVisibility.HIDDEN?(d=!0,c="IS_HIDDEN"===t.whenVisibility||"ANY"===t.whenVisibility):l===n.Z.consts.elementVisibility.NOT_FOUND&&e.delete(r),d&&c&&(e.delete(r),i.set(r,t))})),0===i.size)return void Ui.debugf(null,"triggerRefresh: No eligible refreshes in queue to attempt: %o",d(e));const l=[],u={};i.forEach(((e,t)=>{l.push(t),r.Z.commonUtils.isNumber(e.minTimeBetweenRefreshes)&&(u[t]=e.minTimeBetweenRefreshes)}));const h={filteringSettings:{minTimeBetweenRefreshesBySpace:u}};Ui.infof(null,"Attempting to refresh: %o\nLeft in queue: %o",[d(i),d(e)]),c(l,h).then((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const n=l.filter((t=>!e.includes(t)));n.length>0&&(n.forEach((e=>{t(i.get(e))})),Ui.infof(null,"Could not refresh & requeued: %o",n))}))}return r.Z.commonUtils.debounce(l,s)}({invokeSpaces:f});!function(e){let{triggerRefresh:n}=e;ui(n),window.addEventListener("onUserReturnedToPage",(()=>{!function(){const{unitVisibility:e}=i.Y.fireEvent("refreshOnReturnToPage")||{};if(e){const n=Vi.getAll().filter((t=>("ANY"===e||e===Ti({element:t.element,useIABDefinition:!0}))&&t.lastInvokeTime&&Date.now()-t.lastInvokeTime.getTime()>5e3));if(n.length>0){n.forEach((e=>{t({space:e.space,whenVisibility:"ANY",skipComplianceCheck:!0,minTimeBetweenRefreshes:0,expiresAt:Date.now()+1e3})})),u+=n.length,l++;const e={event:"refreshOnReturnToPage",sendToServer:!0,sendPercentage:1,meta:{unitsQueuedForRefresh:n.map((e=>({elementId:e.element.id,space:{name:e.space.name,templateSpaceName:e.space.templateSpaceName},gamAdUnitPath:e.gamAdUnitPath,prevDispatchCount:e.countOfDispatches,prevRenderCount:e.countOfRenders,secsSinceLastAuction:e.lastInvokeTime?((Date.now()-e.lastInvokeTime.getTime())/1e3).toFixed(1):"Never"}))),secsSinceLastRefreshOnRTP:c?((Date.now()-c)/1e3).toFixed(1):"Never",totalRefreshesOnRTP:l,totalUnitsRefreshedOnRTP:u}};Ui.infof(null,"refreshOnReturnToPage, units ->",n,e),c=Date.now()}}}(),n()})),window.addEventListener("locationChange",(()=>{!function(){let{locationChanged:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=Date.now();o=t,e&&(a=t)}({locationChanged:!0})}))}({triggerRefresh:p});(i.Y.hasEventListener("spaceRefreshOnInterval")||i.Y.hasEventListener("spaceRefreshSettings"))&&(this.spaceRefreshOnInterval=function(e){let{triggerRefresh:r}=e;return e=>{let{space:o,unitDispatchCount:a}=e;const s={space:o,unitDispatchCount:a},d=i.Y.fireEvent("spaceRefreshOnInterval",s)||i.Y.fireEvent("spaceRefreshSettings",s);if(d){let{whenVisibility:e,type:a,skipComplianceCheck:s=!1}=d;if(s=s||i.Y.fireEvent("skipVisibleAdRefreshComplianceCheck",{space:o}),!e){if(!a)return void Ui.errorf(null,"spaceRefreshSettings [deprecated]: Use new hook `spaceRefreshOnInterval` and provide `whenVisibility`.");switch(Wn.commonBLUtils.refreshTypeDecoder(a)){case n.Z.consts.refreshType.UNKNOWN:return void Ui.errorf(null,"spaceRefreshSettings [deprecated]: Invalid refresh `type` %s",a);case n.Z.consts.refreshType.ALL:case n.Z.consts.refreshType.VISIBLE:return void Ui.debugf(null,"spaceRefreshSettings [deprecated]: Ignoring refresh with `type` %s",a);case n.Z.consts.refreshType.HIDDEN:e="IS_HIDDEN"}}const c=d.interval||d.rate||3e4;setTimeout((function(){t({space:o,whenVisibility:e,skipComplianceCheck:s}),r()}),c),Ui.infof(null,"spaceRefreshOnInterval: Refresh to be enqueued (& attempted) in %i secs: %o",[c/1e3,{spaceName:o.name,space:o,whenVisibility:e,skipComplianceCheck:s}])}}}({triggerRefresh:p}));(function(e){let{triggerRefresh:r}=e;Fi.subscribeForEvent("refresh",(function(e){e.forEach((e=>{const r=document.getElementById(e),o=r&&Vi.getByElement(r),a=o&&o.space;if(a&&o.countOfDispatches>0){let e;const s=Ti({element:r});if(s===n.Z.consts.elementVisibility.VISIBLE)e="IS_VISIBLE";else if(s===n.Z.consts.elementVisibility.HIDDEN)e="IS_HIDDEN";else if(s===n.Z.consts.elementVisibility.NOT_FOUND)return;const d=i.Y.fireEvent("skipVisibleAdRefreshComplianceCheck",{space:a});Ui.infof(null,"googletag refresh: Enqueuing: %o",{spaceName:a.name,space:a,correspondingUnit:o,whenVisibility:e,skipComplianceCheck:d}),t({space:a,whenVisibility:e,skipComplianceCheck:d})}})),r()}))})({triggerRefresh:p}),function(e){let{invokeSpaces:t}=e,n=[];i.Y.addEventListener("refreshByForce",(function(e){var i=e.data,r=i&&i.settings,o=bi.getAll(),a=r&&r.minTimeBetweenRefreshes,s=r&&r.shouldRefreshFailedSpaces,d=r&&r.spacesNames,c=r&&r.shouldRefreshAllSpaces,l=[],u={filteringSettings:{minTimeBetweenRefreshes:a}};c?l=o:(s&&kn.Z.forEach(n,(function(e){l.push(e)})),d&&kn.Z.forEach(o,(function(e){d.indexOf(e.name)>-1&&l.push(e)}))),l=kn.Z.distinct(l),Ui.infof(null,"refreshByForce (settings: %o): Re-auctioning Spaces: %o",[r,l]),t(l,u).then((function(e){n=kn.Z.filter(l,(function(t){return e.indexOf(t)<0}))}))}))}({invokeSpaces:f})},this.minTimeBetweenAuctionsUnitsFilter=function(e,t){let o=n.Z.upoSettings.minTimeBetweenRefreshes;i.Y.hasEventListener("minTimeBetweenRefreshes")&&(o=i.Y.fireEvent("minTimeBetweenRefreshes"));r.Z.commonUtils.isNumber(t.minTimeBetweenRefreshes)&&(o=t.minTimeBetweenRefreshes);const s=t.minTimeBetweenRefreshesBySpace||{};return e.filter((e=>{let t;if(e)if(e.lastInvokeTime){const n=r.Z.commonUtils.isNumber(s[e.space])?s[e.space]:o,i=Date.now()-e.lastInvokeTime.getTime();i>n||a&&e.lastInvokeTime.getTime()<a?(t=!0,Ui.infof(null,"Re-auctioning Unit: %o",e)):(t=!1,Ui.infof(null,"Must wait at least %i seconds before we can re-auction Unit: %o",[(n-i)/1e3,e]))}else t=!0;else t=!1;return t}))},this.spaceRefreshOnInterval;const e=new Map;function t(t){let{space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s}=t;"IS_VISIBLE"===r&&i.Y.fireEvent("dontQueueViewableRefreshes",{space:n})?Ui.debugf(null,"queueSpaceForRefresh: `dontQueueViewableRefreshes` hook set to not enqueue refresh: &o",{spaceName:n.name,space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s||"Never"}):e.set(n,{space:n,whenVisibility:r,skipComplianceCheck:o,minTimeBetweenRefreshes:a,expiresAt:s})}let o,a;const s=500;function d(e){return Array.from(e.values()).map((e=>{let{space:t,...n}=e;return{spaceName:t.name,space:t,...n}}))}let c,l=0,u=0};function Li(e){const t=i.Y.fireEvent("maxAmountOfUnitDispatches");return t?e.filter((e=>e.countOfDispatches<t)):e}function Pi(e,t){return ji.minTimeBetweenAuctionsUnitsFilter(e,t)}function Ki(e){return e.filter((e=>!i.Y.fireEvent("filterOutUnitToBeAuctioned",{unit:e})))}function Ji(e){const t=e.map((e=>e.element));return e.filter(((e,n)=>t.indexOf(e.element)==n))}function Gi(e,t){return new Promise(((n,i)=>{t&&t.definedSlotsFilteringSettings&&(t.definedSlotsFilteringSettings.dfpEnabled||t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots)?window.googletag.cmd.push((function(){const i=window.googletag.pubads().getSlots(),r=[];e.forEach((e=>{t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots||e.space.postBiddingSettings.enabled?i.forEach((t=>{t.getSlotElementId()===e.element.getAttribute("id")&&(e.gamAdUnitPath=function(e){let t=e.getAdUnitPath();"/"===t.charAt(0)&&(t=t.slice(1));const[n,...i]=t.split("/");return{networkCode:n,adUnit:"/".concat(i.join("/"))}}(t),r.push(e))})):r.push(e)})),n(r)})):n(e)}))}var Qi=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){window.__cmp&&window.__cmp("getVendorConsents",null,(function(e){e&&e.gdprApplies&&(e.purposeConsents&&e.purposeConsents[1]&&e.purposeConsents[2]&&e.purposeConsents[3]&&e.purposeConsents[4]&&e.purposeConsents[5]||window.googletag.pubads().setRequestNonPersonalizedAds(1))})),i.Y.fireEvent("skipDisableInitialLoad")||window.googletag.pubads().disableInitialLoad(),i.Y.fireEvent("disableSingleRequest")||window.googletag.pubads().enableSingleRequest(),i.Y.fireEvent("collapseEmptyDivs")&&window.googletag.pubads().collapseEmptyDivs(!0),window.googletag.pubads().enableAsyncRendering(),window.googletag.enableServices()}))},qi=function(e){if("dfp"===e)return Qi},$i=__webpack_require__(616);const er=new s.Z({prefix:"prebidPostset: "});let tr;var nr=function(){tr=n.Z.cpbjs,n.Z.upoSettings.prebidTimeout=i.Y.fireEvent("prebidTimeout")||n.Z.upoSettings.prebidTimeout,function(){const e=n.Z.SharedObject.getItem("whitelistingIFrame");e?tr.setCookieFrame({frame:e,isBTSafeFrameDomain:n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame}):i.Y.addEventListener("whitelistingIFrameLoaded",(function(e){tr.setCookieFrame({frame:e.data.whitelistingIFrame,isBTSafeFrameDomain:n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame})}))}(),function(){try{const e=window.pbjs,t=e&&e.version&&parseInt(e.version[1]);if(t&&!isNaN(t)&&t>=4){const t=e.getConfig("consentManagement");if(t&&(t.gdpr||t.usp))return void tr.setConfig({consentManagement:t})}}catch(e){er.errorf(null,"setConsentConfig: copy publisher consentManagement settings: %o",e)}try{"function"==typeof window.__tcfapi&&window.__tcfapi("ping",2,(function(e){if(e&&e.cmpLoaded&&e.gdprApplies){const e={consentManagement:tr.getConfig().consentManagement||{}};e.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},tr.setConfig(e)}}))}catch(e){er.errorf(null,"setConsentConfig: __tcfapi: %o",e)}try{"function"==typeof window.__cmp&&"function"!=typeof window.__tcfapi&&window.__cmp("getConsentData",null,(function(e){if(e&&e.gdprApplies){const e={consentManagement:tr.getConfig().consentManagement||{}};e.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},tr.setConfig(e)}}))}catch(e){er.errorf(null,"setConsentConfig: __cmp: %o",e)}try{"function"==typeof window.__uspapi&&window.__uspapi("getUSPData",1,(function(e,t){if(t&&e.uspString){const e={consentManagement:tr.getConfig().consentManagement||{}};e.consentManagement.usp={cmpApi:"iab",timeout:100},tr.setConfig(e)}}))}catch(e){er.errorf(null,"setConsentConfig: __uspapi: %o",e)}}(),tr.que.push((function(){tr.setConfig({userSync:{userIds:[{name:"pubProvidedId",params:{eidsFunction:function(){return[{source:"blockthrough.com",uids:[{id:"bt-aauser",atype:1,ext:{stype:"ppuid"}}]}]}}},{name:"id5Id",params:{partner:993},storage:{type:"html5",name:"id5id",expires:90,refreshInSeconds:28800}}],auctionDelay:50}})})),function(){const e={};tr.onSendLog((function(t,n,i,r){if(r.meta.fired){const t=1;e[r.meta.uid]=(0,$i.getTrueByProbability)(t)}if(e[r.meta.uid])return r={...r,sendPercentage:101,sendToServer:!0},void er.infof(t,n,i,r);r.sendPercentage&&(r={...r,sendToServer:!0},er.infof(t,n,i,r))}))}(),tr.onBeforeRequest((function(e){let t=e&&r.Z.addAcceptableParam(e);if(t.includes("criteo.com/cdb")&&i.Y.fireEvent("addCriteoAdblockQueryParam")){const e=t.includes("abp=1");t=e?t:"".concat(t,"&abp=1")}return t})),tr.aliasBidder("pulsepointLite","pulsepoint"),tr.aliasBidder("indexExchange","ix"),tr.aliasBidder("ix","indexExchange"),tr.aliasBidder("my6sense","upo2"),tr.aliasBidder("lockerdome","upo3"),tr.aliasBidder("appnexus","appnexus_cl"),tr.aliasBidder("rubicon","rubi_ttd"),tr.aliasBidder("rubicon","rubi_mm"),tr.aliasBidder("rubicon","pgRubicon"),tr.aliasBidder("rubicon","rubiconAU"),tr.aliasBidder("rubicon","rubi_ss"),tr.aliasBidder("colossus","colossusssp"),tr.aliasBidder("pubmatic","PubmaticAU"),tr.aliasBidder("pubmatic","pubmatic_cl"),tr.aliasBidder("pubmatic","pubmatic_alien"),function(){const e=window.pbjs||window.jitaJS;e&&e.bidderSettings&&(tr.bidderSettings=e.bidderSettings);const t=e&&e.getConfig&&e.getConfig();let i="high";if(t){const e=t.customPriceBucket,n=t.priceGranularity;i="custom"===n?e:n}tr.setConfig({bidderTimeout:n.Z.upoSettings.prebidTimeout,maxRequestsPerOrigin:6,priceGranularity:i,userSync:{filterSettings:{iframe:{bidders:"*",filter:"include"}},syncsPerBidder:25,syncEnabled:!0},floors:{data:{schema:{fields:["mediaType"]},values:{banner:.03}}}})}(),function(){const{websiteStoredRequestId:e}=i.Y.fireEvent("snigelAdapterConfiguration")||{};e&&tr.setConfig({s2sConfig:[{defaultVendor:"snigel",accountId:"1000",bidders:[],extPrebid:{storedrequest:{id:e}}}]})}(),function(){if(i.Y.hasEventListener("enableRelayAdapter")){const{sid:e}=i.Y.fireEvent("enableRelayAdapter")||{},t=e||n.Z.SharedObject.getItem("websiteConfig").websiteID;tr.setConfig({relayAccountId:12021}),tr.setBidderConfig({bidders:["relay"],config:{schain:{validation:"strict",config:{ver:"1.0",complete:1,nodes:[{asi:"blockthrough.com",sid:t,hp:1}]}}}})}}(),tr.setBidderConfig({bidders:["rubicon"],config:{ortb2:{site:{ext:{data:{keywords:"blockthrough"}}}}}});const e=i.Y.fireEvent("scrapePrebidRequestBids");e&&function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{onListenerAdded:t,pollingInterval:n=100,maxIntervalCount:i=50}=e;if(ir())rr(t);else{let e=0;const r=setInterval((function(){e++,e>=i?clearInterval(r):ir()&&(clearInterval(r),rr(t))}),n)}}(e),i.Y.fireEvent("addIndexExchangeWrappers")&&function(){const e={aol:"ix_aol_om",appnexus:"ix_apnx_om",beachfront:"ix_bft_cpm",colossusssp:"ix_clss_cpm",consumable:"ix_cnsm_cpm",conversant:"ix_conv_cpm",criteo:"ix_cdb_om",districtm:"ix_dism_om",districtmDMX:"ix_dis_cpm",emx_digital:"ix_brt_cpm",gumgum:"ix_gum_cpm",improvedigital:"ix_imdi_cpm",justpremium:"ix_justp_cpm",kargo:"ix_karg_om",lockerdome:"ix_lkdm_cpm",onedisplay:"ix_oath_cpm",onemobile:"ix_oath_cpm",openx:"ix_ox_om",optimera:"ix_opti_cpm",piximedia:"ix_pix_cpm",pubmatic:"ix_pubm_om",pulsepoint:"ix_pp_om",pxyz:"ix_pxyz_cpm",quantcast:"ix_qua_cpm",rubicon:"ix_rubi_om",sharethrough:"ix_shth_cpm",sonobi:"ix_sbi_om",sovrn:"ix_sovrn_om",triplelift:"ix_tpl_cpm",trustx:"ix_trstx_cpm",indexExchange:"IOM",ix:"IOM",undertone:"ix_undr_cpm"};function t(e){return(100*parseFloat(e)).toFixed()}for(const n in e)tr.bidderSettings[n]={adserverTargeting:[{key:e[n],val:function(e){var n=tr.getConfig().priceGranularity;return"auto"===n?e.size+"_"+t(e.pbAg):"dense"===n?e.size+"_"+t(e.pbDg):"low"===n?e.size+"_"+t(e.pbLg):"medium"===n?e.size+"_"+t(e.pbMg):"high"===n?e.size+"_"+t(e.pbHg):"custom"===n?e.size+"_"+t(e.pbCg):e.size+"_"+t(e.pbHg)}}]}}(),function(){const e=i.Y.fireEvent("provideSChainConfig");e&&tr.que.push((function(){try{if(!window[e.prebidVariable].getConfig("schain"))throw new Error("Could not find publisher's schain in their prebid variable - use manual fallback.");tr.setConfig({schain:window[e.prebidVariable].getConfig("schain")})}catch(t){try{const t=e.manualFallback||{};tr.setConfig({schain:{validation:"strict",config:{ver:"1.0",complete:null!==t.complete&&void 0!==t.complete?t.complete:1,nodes:[{asi:t.asi,sid:t.sid,hp:null!==t.hp&&void 0!==t.hp?t.hp:1}]}}})}catch(e){er.errorf(null,"setPublisherSChain: error within manual fallback cpbjs.setConfig(): %o",e)}}}))}(),i.Y.fireEvent("prebidDoneInit",{cpbjs:tr})};function ir(){return window.pbjs&&window.pbjs.onEvent}function rr(e){try{window.pbjs.onEvent("beforeRequestBids",(function(e){const t=window.pbjs.adUnits||[],n=t.map((e=>{let{code:t}=e;return t})),i=e.filter((e=>!n.includes(e.code)));i.length>0&&(window.pbjs.adUnits=[...t,...i])})),e&&e()}catch(e){er.errorf(null,"prebidPostset - listen to pbjs.requestBids: %o",e)}}var or=function(e){if("prebid"===e)return nr},ar=new function(){var e=new r.Z.SubscriptionLayer;this.subscribeForEvent=function(t,n){e.subscribeForEvent(t,n)};this.load=function(){window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[],e.invokeEventCallbacks("preset"),new Promise((function(e,t){var n=document.createElement("script");n.async="true",n.type="text/javascript",n.addEventListener("load",(function(){Promise.all([new Promise((function(e,t){var n=document.createElement("script");n.async="true",n.type="text/javascript",n.addEventListener("load",(function(){e()})),n.addEventListener("error",(function(e){t(e)})),n.src="https://adservice.google.com/adsid/integrator.js?domain="+window.location.hostname+"&upapi=true",(document.head||document.body||document.documentElement).appendChild(n)})),new Promise((function(e,t){var n=!1;try{if(window.googletag&&window.googletag.getVersion){n=!0;const i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){e()})),i.addEventListener("error",(function(e){t(e)})),i.src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_"+window.googletag.getVersion()+".js?upapi=true",(document.head||document.body||document.documentElement).appendChild(i)}}catch(e){t("error in getting pubads_impl -> "+e)}if(window.googletag._vars_){var i=window.googletag._vars_,r=[21063911,21063048,21063670,21063817,21063671],o=[];for(var a in i){var s=i[a];if("string"==typeof s&&s.indexOf("pubads_impl_")>-1&&!n)try{n=!0;const i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){e()})),i.addEventListener("error",(function(e){t(e)})),s.indexOf("?")>-1?i.src=s+"&upapi=true":i.src=s+"?upapi=true",(document.head||document.body||document.documentElement).appendChild(i)}catch(e){t("error in getting pubads_impl -> "+e)}else if(Array.isArray(s))try{var d=s.length;if(r)for(;d--;){const e=s[d];r.indexOf(e)>-1&&s.splice(d,1)}if(o)for(var c=0;c<o.length;c++){const e=o[c];-1===s.indexOf(e)&&s.push(e)}}catch(e){console.error("error in adding/removing eids -> "+e)}}}n||t()}))]).then((function(){e()}),(function(e){t(e)}))})),n.addEventListener("error",(function(){t()})),n.src="//www.googletagservices.com/tag/js/gpt.js?upapi=true",(document.head||document.body||document.documentElement).appendChild(n)}))}},sr=__webpack_require__(228),dr=new r.Z.SubscriptionLayer,cr=!1,lr=function(e){switch(cr||cr||(cr=!0,ar.subscribeForEvent("preset",(function(){hr("dfp")})),ar.subscribeForEvent("postset",(function(){pr("dfp")})),sr.k.subscribeForEvent("preset",(function(){hr("prebid")})),sr.k.subscribeForEvent("postset",(function(){pr("prebid")}))),e){case"dfp":ar.load();break;case"prebid":sr.k.load()}},ur=function(e,t){dr.subscribeForEvent(e,t)},hr=function(e){dr.invokeEventCallbacks(e)},fr=function(e,t){dr.subscribeForEvent(e,t)},pr=function(e){dr.invokeEventCallbacks(e)};const gr=new s.Z({prefix:"defaultCreativeBid: "});function mr(e,t){var i=[],r=!1;var o={ad:e.creativeHTML,bidder:"default-creative",bidderId:"default-creative-"+t.unit.space.name,bidderCode:e.providerName||"default-creative",width:e.width,height:e.height,disableAuctionEventLogging:e.disableAuctionEventLogging},a=new Pn.Bid(o,o,Pn.Bid.Types.DEFAULT_CREATIVE,void 0,(function(t){!function(t){var o=e.height+"px",a=e.width+"px",s=e.creativeHTML,d=document.createElement("div");d.className="default-creative-container",d.style.height=o,d.style.width=a;var c=Wn.whitelistingIFrame.createWhitelistingIFrame();c.className="default-creative-iframe",c.setAttribute("scrolling","no"),c.setAttribute("marginwidth","0"),c.setAttribute("marginheight","0"),c.setAttribute("height",o),c.setAttribute("width",a),d.appendChild(c);const l=()=>{try{if(c.removeEventListener("load",l),n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame)c.contentWindow.postMessage(JSON.stringify({message:"Render Secure Creative",ad:s}),"*");else{var e=c.contentWindow.document;if(navigator.userAgent&&navigator.userAgent.toLowerCase().indexOf("firefox/")>-1){const t=/firefox\/([\d.]+)/;let n=navigator.userAgent.toLowerCase().match(t)[1];n&&parseInt(n,10)<67&&e.open("text/html","replace")}e.write(s),e.close()}r=!0,kn.Z.forEach(i,(function(e){e()}))}catch(e){gr.errorf(null,"auction: createDefaultCreativeBid: renderDefaultCreative: %o",e)}};c.addEventListener("load",l),t.appendChild(d)}(t.placement)}),void 0,(function(e){r?e():i.push(e)}),void 0);return a}const wr=new s.Z;var br=new function(){var e,t=!1,o=[],a=[],s=!1;let d,c=localStorage.getItem("btUserCountry");function l(){return window.pbjs&&window.pbjs.adUnits}function u(e){return h(v(e))}function h(t,r){const a=function(){const e=[],t=i.Y.fireEvent("auctionBlockerHook");return t&&e.push(t),e}();return Promise.all(a).then((()=>function(e){const t=[],n=[];return kn.Z.forEach(e,(function(e){var r,o,a=Wn.commonBLUtils.getSpaceElement(e);a&&((r=Vi.getByElement(a))||((o=a).alreadyWraped||(fi.hookFunction(o,"setAttribute",fi.Types.SET_ATTRIBUTE_PRE,void 0,!0),o.alreadyWraped=!0),r=new Pn.Unit({element:a,space:e}),i.Y.fireEvent("onNewUnitFound",r),Vi.set(r),n.push(r)),r&&r.space==e&&t.push(r))})),function(e){const{AD_UNIT_PATH_PREFIX:t,deriveDataFromUnitForSpaces:n,slotDataBySpaceName:r}=i.Y.fireEvent("newGAMSlotsOnUnitCreation")||{};e.length>0&&(n||r)&&window.googletag.cmd.push((function(){try{e.forEach((e=>{let i,o,a,{unitID:s,element:d,space:c}=e;const l=n&&n.includes(c.name)&&t,u=r&&r[c.name];(l||u)&&(u&&({adUnitPath:i,sizes:o,slotElementId:a}=r[c.name]||{}),!i&&t&&(i="".concat(t).concat(c.name)),o||(o=c.sizes.map((e=>e.split("x").map((e=>parseInt(e,10))))).filter((e=>2===e.length&&!isNaN(e[0])&&!isNaN(e[1])))),a||(d.id||d.setAttribute("id","bt-unit-".concat(s)),a=d.id),i&&o&&o.length>0&&a&&Jn(i,o,a))}))}catch(e){Kn.errorf(null,"error defining new GAM slots on Unit creation",e)}}))}(n),t}(t))).then((t=>function(t,r){return new Promise((function(a,l){if(0!==t.length){i.Y.fireEvent("onBeforeInvokeDispatch",{spaces:kn.Z.map(t,(function(e){return e.space}))}),function(e){e.forEach((e=>{let{space:t}=e;i.Y.fireEvent("modifySpacesOnBeforeFetching",{space:t})}))}(t);var u={};r&&(u=r.filteringSettings||{}),async function(t,n){const i={definedSlotsFilteringSettings:{dfpEnabled:e.dfp,alwaysFilterByGoogletagSlots:s}};n={...i,...n};let r=t.filter((e=>e.state===Pn.Unit.States.PENDING));if(r.length>0){r.forEach((e=>{e.state=Pn.Unit.States.CHECKING}));let e=[...r];for(const t of b)if(r=await t(r,n),e=e.filter((e=>{const t=r.includes(e);return t||(e.state=Pn.Unit.States.PENDING),t})),0===r.length)break}return r}(t,u).then((function(t){try{if(function(e){e&&0!==e.length&&n.Z.upoSettings.amazonBidderConfiguration.enabled&&e.forEach((e=>{const t=e.space;if(t.preBiddingSettings.biddingSettings[n.Z.consts.headerBiddingType.prebid]=t.preBiddingSettings.biddingSettings[n.Z.consts.headerBiddingType.prebid]||[],t.preBiddingSettings.biddingSettings[n.Z.consts.headerBiddingType.prebid].some((e=>"amazon"===e.name))||!googletag||!googletag.pubads)return;const i=e.element,r=googletag.pubads().getSlots().find((e=>document.getElementById(e.getSlotElementId())===i)),o=r&&r.getAdUnitPath();o&&t.preBiddingSettings.biddingSettings[n.Z.consts.headerBiddingType.prebid].push({id:o+"_amazon_bidder",name:"amazon",params:{pubID:n.Z.upoSettings.amazonBidderConfiguration.pubID,adUnitGPTPath:o}})}))}(t),a(t||[]),!t||0===t.length)return;var r=kn.Z.map(t,(function(e){return e.space}));Wn.movePositionService.dispatch(r);var s=kn.Z.map(t,(function(e){return new Pn.Auction({unit:e})}));if(i.Y.fireEvent("onAuctionGroupStarted",s),function(e){kn.Z.forEach(e,(function(e){e.state=Pn.Auction.States.DISPATCHED,e.unit.state=Pn.Unit.States.DISPATCHED,o.push(e),e.unit.countOfDispatches++,e.unit.lastInvokeTime=new Date,i.Y.fireEvent("onAuctionStarted",{auction:e})}))}(s),window.__bt_intrnl.stopFlag)return;i.Y.fireEvent("onPrebiddingStarted",s);var l=Fi.dispatchHB(s);Promise.all(l).then((function(t){if(i.Y.fireEvent("onPrebiddingEnded",s),!window.__bt_intrnl.stopFlag){var n=Fi.dispatchAS(s);kn.Z.forEach(n,(function(t,n){t.then((function(t){var n=kn.Z.find(s,(function(e){return e.auctionId==t.auctionId}));let r=n.getWinningBid();if(r&&r.type===Pn.Bid.Types.PREBID&&0===r.additionalBidsToRender.length&&e.dfp&&n.unit.space.postBiddingSettings.enabled&&n.cancelAuction(),!window.__bt_intrnl.stopFlag){if((localStorage.getItem("forceDefaultCreative")||d)&&(r=void 0),!r){var o=d?function(e,t){const n=["250x250","300x250","300x600","320x100","336x280","728x90"];e=e.filter((e=>n.includes(e)));let i=e[Math.floor(Math.random()*e.length)];const r="RU"===t?"r":"b",o=function(e,t){const n={"250x250":["250x250-1.png","250x250-3.png","250x250.png"],"300x250":["300x250-4.png","300x250-pt.png","300x250-ptn.png","300x250.png"],"300x600":["300x600-pt.png","300x600-ptn.png","300x600.png"],"320x100":["320x100-2.png","320x100-p.png","320x100.png"],"336x280":["336x280-ptn.png","336x280.png"],"728x90":["728x90-p.png","728x90.png"]},i=n[e][Math.floor(Math.random()*n[e].length)];return"//ads2ads.net/"+e+"/"+i}(i),a=r+"PSA";i=i.split("x");const s=function(){const e=["https://twitter.com/JuliaDavisNews/status/1503457457393352706","https://www.themoscowtimes.com/2022/03/30/mariupol-maternity-hospital-forcibly-evacuated-to-russia-city-a77142","https://www.wsj.com/articles/woman-who-burst-onto-russian-tv-set-with-antiwar-poster-fined-for-protest-violation-11647362961","https://www.jpost.com/opinion/article-702263","https://www.aljazeera.com/news/2022/3/30/timeline-week-five-of-russias-war-in-ukraine"];return e[Math.floor(Math.random()*e.length)]}();return{width:i[0],height:i[1],creativeHTML:'<a href="'+s+'" target="_blank"><img src="'+o+'"></a>',disableAuctionEventLogging:!0,providerName:a}}(n.unit.space.sizes,c):i.Y.fireEvent("getDefaultCreative",{auction:n});o&&(r=mr(o,n),n.addBids([r]))}n.subscribeForEvent("auctionRendered",(function(){n.unit.countOfRenders++,i.Y.fireEvent("onAuctionRendered",{auction:n,bid:r}),i.Y.fireEvent("onAuctionRenderedWebsiteHook",{space:n.unit.space,element:n.unit.element,winningBid:r});const e=n.unit.countOfRenders;!function(e,t){let n,i;if(yi.has(e))Mi.get(e).push(t);else{const r=new Promise(((e,t)=>{n=e,i=t}));yi.set(e,[n,i]),Mi.set(e,[t]),r.then((()=>{Mi.get(e).forEach((e=>e()))})).finally((()=>{yi.delete(e),Mi.delete(e)})),Di(e,n,i)}}(n.unit.element,(()=>{e==n.unit.countOfRenders&&(i.Y.fireEvent("onAdViewed",{auction:n,bid:r}),i.Y.fireEvent("onAdViewedWebsiteHook",{space:n.unit.space,element:n.unit.element,winningBid:r}))}))})),n.subscribeForEvent("renderBidDone",(function(e){i.Y.fireEvent("onAuctionEnded",{auction:n,bid:e.successfulyRenderedBid&&r}),i.Y.fireEvent("onAuctionEndedWebsiteHook",{element:n.unit.element,bid:e.successfulyRenderedBid&&r})})),n.renderBid(r),n.unit.state=Pn.Unit.States.PENDING,ji.spaceRefreshOnInterval&&ji.spaceRefreshOnInterval({space:n.unit.space,unitDispatchCount:n.unit.countOfDispatches})}}))}))}}))}catch(e){wr.errorf(null,"recovery: filterUnits %o",e)}}))}else a([])}))}(t,r))).then((e=>e.map((e=>e.space))))}function f(e){const t='[id="'.concat(e,'"]'),n=r.Z.commonUtils.getElementWithSelector(t);if(!n)return;const i=Vi.getByElement(n);if(i)return i.space;return v().find((e=>{const t=Wn.commonBLUtils.getSpaceElement(e);return t&&t===n}))}c?d="RU"===c:async function(){return await fetch("https://api.btloader.com/country").then((e=>e.json())).then((e=>e.country))}().then((e=>{c=e,d="RU"===c,localStorage.setItem("btUserCountry",c)})),this.invoke=function(d){if(window.__bt_intrnl.stopFlag)return;if(t)return;t=!0,e=d.settings||{};const c=bi.set(d.spaces);var p;s=i.Y.fireEvent("alwaysFilterByGoogletagSlots")||n.Z.upoSettings.amazonBidderConfiguration.enabled,function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t]){var n=[],r=[],o=qi(t),a=or(t);o&&n.push(o),a&&r.push(a);var s=i.Y.fireEvent("thirdPartyModulePreset",{type:t}),d=i.Y.fireEvent("thirdPartyModulePostset",{type:t});s&&n.push(s),d&&r.push(d),kn.Z.forEach(n,(function(e){ur(t,e)})),kn.Z.forEach(r,(function(e){fr(t,e)})),lr(t)}}(e),(e.dfp||s)&&function(){const e=window.googletag&&window.googletag.cmd.unshift?"unshift":"push";window.googletag.cmd[e]((function(){const e=window.googletag.defineSlot;if(window.googletag.defineSlot=function(t,n,i){const r=e(t,n,i);return setTimeout((function(){if(r){if(Gn(r))return;m(r)}}),0),r},i.Y.fireEvent("overrideDefineOutOfPageSlot")){const e=window.googletag.defineOutOfPageSlot;window.googletag.defineOutOfPageSlot=function(t,n){const i=e(t,n);return setTimeout((function(){if(i){if(Gn(i))return;m(i)}}),0),i}}}))}(),window.googletag.cmd.push((function(){var e=window.googletag.pubads().getSlots();kn.Z.forEach(e,(function(e){Gn(e)}))})),p=bi.getAll(),i.Y.fireEvent("listenToNewSpaces",{spaces:p,callback:function(e){if(e){for(let t=0;t<e.length;t++){const n=e[t],i=n&&new Pn.Space(n);bi.set(i)}u()}}}),(a=i.Y.fireEvent("movePositionRules")||[])&&a.length>0&&Wn.movePositionService.setMovePositionRules(a),function(){try{history.pushState=(e=history.pushState,function(){const t=e.apply(this,arguments);return window.dispatchEvent(new Event("pushstate")),window.dispatchEvent(new Event("locationChange")),t}),history.replaceState=(e=>function(){const t=e.apply(this,arguments);return window.dispatchEvent(new Event("replacestate")),window.dispatchEvent(new Event("locationChange")),t})(history.replaceState),window.addEventListener("popstate",(()=>{window.dispatchEvent(new Event("locationChange"))}))}catch(e){si.errorf(null,"setupLocationChangeEvent - error: %o",e)}var e}(),ci();ui(wi()((()=>{u()}),500)),window.addEventListener("locationChange",(()=>{setTimeout(u,1001)})),ji.initialize({invokeSpaces:h}),i.Y.addEventListener("websiteHooksGetSpaces",(function(){return bi.getAll()}));let g=i.Y.fireEvent("scrapePrebidAdUnits");g&&("boolean"==typeof g&&(g={}),function(e){var t,i=e.getAdUnits||l,o=e.filterOutAdUnit,a=e.parseAdUnit,s=e.postParsingAdUnits,d=e.parseInterval||1e3,c=[],h=function(){if((t=i()||[]).length>0){for(var e=[],d=[],l=0;l<t.length;l++){var h=t[l];!h||c.indexOf(h)>=0||(h=JSON.parse(JSON.stringify(h)),!(h=a?a(h):h)||o&&o(h)||(c.push(h),e.push(h)))}if(0===e.length)return;if((e=s?s(e):e).forEach((e=>{if(!e)return;const t=function(e){try{var t={},i=e.selector||r.Z.commonUtils.escapeSelector("#"+e.code),o=e.sizes;if(o||e.mediaTypes&&e.mediaTypes.banner&&e.mediaTypes.banner.sizes&&(o=e.mediaTypes.banner.sizes),!o)return;function c(e){return 2===e.length&&e.every((e=>!Array.isArray(e)&&!isNaN(e)))}function l(e){return"".concat(e[0],"x").concat(e[1])}let u;if(u=c(o)?[l(o)]:o.filter(c).map(l),t.id=e.id,t.id||(t.id="space_"+jn(e.code+"_"+i)),t.id=t.id.substr(0,500),t.name=e.code,t.deviceType=e.deviceType,t.sizes=u,t.selector={position:0,value:i},e.bids){t.preBiddingSettings={enabled:!0,biddingSettings:[]},t.preBiddingSettings.biddingSettings[1]=[];for(var a=0;a<e.bids.length;a++){var s=e.bids[a];s.params=s.params||{};var d="bidder_"+jn(t.id+"_"+s.bidder+"_"+JSON.stringify(s.params).trim());d=d.substr(0,500),t.preBiddingSettings.biddingSettings[1].push({id:d,name:s.bidder,params:s.params})}}else t.preBiddingSettings={enabled:!1};return t.preBiddingSettings.biddingSettings[1]=t.preBiddingSettings.biddingSettings[1].filter(((e,n)=>n===t.preBiddingSettings.biddingSettings[1].findIndex((t=>JSON.stringify(t)===JSON.stringify(e))))),n.Z.SharedObject.getItem("websiteConfig").dfpEnabled?t.postBiddingSettings={adxId:t.name+"_adx",directId:t.name+"_direct",enabled:!0,type:1,order:[{params:{},adx:{bidderID:t.name+"_adx",testCompliance:!0},direct:{bidderID:t.name+"_direct"}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:t.name+"_adx",testCompliance:!1},direct:{bidderID:t.name+"_direct"}}]}:t.postBiddingSettings={enabled:!1},t}catch(e){Kn.errorf(null,"error in parsing prebid ad unit - err: %o",e)}}(e);var i=t&&new Pn.Space(t);i&&(bi.getSpacesByName(i.name).length>0||d.push(i))})),0===d.length)return;bi.set(d),u(d)}};h(),setInterval((function(){h()}),d)}(g)),i.Y.hasEventListener("scrapeGoogletagSlots")&&window.googletag.cmd.push((function(){window.googletag.pubads().getSlots().forEach((e=>{!f(e.getSlotElementId())&&i.Y.fireEvent("scrapeGoogletagSlots",{slot:e})&&bi.set(w(e))}))})),(e.dfp||s)&&window.googletag.cmd.push((function(){window.googletag.pubads().getSlots().forEach((e=>{m(e)}))})),window.__upo_d.getSpaces=function(){return bi.getAll()},window.__upo_d.getUnits=function(){return Vi.getAll()},window.__upo_d.getAuctions=function(){return o},u(c);let b=1;const v=setInterval((function(){15===b&&clearInterval(v),b++,u(c)}),100)};var p,g=[];function m(e){var t=e.getSlotElementId(),n=e.getAdUnitPath(),o=bi.getAll(),a=f(t);if(!a){if(i.Y.fireEvent("useSlotPath"))a=bi.getSpacesByName(n.split("/")[n.split("/").length-1])[0];else{var s=i.Y.fireEvent("customGetSpace",{spaces:o,divId:t,slot:e});s&&(a=kn.Z.find(o,(function(e){return e.name==s.name})))}(a=a&&JSON.parse(JSON.stringify(a)))&&(a.selector.value=r.Z.commonUtils.escapeSelector("#"+t),a.templateSpaceName=a.name,a.name=t,bi.set(a))}!a&&i.Y.fireEvent("scrapeGoogletagSlots",{slot:e})&&bi.set(w(e)),a&&g.indexOf(a)<0&&(g.push(a),clearTimeout(p),p=setTimeout((function(){h(g),g=[]}),100))}function w(t){if(t&&!i.Y.fireEvent("shouldIgnoreGoogletagSlotScraping",{slot:t})){var o=t.getSlotElementId(),a=t.getSizes(),s=kn.Z.map(a,(function(e){if(e.getWidth)return e.getWidth()+"x"+e.getHeight()}));s=kn.Z.filter(s,(function(e){return!!e}));var d="adxId_"+o,c="directId_"+o,l={id:o,name:o,staging:!1,selector:{value:r.Z.commonUtils.escapeSelector("#"+o),position:n.Z.consts.selectorPosition.APPEND_CHILD},sizes:s,preBiddingSettings:{enabled:!0,biddingSettings:{}},postBiddingSettings:{adxId:d,directId:c,enabled:e.dfp,type:1,order:[{params:{},adx:{bidderID:d,testCompliance:!0},direct:{bidderID:c}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:d,testCompliance:!1},direct:{bidderID:c}}]}};return l.preBiddingSettings.biddingSettings[n.Z.consts.headerBiddingType.prebid]=[],new Pn.Space(l)}}const b=[Li,Pi,Ki,Ji,Gi];function v(e){const t=e||bi.getAll();return Vi.purgeUnitsWithNoElementOnPage(),t.filter((e=>!Vi.getBySpace(e)))}};function vr(e){return window.location.hostname.indexOf(e)>-1}const yr={isSite:vr,isSiteOneOf:function(e){return e.some((function(e){return vr(e)}))},showElement:function(e){e&&"none"===window.getComputedStyle(e).display&&e.style.setProperty("display","","")},hasClass:function(e,t){if(e&&t)return(" "+e.className+" ").indexOf(" "+t+" ")>-1},removeClass:function(e,t){if(!t||!e)return;const n=new RegExp("\\b"+e+"\\b","g");let i=t.className;i=i.replace(n,""),t.className=i},addClass:function(e,t){if(!t||!e)return;const n=t.className;n.indexOf(e)>-1||(""!==n&&(e=" "+e),t.className=n+e)}},Mr=new s.Z({prefix:"main: "});window.__upo_d=window.__upo_d||{},window.__upo_d.v="v2",window.__bt_intrnl=window.__bt_intrnl||{},window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[];var _r={"contentEnabled":true,"mobileContentEnabled":true,"dfpEnabled":true,"spaces":{}};let Dr;var Er=_r.spaces||{},Nr="api.btloader.com";const Tr=n.Z.upoSettings.staticDomain,Sr=n.Z.upoSettings.recoveryScriptVersion;(window.location.href.indexOf("bt_debug=true")>=0||"true"===window.localStorage.getItem("bt_debug"))&&(_r.dfpEnabled="true"===localStorage.getItem("forceGAM")||_r.dfpEnabled,_r.mobileContentEnabled="true"===localStorage.getItem("forceMobileContent")||_r.mobileContentEnabled,_r.contentEnabled="true"===localStorage.getItem("forceContent")||_r.contentEnabled);var Br,zr={websiteData:_r,scriptSettings:ai,apiDomain:Nr,staticDomain:Tr,websiteID:"5200539480489984",organizationID:"5714937848528896",dfpEnabled:_r.dfpEnabled,prebidEnabled:!1,mobileContentEnabled:_r.mobileContentEnabled,contentEnabled:_r.contentEnabled,recoveryScriptVersion:Sr};window.__upo_d.websiteConfig=zr,n.Z.SharedObject.setItem("websiteConfig",zr);var Zr=function(){return{browser:qn.Xh(),device:qn.Uh(),platform:qn.Jv(),isMobile:qn.tq()}};var kr=function(){Yr(window),Xr(),Wn.whitelistingIFrame.setupWhitelistingIFrameSettings().then(Ir),i.Y.fireEvent("clearSpaces")&&(Er=[]),xr()},xr=function(){var e=kn.Z.map(Er,(function(e){return e})),t=i.Y.fireEvent("customSpacesFilter",{spaces:e});t&&(Er=kn.Z.filter(Er,(function(e){return kn.Z.find(t,(function(t){return t.id==e.id}))})))},Ir=function(){const e=Wn.whitelistingIFrame.createWhitelistingIFrame();e.addEventListener("load",(function(){Dr=e,n.Z.SharedObject.setItem("whitelistingIFrame",Dr),i.Y.fireEvent("whitelistingIFrameLoaded",{whitelistingIFrame:Dr})})),e.style.width="0px",e.style.height="0px",e.style.display="none",document.body?document.body.appendChild(e):window.addEventListener("DOMContentLoaded",(function(){document.body.appendChild(e)}))},Yr=function(e){e&&function(e,t){if(e.grumi){var n=document.createElement("iframe");n.style="display:none;width:1px;height:1px;",n.addEventListener("load",(function(){n.done||(n.done=!0,e.Node.prototype.appendChild=n.contentWindow.Node.prototype.appendChild,e.HTMLElement.prototype.appendChild=n.contentWindow.Node.prototype.appendChild,t())})),li((function(){document.body.appendChild(n)}))}else t()}(e,(function(){try{e.XMLHttpRequest&&fi.hookFunction(e.XMLHttpRequest.prototype,"open",fi.Types.XHR_OPEN_PRE,void 0,!0),fi.hookFunction(e,"fetch",fi.Types.FETCH_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"insertBefore",fi.Types.INSERT_BEFORE_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"appendChild",fi.Types.APPEND_CHILD_PRE,fi.Types.APPEND_CHILD_POST,!0),e.HTMLImageElement&&fi.hookFunction(e.HTMLImageElement.prototype,"setAttribute",fi.Types.IMG_SET_ATTRIBUTE_PRE,void 0,!0),fi.hookFunction(e,"open",fi.Types.WIN_OPEN_PRE,void 0,!0),e.HTMLElement&&fi.hookPropertySetter(e.HTMLElement.prototype,"innerHTML",fi.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0),e.HTMLElement&&fi.hookFunction(e.HTMLElement.prototype,"hasChildNodes",fi.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,void 0,!0),Or(e)}catch(e){Mr.errorf(null,"`createHooksOnWindow` - %o",e)}}))},Or=function(e){for(var t=n.Z.consts.htmlElements,i=0;i<t.length;i++)e[t[i]]&&fi.hookPropertySetter(e[t[i]].prototype,"src",fi.Types.HTML_SRC_PROP_PRE,void 0,!0)},Xr=function(){fi.addEventListener(fi.Types.HTML_SRC_PROP_PRE,(function(e){var t=e.data;if("object"==typeof t[0]&&t[0].toString&&(t[0]=t[0].toString()),r.Z.urlValidations.isWhitelistURL(t[0],this.tagName))t[0]=r.Z.addAcceptableParam(t[0]);else if(r.Z.urlValidations.isSyncUrl(t[0],this.tagName)&&Dr){if(n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame){const e="new window.Image().src = '"+t[0]+"'";return Dr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return(new Dr.contentWindow.Image).src=t[0]}})),fi.addEventListener(fi.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,(function(e){try{if(kn.Z.hasClass(this,"up-show"))return!1;if(this.childNodes&&this.childNodes.length>0){for(var t=!1,n=0;n<this.children.length;n++)if(kn.Z.hasClass(this.children[n],"up-show")){t=!0;break}if(t)return!1}}catch(e){Mr.errorf(null,"`hasChildNodes` hook - %o",e)}})),fi.addEventListener(fi.Types.HTML_ELEMENT_INNERHTML_POST,(function(e){if(this&&this.classList&&"adsbygoogle"===this.classList[0]){var t=this.querySelector("iframe"),n=t.contentWindow;"about:blank"!==t.src&&""!==t.src||Yr(n);var i=n.document.write;n.document.write=function(e){e&&e.indexOf("show_ads_impl.js")>-1&&(e=r.Z.addAcceptableParam(e)),i.call(this,e)}}})),fi.addEventListener(fi.Types.XHR_OPEN_PRE,(function(e){var t=e.data;r.Z.urlValidations.isWhitelistURL(t[1],"SCRIPT")&&(t[1]=r.Z.addAcceptableParam(t[1]))})),fi.addEventListener(fi.Types.IMG_SET_ATTRIBUTE_PRE,(function(e){var t=e.data;if("srcset"===t[0].toLowerCase()){this.src&&r.Z.urlValidations.isWhitelistURL(this.src,this.tagName)&&(this.src=r.Z.addAcceptableParam(this.src));for(var n=t[1].split(","),i=0;i<n.length;i++){var o=n[i],a=(o=o.trim()).split(" ")[0],s=o.split(" ")[1]||"";r.Z.urlValidations.isWhitelistURL(a,this.tagName)&&(o=r.Z.addAcceptableParam(a)+" "+s,n[i]=o)}t[1]=n.join(",")}else"src"===t[0].toLowerCase()&&r.Z.urlValidations.isWhitelistURL(t[1],this.tagName)&&(t[1]=r.Z.addAcceptableParam(t[1]))})),fi.addEventListener(fi.Types.INSERT_BEFORE_PRE,(function(e){var t=e.data;i.Y.fireEvent("InsertBeforeWebsiteHooksIntercept",{element:t[0]}),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&r.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=r.Z.addAcceptableParam(t[0].src)),"LINK"===t[0].tagName&&t[0].href&&r.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=r.Z.addAcceptableParam(t[0].href))})),fi.addEventListener(fi.Types.APPEND_CHILD_PRE,(function(e){var t=e.data;if(t[0]&&t[0].src&&0===t[0].src.indexOf("blob:"))e.shouldStop=!0;else{if(t[0].children&&t[0].children.length>0)for(var i=0;i<t[0].children.length;i++){var o=t[0].children[i];if(o.src&&r.Z.urlValidations.isWhitelistURL(o.src,o.tagName)&&(o.src=r.Z.addAcceptableParam(o.src)),o.src&&r.Z.urlValidations.isSyncUrl(o.src,o.tagName)&&Dr){if(n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame){const e="new Image().src = '"+t[0].src+"'";return Dr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return Dr.contentDocument.body.appendChild(t[0])}}if("LINK"===t[0].tagName&&t[0].href&&r.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=r.Z.addAcceptableParam(t[0].href)),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&r.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=r.Z.addAcceptableParam(t[0].src)),r.Z.urlValidations.isSyncUrl(t[0].src,t[0].tagName)&&Dr){if(n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame){const e="new Image().src = '"+t[0].src+"'";return Dr.contentWindow.postMessage({type:"eval",code:e},"*"),t[0]}return Dr.contentDocument.body.appendChild(t[0])}}})),fi.addEventListener(fi.Types.APPEND_CHILD_POST,(function(e){var t=e.data;"IFRAME"!==t.tagName||"about:blank"!==t.src&&""!==t.src||Yr(t.contentWindow)})),fi.addEventListener(fi.Types.WIN_OPEN_PRE,(function(e){if(e.data[0]&&(e.data[0].indexOf("clickout.sharethrough.com")>-1||e.data[0].indexOf("3lift.com/pass")>-1)&&Dr&&!n.Z.upoSettings.whitelistingIFrameSettings.isOurOriginWhitelistingIFrame)return Dr.contentWindow.open(e.data[0])})),fi.addEventListener(fi.Types.SET_ATTRIBUTE_PRE,(function(e){var t=e.data[0],n=e.data[1];"class"===t&&this.className.indexOf("up-show")>=0&&n.indexOf("up-show")<0&&(e.data[1]=e.data[1]+" up-show")}))},Hr=function(){window.uponit=window.uponit||{que:[]},window.uponit.addModifier=function(e,t){window.uponit.modifiers=window.uponit.modifiers||{},window.uponit.modifiers[e]=window.uponit.modifiers[e]||[],window.uponit.modifiers[e].push(t)};for(var e=0;e<window.uponit.que.length;e++){var t=window.uponit.que[e];try{t()}catch(e){Mr.errorf(null,"window.uponit.que - %o",e)}}window.uponit.que.push=function(e){e()}};const Rr=e=>{const t=Object.entries(e).map((e=>{let[t,n]=e;const i={};i.id=t,i.name=n.name,i.staging=n.staging,i.deviceType=n.device_type,i.selector={position:n.selector.position,value:n.selector.value},i.sizes=n.sizes;const r=n.prebids&&Object.keys(n.prebids).length>0;return i.preBiddingSettings={enabled:r,biddingSettings:{}},r&&(i.preBiddingSettings.biddingSettings[1]=[],Object.entries(n.prebids).forEach((e=>{let[t,n]=e;const r={id:t,name:n.bidder,params:n.params};i.preBiddingSettings.biddingSettings[1].push(r)}))),i.postBiddingSettings={adxId:n.adx,directId:n.direct,enabled:zr.dfpEnabled&&"0"!=n.adx,type:1,order:[{params:{},adx:{bidderID:n.adx,testCompliance:!0},direct:{bidderID:n.direct}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:n.adx,testCompliance:!1},direct:{bidderID:n.direct}}]},[t,i]}));return Object.fromEntries(t)};var Cr=function(e){var t=[];for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];i.id=n;var r=new Pn.Space(i);t.push(r)}return t};!function(){if(window.uponitAlreadyLoaded)return;window.uponitAlreadyLoaded=!0,u.init(Nr,{secure:!0});try{gi.init(),Bn.Verifications.run(),Bn.Report.init()}catch(e){Mr.errorf(null,"init - initializing log, verification, and report layers - %o",e)}Br=Zr(),window.__upo_d.isMobile=Br.isMobile;var e={browser:Br.browser,device:Br.device,platform:Br.platform,isMobile:Br.isMobile};i.Y.addEventListener("getUserEnvDataWebsiteHooks",(function(){return e})),window.__upo_d.userEvnData=e,function(){try{window.__tcfapi("addEventListener",0,(function(e,t){if(!t||"useractioncomplete"!==e.eventStatus&&"tcloaded"!==e.eventStatus){if(!t){var n="Unable to attach event listener. tcfapi does not adhere to IAB spec. ";n+="listenerSuccess: "+t+". ",e&&(n+="eventStatus: "+e.eventStatus+"."),i.Y.fireEvent("consentData",{error:{message:n}})}}else i.Y.fireEvent("consentData",{tcData:e})}))}catch(e){i.Y.fireEvent("consentData",{error:e})}}(),function(){try{const e=new s.Z({prefix:"hook: "});window.eval.call(window,"(function (CustomEvents, websiteConfig, lg, hookUtils) {\n"+atob("")+"\n})")(i.Y,zr,e,yr)}catch(e){Mr.errorf(null,"failed to pass CustomEvents, websiteConfig, logger and hooks utility functions - %o",e)}}(),Object.entries(oi).forEach((e=>{let[t,n]=e;if(ii[t]){const{hookName:e,parseSettingValue:r,handler:o}=ii[t],a=r?r(n):n;e?i.Y.addEventListener(e,(e=>o(a,e))):(o(a),ni.infof(null,"loadSettings: ".concat(t," (no associated hook): Setting applied.")))}else ni.errorf(null,"loadSettings: No setting handler found for %o (setting will not be applied).",t)})),function(){const e=i.Y.fireEvent("amazonBidderConfiguration");e&&e.pubID&&(n.Z.upoSettings.amazonBidderConfiguration.enabled=!0,n.Z.upoSettings.amazonBidderConfiguration=Object.assign(n.Z.upoSettings.amazonBidderConfiguration,e))}();const t=i.Y.fireEvent("hookDFPEnabledValue");t&&(zr.dfpEnabled=t);try{Er=Cr(Rr(Er))}catch(e){Mr.errorf(null,"init - parsing static spaces - %o",e)}if(Hr(),i.Y.fireEvent("shouldDisableUponit"))Mr.noticef(null,"halting: we have been disabled by hooks");else{i.Y.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsInit",payload:{detail:!0}}),i.Y.fireEvent("FirePublisherEvent",{eventName:"uponitInit",payload:{detail:!0}}),kr(),zr.prebidEnabled=!(!kn.Z.find(Er,(function(e){return e.preBiddingSettings&&e.preBiddingSettings.enabled}))&&!i.Y.fireEvent("scrapePrebidAdUnits"));var r={spaces:Er,settings:{prebid:i.Y.fireEvent("forcePrebidEnabled")||zr.prebidEnabled,dfp:zr.dfpEnabled}};if("1"===sessionStorage.getItem("crumbs"))new Promise((function(e,t){var n=!1,i=new XMLHttpRequest;i.onreadystatechange=function(r){if(4==i.readyState){if(0==i.status){if(n)return;return n=!0,void t("status -> "+i.status)}var s=o(a(i.getAllResponseHeaders()));if(s["x-crumbs-interests"])if(i.status>=200&&i.status<300){var d={status:i.status,headers:s,body:i.response};e(d)}else t("status -> "+i.status);else t("Header Not Found: x-crumbs-interests")}},i.onerror=function(e){n||(n=!0,t(e))},i.open("GET","https://i.btloader.com",!0),i.send()})).then((function(e){e.headers["x-crumbs-interests"]}),(function(e){Mr.errorf(null,"fetch crumbs interests faild - %o",e)}));li((function(){i.Y.fireEvent("onDomLoaded"),i.Y.fireEvent("onBeforeRecovery",{spaces:Er,settings:r.settings}),br.invoke(r)}))}}()})()})();
//# sourceMappingURL=recovery.js.map

})({});
